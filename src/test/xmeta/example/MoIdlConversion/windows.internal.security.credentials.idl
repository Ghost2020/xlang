










namespace Windows.Internal.Security.Credentials
{
    [contractversion(1)]
    [internal]
    apicontract InternalContract{};



    [marshaling_behavior(agile)]
    [contract(Windows.Internal.Security.Credentials.InternalContract, 1)]
    [constructor_name("Windows.Internal.Security.Credentials.IWebAccountProviderInternalFactory2", 7f565cd8-5dff-4b5e-abdf-1bb1f8b913f3)]
    [interface_name("Windows.Internal.Security.Credentials.IWebAccountProviderInternal", 30c936f0-4c20-45e9-ba93-5a001f1506f9)]
    [threading(both)]
    runtimeclass WebAccountProviderInternal
    {
        [method_name( "CreateWebAccountProviderInternal" )] WebAccountProviderInternal(String hsProviderId, String hsDisplayName, String hsPurpose, String hsAuthority, Windows.Foundation.Uri iconUri, UInt64 userContextToken, Boolean isEnumerableStateSupported, Boolean isSystemProvider);

        [contract(Windows.Internal.Security.Credentials.InternalContract, 1)]
        [constructor_name("Windows.Internal.Security.Credentials.IWebAccountProviderInternalFactory", 4f81bfe6-fdb4-4dc4-86b9-4af32d514b78)]
        {
            [method_name( "CreateWebAccountProviderInternal" )] WebAccountProviderInternal(String hsProviderId, String hsDisplayName, String hsPurpose, String hsAuthority, Windows.Foundation.Uri iconUri, UInt64 userContextToken);
            [method_name( "CreateWebAccountProviderInternalFromBytes" )] WebAccountProviderInternal(UInt8[] bytes);
        }
        Windows.Security.Credentials.WebAccountProvider WebAccountProvider{ get; };
    }




    [marshaling_behavior(agile)]
    [contract(Windows.Internal.Security.Credentials.InternalContract, 1)]
    [constructor_name("Windows.Internal.Security.Credentials.IWebAccountInternalFactory2", 414f1885-ae5f-4340-a5de-2e39df0c8605)]
    [interface_name("Windows.Internal.Security.Credentials.IWebAccountInternal", 281d779d-89e9-4af3-9f42-4d2379d0f1b0)]
    [threading(both)]
    runtimeclass WebAccountInternal
    {
        [method_name( "CreateWebAccountInternalWithMapAndRevisionNumber" )] WebAccountInternal(Windows.Security.Credentials.WebAccountProvider provider, String userName, Windows.Security.Credentials.WebAccountState state, String webAccountId, Windows.Foundation.Collections.IMapView <String, String>  props, Windows.Security.Authentication.Web.Provider.WebAccountScope scope, WebAccountEnumerableState enumerableState, String PerUserId, String RevisionNumber);

        [contract(Windows.Internal.Security.Credentials.InternalContract, 1)]
        [constructor_name("Windows.Internal.Security.Credentials.IWebAccountInternalFactory", 067cd3b2-1f07-4710-8ae5-5cd2e71efc11)]
        {
            [method_name( "CreateWebAccountInternal" )] WebAccountInternal(Windows.Security.Credentials.WebAccountProvider provider, String userName, Windows.Security.Credentials.WebAccountState state, String webAccountId, Windows.Foundation.Collections.IMapView <String, String>  props);
            [method_name( "CreateWebAccountInternalFromBytes" )] WebAccountInternal(UInt8[] bytes);
            [method_name( "CreateWebAccountInternalWithScope" )] WebAccountInternal(Windows.Security.Credentials.WebAccountProvider provider, String userName, Windows.Security.Credentials.WebAccountState state, String webAccountId, Windows.Foundation.Collections.IMapView <String, String>  props, Windows.Security.Authentication.Web.Provider.WebAccountScope scope);
            [method_name( "CreateWebAccountInternalWithMapAndRevisionNumber" )] WebAccountInternal(Windows.Security.Credentials.WebAccountProvider provider, String userName, Windows.Security.Credentials.WebAccountState state, String webAccountId, Windows.Foundation.Collections.IMapView <String, String>  props, Windows.Security.Authentication.Web.Provider.WebAccountScope scope, String PerUserId, String RevisionNumber);
        }
        Windows.Security.Credentials.WebAccount WebAccount{ get; };
    }

    [contract(Windows.Internal.Security.Credentials.InternalContract, 1)]
    enum WebAccountEnumerableState
    {
        NotDefined,
        Allowed,
        NotAllowed,
        AlwaysAllowed,
        AlwaysNotAllowed,
    };


    [contract(Windows.Internal.Security.Credentials.InternalContract, 1)]
    [uuid(2b9c347e-56fb-4947-ab47-6982bb2cf28d)]
    interface IWebAccountProviderWithMrtResourceIcon
    {
        String IconMrtResourceString{ get; };
        String IconMrtResourceString{ set; };
    };

    [contract(Windows.Internal.Security.Credentials.InternalContract, 1)]
    [uuid(3b043d7e-726f-41e2-8933-f968f503b854)]
    interface IWebAccountProviderSystemInformation
    {
        String LastSelectedAccountId{ get; };
        String LastSelectedAccountId{ set; };
        Boolean AddNewAccountRequested{ get; };
        Boolean AddNewAccountRequested{ set; };
        void UpdateProviderId(String newId);
        String ApplicationUserModelId{ get; };
        String ApplicationUserModelId{ set; };
    };

    [uuid(26af3d4c-8b79-408c-ae0f-df1aadbe137f)]
    [contract(Windows.Internal.Security.Credentials.InternalContract, 1)]
    interface IWebAccountProviderSystemInformation2
    {
        Boolean IsEnumerableStateSupported{ get; };
    };

    [uuid(40285a2b-65d5-41f5-b904-76c860d86e26)]
    [contract(Windows.Internal.Security.Credentials.InternalContract, 1)]
    interface IWebAccountSystemInformation
    {
        Windows.Security.Authentication.Web.Provider.WebAccountScope Scope{ get; };
        Windows.Security.Authentication.Web.Provider.WebAccountScope Scope{ set; };
        String PerUserId{ get; };
        String PerUserId{ set; };
        String RevisionNumber{ get; };
    };

    [uuid(53fb2cf3-c2d6-483b-910e-0af72b947252)]
    [contract(Windows.Internal.Security.Credentials.InternalContract, 1)]
    interface IWebAccountSystemInformation2
    {
        Windows.Internal.Security.Credentials.WebAccountEnumerableState EnumerableState{ get; };
        Windows.Internal.Security.Credentials.WebAccountEnumerableState EnumerableState{ set; };
        Windows.Foundation.IAsyncAction SetPersistedEnumerableStateAsync(WebAccountEnumerableState value);
    };

    [contract(Windows.Internal.Security.Credentials.InternalContract, 1)]
    [uuid(c997b7de-ff59-4392-bcde-50ea5ffc1e1c)]
    interface IWebAccountProviderUserContext
    {
        UInt64 UserContextToken{ get; };
    };

}
