







namespace Windows.ApplicationModel.Activation
{
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [uuid(ab14bee0-e760-440e-a91c-44796de3a92d)]
    interface IBackgroundActivatedEventArgs
    {
        Windows.ApplicationModel.Background.IBackgroundTaskInstance TaskInstance{ get; };
    };

}
namespace Windows.ApplicationModel.Background
{
    [uuid(865bda7a-21d8-4573-8f32-928a1b0641f6)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface IBackgroundTaskInstance
    {
        Guid InstanceId{ get; };
        Windows.ApplicationModel.Background.BackgroundTaskRegistration Task{ get; };
        UInt32 Progress{ get; };
        UInt32 Progress{ set; };
        Object TriggerDetails{ get; };
        event Windows.ApplicationModel.Background.BackgroundTaskCanceledEventHandler Canceled;
        UInt32 SuspendedCount{ get; };
        Windows.ApplicationModel.Background.BackgroundTaskDeferral GetDeferral();
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.ApplicationModel.Background.IBackgroundTaskRegistrationStatics", 4c542f69-b000-42ba-a093-6a563c65e3f8)]
    [threading(both)]
    runtimeclass BackgroundTaskRegistration
        : [default]Windows.ApplicationModel.Background.IBackgroundTaskRegistration
        , [contract(Windows.Foundation.UniversalApiContract, 1)]
        Windows.ApplicationModel.Background.IBackgroundTaskRegistration2
        , [contract(Windows.Foundation.UniversalApiContract, 4)]
        Windows.ApplicationModel.Background.IBackgroundTaskRegistration3
    {
        static Windows.Foundation.Collections.IMapView <Guid, Windows.ApplicationModel.Background.IBackgroundTaskRegistration>  AllTasks{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [static_name("Windows.ApplicationModel.Background.IBackgroundTaskRegistrationStatics2", 174b671e-b20d-4fa9-ad9a-e93ad6c71e01)]
        {
            static Windows.Foundation.Collections.IMapView <String, Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup>  AllTaskGroups{ get; };
            static Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup GetTaskGroup(String groupId);
        }
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(a6c4bac0-51f8-4c57-ac3f-156dd1680c4f)]
    delegate void BackgroundTaskCanceledEventHandler(IBackgroundTaskInstance sender, BackgroundTaskCancellationReason reason);

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum BackgroundTaskCancellationReason
    {
        Abort,
        Terminating,
        LoggingOff,
        ServicingUpdate,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        IdleTask,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Uninstall,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        ConditionLoss,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        SystemPolicy,
        [deprecated("QuietHoursEntered is deprecated after Windows 8.1", deprecate, Windows.Foundation.UniversalApiContract, 0x10000)]
        QuietHoursEntered,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        ExecutionTimeExceeded,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        ResourceRevocation,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        EnergySaver,
    };

    [marshaling_behavior(standard)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Background.IBackgroundTaskDeferral", 93cc156d-af27-4dd3-846e-24ee40cadd25)]
    runtimeclass BackgroundTaskDeferral
    {
        void Complete();
    }

}
namespace Windows.ApplicationModel.Activation
{
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [marshaling_behavior(agile)]
    runtimeclass BackgroundActivatedEventArgs
        : [default]Windows.ApplicationModel.Activation.IBackgroundActivatedEventArgs
    {
    }

}
namespace Windows.ApplicationModel.Background
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum BackgroundWorkCostValue
    {
        Low,
        Medium,
        High,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum BackgroundTaskThrottleCounter
    {
        All,
        Cpu,
        Network,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(46e0683c-8a88-4c99-804c-76897f6277a6)]
    delegate void BackgroundTaskProgressEventHandler(BackgroundTaskRegistration sender, BackgroundTaskProgressEventArgs args);

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Background.IBackgroundTaskProgressEventArgs", fb1468ac-8332-4d0a-9532-03eae684da31)]
    runtimeclass BackgroundTaskProgressEventArgs
    {
        Guid InstanceId{ get; };
        UInt32 Progress{ get; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(5b38e929-a086-46a7-a678-439135822bcf)]
    delegate void BackgroundTaskCompletedEventHandler(BackgroundTaskRegistration sender, BackgroundTaskCompletedEventArgs args);

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Background.IBackgroundTaskCompletedEventArgs", 565d25cf-f209-48f4-9967-2b184f7bfbf0)]
    runtimeclass BackgroundTaskCompletedEventArgs
    {
        Guid InstanceId{ get; };
        void CheckResult();
    }



    [uuid(4f7d0176-0c76-4fb4-896d-5de1864122f6)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface IBackgroundTaskInstance2 requires Windows.ApplicationModel.Background.IBackgroundTaskInstance
    {
        UInt32 GetThrottleCount(BackgroundTaskThrottleCounter counter);
    };

    [contractversion(1)]
    [internal]
    apicontract InternalContract{};

    [contract(Windows.ApplicationModel.Background.InternalContract, 1)]
    enum BackgroundTaskYieldStatus
    {
        Success,
        Timeout,
        TaskExiting,
    };

    [contract(Windows.ApplicationModel.Background.InternalContract, 1)]
    [uuid(6639ed40-1f50-4ce2-a825-503edacef44f)]
    [internal]
    interface IBackgroundTaskYieldable
    {
    };


    [contract(Windows.ApplicationModel.Background.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Background.IBackgroundTaskYieldAnyResult", a700a55c-c19e-4f6e-9bd8-673683ef3171)]
    runtimeclass BackgroundTaskYieldAnyResult
    {
        Windows.ApplicationModel.Background.BackgroundTaskYieldStatus Status{ get; };
        Windows.ApplicationModel.Background.IBackgroundTaskYieldable Source{ get; };
    }

    [uuid(30c408eb-6e1b-4e07-a679-51cd46ea9e28)]
    [contract(Windows.ApplicationModel.Background.InternalContract, 1)]
    interface IBackgroundTaskInstance3 requires Windows.ApplicationModel.Background.IBackgroundTaskInstance, Windows.ApplicationModel.Background.IBackgroundTaskInstance2
    {
        Windows.ApplicationModel.Background.BackgroundTaskYieldStatus YieldUntil(IBackgroundTaskYieldable yieldObject, Windows.Foundation.TimeSpan desiredTimeOut);
        Windows.ApplicationModel.Background.BackgroundTaskYieldAnyResult YieldUntilAny(Windows.Foundation.Collections.IIterable <Windows.ApplicationModel.Background.IBackgroundTaskYieldable>  yieldObjects, Windows.Foundation.TimeSpan desiredTimeOut);
        Windows.ApplicationModel.Background.BackgroundTaskYieldStatus YieldForTime(Windows.Foundation.TimeSpan desiredTimeOut);
        Windows.Foundation.TimeSpan MinYieldTimeout{ get; };
        Windows.Foundation.TimeSpan MaxYieldTimeout{ get; };
    };

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [uuid(7f29f23c-aa04-4b08-97b0-06d874cdabf5)]
    interface IBackgroundTaskInstance4 requires Windows.ApplicationModel.Background.IBackgroundTaskInstance
    {
        Windows.System.User User{ get; };
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [uuid(7d13d534-fd12-43ce-8c22-ea1ff13c06df)]
    interface IBackgroundTask
    {
        void Run(IBackgroundTaskInstance taskInstance);
    };

    [uuid(10654cc2-a26e-43bf-8c12-1fb40dbfbfa0)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface IBackgroundTaskRegistration
    {
        Guid TaskId{ get; };
        String Name{ get; };
        event Windows.ApplicationModel.Background.BackgroundTaskProgressEventHandler Progress;
        event Windows.ApplicationModel.Background.BackgroundTaskCompletedEventHandler Completed;
        void Unregister(Boolean cancelTask);
    };

    [uuid(6138c703-bb86-4112-afc3-7f939b166e3b)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface IBackgroundTaskRegistration2 requires Windows.ApplicationModel.Background.IBackgroundTaskRegistration
    {
        Windows.ApplicationModel.Background.IBackgroundTrigger Trigger{ get; };
    };

    [uuid(84b3a058-6027-4b87-9790-bdf3f757dbd7)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface IBackgroundTrigger
    {
    };

    [contract(Windows.Foundation.UniversalApiContract, 4)]
    [uuid(fe338195-9423-4d8b-830d-b1dd2c7badd5)]
    interface IBackgroundTaskRegistration3 requires Windows.ApplicationModel.Background.IBackgroundTaskRegistration
    {
        Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup TaskGroup{ get; };
    };

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 4)]
    [constructor_name("Windows.ApplicationModel.Background.IBackgroundTaskRegistrationGroupFactory", 83d92b69-44cf-4631-9740-03c7d8741bc5)]
    [interface_name("Windows.ApplicationModel.Background.IBackgroundTaskRegistrationGroup", 2ab1919a-871b-4167-8a76-055cd67b5b23)]
    [threading(both)]
    runtimeclass BackgroundTaskRegistrationGroup
    {
        [method_name( "Create" )] BackgroundTaskRegistrationGroup(String id);
        [method_name( "CreateWithName" )] BackgroundTaskRegistrationGroup(String id, String name);
        String Id{ get; };
        String Name{ get; };
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup, Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs>  BackgroundActivated;
        Windows.Foundation.Collections.IMapView <Guid, Windows.ApplicationModel.Background.BackgroundTaskRegistration>  AllTasks{ get; };
    }




    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(ae48a1ee-8951-400a-8302-9c9c9a2a3a3b)]
    interface IBackgroundCondition
    {
    };






    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(standard)]
    [interface_name("Windows.ApplicationModel.Background.IBackgroundTaskBuilder", 0351550e-3e64-4572-a93a-84075a37c917)]
    [threading(mta)]
    runtimeclass BackgroundTaskBuilder
    {
        BackgroundTaskBuilder();
        String TaskEntryPoint{ set; };
        String TaskEntryPoint{ get; };
        void SetTrigger(IBackgroundTrigger trigger);
        void AddCondition(IBackgroundCondition condition);
        String Name{ set; };
        String Name{ get; };
        Windows.ApplicationModel.Background.BackgroundTaskRegistration Register();

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.ApplicationModel.Background.IBackgroundTaskBuilder2", 6ae7cfb1-104f-406d-8db6-844a570f42bb)]
        {
            Boolean CancelOnConditionLoss{ set; };
            Boolean CancelOnConditionLoss{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.ApplicationModel.Background.IBackgroundTaskBuilder3", 28c74f4a-8ba9-4c09-a24f-19683e2c924c)]
        {
            Boolean IsNetworkRequested{ set; };
            Boolean IsNetworkRequested{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [interface_name("Windows.ApplicationModel.Background.IBackgroundTaskBuilder4", 4755e522-cba2-4e35-bd16-a6da7f1c19aa)]
        {
            Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup TaskGroup{ get; };
            Windows.ApplicationModel.Background.BackgroundTaskRegistrationGroup TaskGroup{ set; };
        }
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.ApplicationModel.Background.IBackgroundWorkCostStatics", c740a662-c310-4b82-b3e3-3bcfb9e4c77d)]
    [threading(both)]
    runtimeclass BackgroundWorkCost
    {
        static Windows.ApplicationModel.Background.BackgroundWorkCostValue CurrentBackgroundWorkCost{ get; };
    }



}
