











namespace Windows.UI.Shell
{
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Shell.ITaskbarManagerStatics", db32ab74-de52-4fe6-b7b6-95ff9f8395df)]
    [interface_name("Windows.UI.Shell.ITaskbarManager", 87490a19-1ad9-49f4-b2e8-86738dc5ac40)]
    [threading(both)]
    runtimeclass TaskbarManager
    {
        static Windows.UI.Shell.TaskbarManager GetDefault();
        Boolean IsSupported{ get; };
        Boolean IsPinningAllowed{ get; };
        Windows.Foundation.IAsyncOperation <Boolean>  IsCurrentAppPinnedAsync();
        Windows.Foundation.IAsyncOperation <Boolean>  IsAppListEntryPinnedAsync(Windows.ApplicationModel.Core.AppListEntry appListEntry);
        Windows.Foundation.IAsyncOperation <Boolean>  RequestPinCurrentAppAsync();
        Windows.Foundation.IAsyncOperation <Boolean>  RequestPinAppListEntryAsync(Windows.ApplicationModel.Core.AppListEntry appListEntry);

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [interface_name("Windows.UI.Shell.ITaskbarManager2", 79f0a06e-7b02-4911-918c-dee0bbd20ba4)]
        {
            Windows.Foundation.IAsyncOperation <Boolean>  IsSecondaryTilePinnedAsync(String tileId);
            Windows.Foundation.IAsyncOperation <Boolean>  RequestPinSecondaryTileAsync(Windows.UI.StartScreen.SecondaryTile secondaryTile);
            Windows.Foundation.IAsyncOperation <Boolean>  TryUnpinSecondaryTileAsync(String tileId);
        }
    }

}
