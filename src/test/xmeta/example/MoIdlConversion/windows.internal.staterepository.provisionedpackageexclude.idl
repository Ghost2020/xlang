










namespace Windows.Internal.StateRepository
{
    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [contract(Windows.Internal.StateRepository.StateRepositoryContract, 1)]
    [static_name("Windows.Internal.StateRepository.IProvisionedPackageExcludeStatics", 72a48251-3d76-4cc6-b9c5-7cb8e30aa49c)]
    [interface_name("Windows.Internal.StateRepository.IProvisionedPackageExclude", 7138694d-7954-436c-9e37-c93c87ae1f09)]
    [threading(both)]
    runtimeclass ProvisionedPackageExclude
    {
        static Boolean Exists(Int64 provisionedPackageExcludeID);
        static Boolean ExistsByPackageFamily(PackageFamily PackageFamily);
        static Windows.Internal.StateRepository.ProvisionedPackageExclude TryGet(Int64 provisionedPackageExcludeID);
        static Windows.Internal.StateRepository.ProvisionedPackageExclude TryGetByPackageFamily(PackageFamily PackageFamily);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.ProvisionedPackageExclude>  Find();
        ProvisionedPackageExclude();
        Int64 _ProvisionedPackageExcludeID{ get; };
        Int64 _ProvisionedPackageExcludeID{ set; };
        UInt64 _Revision{ get; };
        UInt64 _Revision{ set; };
        Int64 User{ get; };
        Int64 User{ set; };
        Windows.Internal.StateRepository.User GetUser();
        void SetUser(User value);
        Int64 PackageFamily{ get; };
        Int64 PackageFamily{ set; };
        Windows.Internal.StateRepository.PackageFamily GetPackageFamily();
        void SetPackageFamily(PackageFamily value);
        Boolean Is_DictionaryNull{ get; };
        void Set_DictionaryToNull();
        void Get_Dictionary(out UInt8[] value);
        void Set_Dictionary(UInt8[] value);
        Windows.Foundation.Collections.IPropertySet Get_DictionaryAsPropertySet();
    }


}
