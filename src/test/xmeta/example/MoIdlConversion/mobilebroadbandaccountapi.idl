











namespace Windows.Networking.NetworkOperators
{
    [contractversion(1)]
    apicontract LegacyNetworkOperatorsContract{};

    [flags]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum DataClasses
    {
        None,
        Gprs,
        Edge,
        Umts = 4,
        Hsdpa = 8,
        Hsupa = 16,
        LteAdvanced = 32,
        Cdma1xRtt = 65536,
        Cdma1xEvdo = 131072,
        Cdma1xEvdoRevA = 262144,
        Cdma1xEvdv = 524288,
        Cdma3xRtt = 1048576,
        Cdma1xEvdoRevB = 2097152,
        CdmaUmb = 4194304,
        Custom = 0x80000000,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum MobileBroadbandDeviceType
    {
        Unknown,
        Embedded,
        Removable,
        Remote,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum NetworkDeviceStatus
    {
        DeviceNotReady,
        DeviceReady,
        SimNotInserted,
        BadSim,
        DeviceHardwareFailure,
        AccountNotActivated,
        DeviceLocked,
        DeviceBlocked,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum NetworkRegistrationState
    {
        None,
        Deregistered,
        Searching,
        Home,
        Roaming,
        Partner,
        Denied,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum MobileBroadbandRadioState
    {
        Off,
        On,
    };

    [contract(Windows.Foundation.UniversalApiContract, 6)]
    enum NetworkOperatorDataUsageNotificationKind
    {
        DataUsageProgress,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum NetworkOperatorEventMessageType
    {
        Gsm,
        Cdma,
        Ussd,
        DataPlanThresholdReached,
        DataPlanReset,
        DataPlanDeleted,
        ProfileConnected,
        ProfileDisconnected,
        RegisteredRoaming,
        RegisteredHome,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        TetheringEntitlementCheck,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        TetheringOperationalStateChanged,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        TetheringNumberOfClientsChanged,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum MobileBroadbandAccountWatcherStatus
    {
        Created,
        Started,
        EnumerationCompleted,
        Stopped,
        Aborted,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum TetheringOperationalState
    {
        Unknown,
        On,
        Off,
        InTransition,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum TetheringCapability
    {
        Enabled,
        DisabledByGroupPolicy,
        DisabledByHardwareLimitation,
        DisabledByOperator,
        DisabledBySku,
        DisabledByRequiredAppNotInstalled,
        DisabledDueToUnknownCause,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        DisabledBySystemCapability,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum TetheringOperationStatus
    {
        Success,
        Unknown,
        MobileBroadbandDeviceOff,
        WiFiDeviceOff,
        EntitlementCheckTimeout,
        EntitlementCheckFailure,
        OperationInProgress,
        [contract(Windows.Foundation.UniversalApiContract, 3)]
        BluetoothDeviceOff,
        [contract(Windows.Foundation.UniversalApiContract, 3)]
        NetworkLimitedConnectivity,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum MobileBroadbandPinLockState
    {
        Unknown,
        Unlocked,
        PinRequired,
        PinUnblockKeyRequired,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum MobileBroadbandPinType
    {
        None,
        Custom,
        Pin1,
        Pin2,
        SimPin,
        FirstSimPin,
        NetworkPin,
        NetworkSubsetPin,
        ServiceProviderPin,
        CorporatePin,
        SubsidyLock,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum MobileBroadbandPinFormat
    {
        Unknown,
        Numeric,
        Alphanumeric,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum MobileBroadbandUiccAppOperationStatus
    {
        Success,
        InvalidUiccFilePath,
        AccessConditionNotHeld,
        UiccBusy,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum UiccAppKind
    {
        Unknown,
        MF,
        MFSim,
        MFRuim,
        USim,
        CSim,
        ISim,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum UiccAppRecordKind
    {
        Unknown,
        Transparent,
        RecordOriented,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum UiccAccessCondition
    {
        AlwaysAllowed,
        Pin1,
        Pin2,
        Pin3,
        Pin4,
        Administrative5,
        Administrative6,
        NeverAllowed,
    };

    [contract(Windows.Foundation.UniversalApiContract, 5)]
    enum MobileBroadbandModemStatus
    {
        Success,
        OtherFailure,
        Busy,
        NoDeviceSupport,
    };


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [dualapipartition(0x6020000)]
    [static_name("Windows.Networking.NetworkOperators.IMobileBroadbandAccountStatics", aa7f4d24-afc1-4fc8-ae9a-a9175310faad)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandAccount", 36c24ccd-cee2-43e0-a603-ee86a36d6570)]
    [threading(both)]
    runtimeclass MobileBroadbandAccount
    {
        static Windows.Foundation.Collections.IVectorView <String>  AvailableNetworkAccountIds{ get; };
        static Windows.Networking.NetworkOperators.MobileBroadbandAccount CreateFromNetworkAccountId(String networkAccountId);
        String NetworkAccountId{ get; };
        Guid ServiceProviderGuid{ get; };
        String ServiceProviderName{ get; };
        Windows.Networking.NetworkOperators.MobileBroadbandNetwork CurrentNetwork{ get; };
        Windows.Networking.NetworkOperators.MobileBroadbandDeviceInformation CurrentDeviceInformation{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandAccount2", 38f52f1c-1136-4257-959f-b658a352b6d4)]
        {
            Windows.Foundation.Collections.IVectorView <Windows.Networking.Connectivity.ConnectionProfile>  GetConnectionProfiles();
        }

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandAccount3", 092a1e21-9379-4b9b-ad31-d5fee2f748c6)]
        {
            Windows.Foundation.Uri AccountExperienceUrl{ get; };
        }
    }


    [dualapipartition(0x6020000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandNetwork", cb63928c-0309-4cb6-a8c1-6a5a3c8e1ff6)]
    runtimeclass MobileBroadbandNetwork
    {
        Windows.Networking.Connectivity.NetworkAdapter NetworkAdapter{ get; };
        Windows.Networking.NetworkOperators.NetworkRegistrationState NetworkRegistrationState{ get; };
        UInt32 RegistrationNetworkError{ get; };
        UInt32 PacketAttachNetworkError{ get; };
        UInt32 ActivationNetworkError{ get; };
        String AccessPointName{ get; };
        Windows.Networking.NetworkOperators.DataClasses RegisteredDataClass{ get; };
        String RegisteredProviderId{ get; };
        String RegisteredProviderName{ get; };
        void ShowConnectionUI();

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandNetwork2", 5a55db22-62f7-4bdd-ba1d-477441960ba0)]
        {
            Windows.Foundation.IAsyncOperation <Boolean>  GetVoiceCallSupportAsync();
            Windows.Foundation.Collections.IVectorView <Windows.Networking.NetworkOperators.MobileBroadbandUiccApp>  RegistrationUiccApps{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandNetwork3", 33670a8a-c7ef-444c-ab6c-df7ef7a390fe)]
        {
            Windows.Foundation.IAsyncOperation <Windows.Networking.NetworkOperators.MobileBroadbandCellsInfo>  GetCellsInfoAsync();
        }
    }

    [dualapipartition(0x6020000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandDeviceInformation", e6d08168-e381-4c6e-9be8-fe156969a446)]
    runtimeclass MobileBroadbandDeviceInformation
    {
        Windows.Networking.NetworkOperators.NetworkDeviceStatus NetworkDeviceStatus{ get; };
        String Manufacturer{ get; };
        String Model{ get; };
        String FirmwareInformation{ get; };
        Windows.Devices.Sms.CellularClass CellularClass{ get; };
        Windows.Networking.NetworkOperators.DataClasses DataClasses{ get; };
        String CustomDataClass{ get; };
        String MobileEquipmentId{ get; };
        Windows.Foundation.Collections.IVectorView <String>  TelephoneNumbers{ get; };
        String SubscriberId{ get; };
        String SimIccId{ get; };
        Windows.Networking.NetworkOperators.MobileBroadbandDeviceType DeviceType{ get; };
        String DeviceId{ get; };
        Windows.Networking.NetworkOperators.MobileBroadbandRadioState CurrentRadioState{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandDeviceInformation2", 2e467af1-f932-4737-a722-03ba72370cb8)]
        {
            Windows.Networking.NetworkOperators.MobileBroadbandPinManager PinManager{ get; };
            String Revision{ get; };
            String SerialNumber{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandDeviceInformation3", e08bb4bd-5d30-4b5a-92cc-d54df881d49e)]
        {
            String SimSpn{ get; };
            String SimPnn{ get; };
            String SimGid1{ get; };
        }
    }





    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandPinManager", 83567edd-6e1f-4b9b-a413-2b1f50cc36df)]
    runtimeclass MobileBroadbandPinManager
    {
        Windows.Foundation.Collections.IVectorView <Windows.Networking.NetworkOperators.MobileBroadbandPinType>  SupportedPins{ get; };
        Windows.Networking.NetworkOperators.MobileBroadbandPin GetPin(MobileBroadbandPinType pinType);
    }




    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandUiccApp", 4d170556-98a1-43dd-b2ec-50c90cf248df)]
    runtimeclass MobileBroadbandUiccApp
    {
        Windows.Storage.Streams.IBuffer Id{ get; };
        Windows.Networking.NetworkOperators.UiccAppKind Kind{ get; };
        [remote_sync]Windows.Foundation.IAsyncOperation <Windows.Networking.NetworkOperators.MobileBroadbandUiccAppRecordDetailsResult>  GetRecordDetailsAsync(Windows.Foundation.Collections.IIterable <UInt32>  uiccFilePath);
        [remote_sync]Windows.Foundation.IAsyncOperation <Windows.Networking.NetworkOperators.MobileBroadbandUiccAppReadRecordResult>  ReadRecordAsync(Windows.Foundation.Collections.IIterable <UInt32>  uiccFilePath, Int32 recordIndex);
    }


    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandCellsInfo", 89a9562a-e472-4da5-929c-de61711dd261)]
    runtimeclass MobileBroadbandCellsInfo
    {
        Windows.Foundation.Collections.IVectorView <Windows.Networking.NetworkOperators.MobileBroadbandCellCdma>  NeighboringCellsCdma{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Networking.NetworkOperators.MobileBroadbandCellGsm>  NeighboringCellsGsm{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Networking.NetworkOperators.MobileBroadbandCellLte>  NeighboringCellsLte{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Networking.NetworkOperators.MobileBroadbandCellTdscdma>  NeighboringCellsTdscdma{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Networking.NetworkOperators.MobileBroadbandCellUmts>  NeighboringCellsUmts{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Networking.NetworkOperators.MobileBroadbandCellCdma>  ServingCellsCdma{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Networking.NetworkOperators.MobileBroadbandCellGsm>  ServingCellsGsm{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Networking.NetworkOperators.MobileBroadbandCellLte>  ServingCellsLte{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Networking.NetworkOperators.MobileBroadbandCellTdscdma>  ServingCellsTdscdma{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Networking.NetworkOperators.MobileBroadbandCellUmts>  ServingCellsUmts{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 6)]
    [interface_name("Windows.Networking.NetworkOperators.INetworkOperatorDataUsageTriggerDetails", 50e3126d-a465-4eeb-9317-28a167630cea)]
    runtimeclass NetworkOperatorDataUsageTriggerDetails
    {
        Windows.Networking.NetworkOperators.NetworkOperatorDataUsageNotificationKind NotificationKind{ get; };
    }



    [contract(Windows.Networking.NetworkOperators.LegacyNetworkOperatorsContract, 1)]
    [marshaling_behavior(agile)]
    [dualapipartition(0x6020000)]
    [interface_name("Windows.Networking.NetworkOperators.INetworkOperatorNotificationEventDetails", bc68a9d1-82e1-4488-9f2c-1276c2468fac)]
    runtimeclass NetworkOperatorNotificationEventDetails
    {
        Windows.Networking.NetworkOperators.NetworkOperatorEventMessageType NotificationType{ get; };
        String NetworkAccountId{ get; };
        UInt8 EncodingType{ get; };
        String Message{ get; };
        String RuleId{ get; };
        Windows.Devices.Sms.ISmsMessage SmsMessage{ get; };

        [contract(Windows.Networking.NetworkOperators.LegacyNetworkOperatorsContract, 1)]
        [interface_name("Windows.Networking.NetworkOperators.INetworkOperatorTetheringEntitlementCheck", 0108916d-9e9a-4af6-8da3-60493b19c204)]
        {
            void AuthorizeTethering(Boolean allow, String entitlementFailureReason);
        }
    }


    [contract(Windows.Foundation.UniversalApiContract, 6)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Networking.NetworkOperators.ITetheringEntitlementCheckTriggerDetails", 03c65e9d-5926-41f3-a94e-b50926fc421b)]
    runtimeclass TetheringEntitlementCheckTriggerDetails
    {
        String NetworkAccountId{ get; };
        void AllowTethering();
        void DenyTethering(String entitlementFailureReason);
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [dualapipartition(0x6030000)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Networking.NetworkOperators.INetworkOperatorTetheringAccessPointConfiguration", 0bcc0284-412e-403d-acc6-b757e34774a4)]
    runtimeclass NetworkOperatorTetheringAccessPointConfiguration
    {
        NetworkOperatorTetheringAccessPointConfiguration();
        String Ssid{ get; };
        String Ssid{ set; };
        String Passphrase{ get; };
        String Passphrase{ set; };
    }


    [dualapipartition(0x6030000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Networking.NetworkOperators.INetworkOperatorTetheringOperationResult", ebd203a1-01ba-476d-b4b3-bf3d12c8f80c)]
    runtimeclass NetworkOperatorTetheringOperationResult
    {
        Windows.Networking.NetworkOperators.TetheringOperationStatus Status{ get; };
        String AdditionalErrorMessage{ get; };
    }


    [dualapipartition(0x6030000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.Networking.NetworkOperators.INetworkOperatorTetheringManagerStatics", 3ebcbacc-f8c3-405c-9964-70a1eeabe194)]
    [interface_name("Windows.Networking.NetworkOperators.INetworkOperatorTetheringManager", d45a8da0-0e86-4d98-8ba4-dd70d4b764d3)]
    [threading(both)]
    runtimeclass NetworkOperatorTetheringManager
    {

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [static_name("Windows.Networking.NetworkOperators.INetworkOperatorTetheringManagerStatics3", 8fdaadb6-4af9-4f21-9b58-d53e9f24231e)]
        {
            [method_name("CreateFromConnectionProfileWithTargetAdapter")] static Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager CreateFromConnectionProfile(Windows.Networking.Connectivity.ConnectionProfile profile, Windows.Networking.Connectivity.NetworkAdapter adapter);
        }
        static Windows.Networking.NetworkOperators.TetheringCapability GetTetheringCapability(String networkAccountId);
        static Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager CreateFromNetworkAccountId(String networkAccountId);

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [static_name("Windows.Networking.NetworkOperators.INetworkOperatorTetheringManagerStatics2", 5b235412-35f0-49e7-9b08-16d278fbaa42)]
        {
            static Windows.Networking.NetworkOperators.TetheringCapability GetTetheringCapabilityFromConnectionProfile(Windows.Networking.Connectivity.ConnectionProfile profile);
            [method_name("CreateFromConnectionProfile")] static Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager CreateFromConnectionProfile(Windows.Networking.Connectivity.ConnectionProfile profile);
        }
        UInt32 MaxClientCount{ get; };
        UInt32 ClientCount{ get; };
        Windows.Networking.NetworkOperators.TetheringOperationalState TetheringOperationalState{ get; };
        Windows.Networking.NetworkOperators.NetworkOperatorTetheringAccessPointConfiguration GetCurrentAccessPointConfiguration();
        [remote_sync]Windows.Foundation.IAsyncAction ConfigureAccessPointAsync(NetworkOperatorTetheringAccessPointConfiguration configuration);
        Windows.Foundation.IAsyncOperation <Windows.Networking.NetworkOperators.NetworkOperatorTetheringOperationResult>  StartTetheringAsync();
        Windows.Foundation.IAsyncOperation <Windows.Networking.NetworkOperators.NetworkOperatorTetheringOperationResult>  StopTetheringAsync();

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.Networking.NetworkOperators.INetworkOperatorTetheringClientManager", 91b14016-8dca-4225-bbed-eef8b8d718d7)]
        {
            Windows.Foundation.Collections.IVectorView <Windows.Networking.NetworkOperators.NetworkOperatorTetheringClient>  GetTetheringClients();
        }
    }





    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Networking.NetworkOperators.INetworkOperatorTetheringClient", 709d254c-595f-4847-bb30-646935542918)]
    runtimeclass NetworkOperatorTetheringClient
    {
        String MacAddress{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Networking.HostName>  HostNames{ get; };
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [dualapipartition(0x6020000)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandAccountEventArgs", 3853c880-77de-4c04-bead-a123b08c9f59)]
    runtimeclass MobileBroadbandAccountEventArgs
    {
        String NetworkAccountId{ get; };
    }


    [dualapipartition(0x6020000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandAccountUpdatedEventArgs", 7bc31d88-a6bd-49e1-80ab-6b91354a57d4)]
    runtimeclass MobileBroadbandAccountUpdatedEventArgs
    {
        String NetworkAccountId{ get; };
        Boolean HasDeviceInformationChanged{ get; };
        Boolean HasNetworkChanged{ get; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [dualapipartition(0x6020000)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandAccountWatcher", 6bf3335e-23b5-449f-928d-5e0d3e04471d)]
    runtimeclass MobileBroadbandAccountWatcher
    {
        MobileBroadbandAccountWatcher();
        event Windows.Foundation.TypedEventHandler <Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher, Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs>  AccountAdded;
        event Windows.Foundation.TypedEventHandler <Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher, Windows.Networking.NetworkOperators.MobileBroadbandAccountUpdatedEventArgs>  AccountUpdated;
        event Windows.Foundation.TypedEventHandler <Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher, Windows.Networking.NetworkOperators.MobileBroadbandAccountEventArgs>  AccountRemoved;
        event Windows.Foundation.TypedEventHandler <Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher, Object>  EnumerationCompleted;
        event Windows.Foundation.TypedEventHandler <Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcher, Object>  Stopped;
        Windows.Networking.NetworkOperators.MobileBroadbandAccountWatcherStatus Status{ get; };
        void Start();
        void Stop();
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [static_name("Windows.Networking.NetworkOperators.IMobileBroadbandModemStatics", f99ed637-d6f1-4a78-8cbc-6421a65063c8)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandModem", d0356912-e9f9-4f67-a03d-43189a316bf1)]
    [threading(both)]
    runtimeclass MobileBroadbandModem
    {
        static String GetDeviceSelector();
        static Windows.Networking.NetworkOperators.MobileBroadbandModem FromId(String deviceId);
        static Windows.Networking.NetworkOperators.MobileBroadbandModem GetDefault();
        Windows.Networking.NetworkOperators.MobileBroadbandAccount CurrentAccount{ get; };
        Windows.Networking.NetworkOperators.MobileBroadbandDeviceInformation DeviceInformation{ get; };
        UInt32 MaxDeviceServiceCommandSizeInBytes{ get; };
        UInt32 MaxDeviceServiceDataSizeInBytes{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceInformation>  DeviceServices{ get; };
        Windows.Networking.NetworkOperators.MobileBroadbandDeviceService GetDeviceService(Guid deviceServiceId);
        Boolean IsResetSupported{ get; };
        Windows.Foundation.IAsyncAction ResetAsync();
        Windows.Foundation.IAsyncOperation <Windows.Networking.NetworkOperators.MobileBroadbandModemConfiguration>  GetCurrentConfigurationAsync();
        Windows.Networking.NetworkOperators.MobileBroadbandNetwork CurrentNetwork{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandModem2", 12862b28-b9eb-4ee2-bbe3-711f53eea373)]
        {
            Windows.Foundation.IAsyncOperation <Boolean>  GetIsPassthroughEnabledAsync();
            Windows.Foundation.IAsyncOperation <Windows.Networking.NetworkOperators.MobileBroadbandModemStatus>  SetIsPassthroughEnabledAsync(Boolean value);
        }

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandModem3", e9fec6ea-2f34-4582-9102-c314d2a87eec)]
        {
            Windows.Foundation.IAsyncOperation <Windows.Networking.NetworkOperators.MobileBroadbandPco>  TryGetPcoAsync();
            Boolean IsInEmergencyCallMode{ get; };
            event Windows.Foundation.TypedEventHandler <Windows.Networking.NetworkOperators.MobileBroadbandModem, Object>  IsInEmergencyCallModeChanged;
        }
    }


    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandUicc", e634f691-525a-4ce2-8fce-aa4162579154)]
    runtimeclass MobileBroadbandUicc
    {
        String SimIccId{ get; };
        Windows.Foundation.IAsyncOperation <Windows.Networking.NetworkOperators.MobileBroadbandUiccAppsResult>  GetUiccAppsAsync();
    }


    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandSarManager", e5b26833-967e-40c9-a485-19c0dd209e22)]
    runtimeclass MobileBroadbandSarManager
    {
        Boolean IsBackoffEnabled{ get; };
        Boolean IsWiFiHardwareIntegrated{ get; };
        Boolean IsSarControlledByHardware{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Networking.NetworkOperators.MobileBroadbandAntennaSar>  Antennas{ get; };
        Windows.Foundation.TimeSpan HysteresisTimerPeriod{ get; };
        event Windows.Foundation.TypedEventHandler <Windows.Networking.NetworkOperators.MobileBroadbandSarManager, Windows.Networking.NetworkOperators.MobileBroadbandTransmissionStateChangedEventArgs>  TransmissionStateChanged;
        Windows.Foundation.IAsyncAction EnableBackoffAsync();
        Windows.Foundation.IAsyncAction DisableBackoffAsync();
        Windows.Foundation.IAsyncAction SetConfigurationAsync(Windows.Foundation.Collections.IIterable <Windows.Networking.NetworkOperators.MobileBroadbandAntennaSar>  antennas);
        Windows.Foundation.IAsyncAction RevertSarToHardwareControlAsync();
        Windows.Foundation.IAsyncAction SetTransmissionStateChangedHysteresisAsync(Windows.Foundation.TimeSpan timerPeriod);
        Windows.Foundation.IAsyncOperation <Boolean>  GetIsTransmittingAsync();
        void StartTransmissionStateMonitoring();
        void StopTransmissionStateMonitoring();
    }

    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandModemConfiguration", fce035a3-d6cd-4320-b982-be9d3ec7890f)]
    runtimeclass MobileBroadbandModemConfiguration
    {
        Windows.Networking.NetworkOperators.MobileBroadbandUicc Uicc{ get; };
        String HomeProviderId{ get; };
        String HomeProviderName{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandModemConfiguration2", 320ff5c5-e460-42ae-aa51-69621e7a4477)]
        {
            Windows.Networking.NetworkOperators.MobileBroadbandSarManager SarManager{ get; };
        }
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceInformation", 53d69b5b-c4ed-45f0-803a-d9417a6d9846)]
    runtimeclass MobileBroadbandDeviceServiceInformation
    {
        Guid DeviceServiceId{ get; };
        Boolean IsDataReadSupported{ get; };
        Boolean IsDataWriteSupported{ get; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandDeviceService", 22be1a52-bd80-40ac-8e1f-2e07836a3dbd)]
    runtimeclass MobileBroadbandDeviceService
    {
        Guid DeviceServiceId{ get; };
        Windows.Foundation.Collections.IVectorView <UInt32>  SupportedCommands{ get; };
        Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataSession OpenDataSession();
        Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandSession OpenCommandSession();
    }



    [contract(Windows.Foundation.UniversalApiContract, 6)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandPco", d4e4fcbe-e3a3-43c5-a87b-6c86d229d7fa)]
    runtimeclass MobileBroadbandPco
    {
        Windows.Storage.Streams.IBuffer Data{ get; };
        Boolean IsComplete{ get; };
        String DeviceId{ get; };
    }


    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandPin", e661d709-e779-45bf-8281-75323df9e321)]
    runtimeclass MobileBroadbandPin
    {
        Windows.Networking.NetworkOperators.MobileBroadbandPinType Type{ get; };
        Windows.Networking.NetworkOperators.MobileBroadbandPinLockState LockState{ get; };
        Windows.Networking.NetworkOperators.MobileBroadbandPinFormat Format{ get; };
        Boolean Enabled{ get; };
        UInt32 MaxLength{ get; };
        UInt32 MinLength{ get; };
        UInt32 AttemptsRemaining{ get; };
        Windows.Foundation.IAsyncOperation <Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult>  EnableAsync(String currentPin);
        Windows.Foundation.IAsyncOperation <Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult>  DisableAsync(String currentPin);
        Windows.Foundation.IAsyncOperation <Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult>  EnterAsync(String currentPin);
        Windows.Foundation.IAsyncOperation <Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult>  ChangeAsync(String currentPin, String newPin);
        Windows.Foundation.IAsyncOperation <Windows.Networking.NetworkOperators.MobileBroadbandPinOperationResult>  UnblockAsync(String pinUnblockKey, String newPin);
    }


    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandPinOperationResult", 11dddc32-31e7-49f5-b663-123d3bef0362)]
    runtimeclass MobileBroadbandPinOperationResult
    {
        Boolean IsSuccessful{ get; };
        UInt32 AttemptsRemaining{ get; };
    }




    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceDataSession", dad62333-8bcf-4289-8a37-045c2169486a)]
    runtimeclass MobileBroadbandDeviceServiceDataSession
    {
        Windows.Foundation.IAsyncAction WriteDataAsync(Windows.Storage.Streams.IBuffer value);
        void CloseSession();
        event Windows.Foundation.TypedEventHandler <Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataSession, Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceDataReceivedEventArgs>  DataReceived;
    }

    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceCommandSession", fc098a45-913b-4914-b6c3-ae6304593e75)]
    runtimeclass MobileBroadbandDeviceServiceCommandSession
    {
        Windows.Foundation.IAsyncOperation <Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandResult>  SendQueryCommandAsync(UInt32 commandId, Windows.Storage.Streams.IBuffer data);
        Windows.Foundation.IAsyncOperation <Windows.Networking.NetworkOperators.MobileBroadbandDeviceServiceCommandResult>  SendSetCommandAsync(UInt32 commandId, Windows.Storage.Streams.IBuffer data);
        void CloseSession();
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceDataReceivedEventArgs", b6aa13de-1380-40e3-8618-73cbca48138c)]
    runtimeclass MobileBroadbandDeviceServiceDataReceivedEventArgs
    {
        Windows.Storage.Streams.IBuffer ReceivedData{ get; };
    }



    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceCommandResult", b0f46abb-94d6-44b9-a538-f0810b645389)]
    runtimeclass MobileBroadbandDeviceServiceCommandResult
    {
        UInt32 StatusCode{ get; };
        Windows.Storage.Streams.IBuffer ResponseData{ get; };
    }



    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandUiccAppsResult", 744930eb-8157-4a41-8494-6bf54c9b1d2b)]
    runtimeclass MobileBroadbandUiccAppsResult
    {
        Windows.Networking.NetworkOperators.MobileBroadbandUiccAppOperationStatus Status{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Networking.NetworkOperators.MobileBroadbandUiccApp>  UiccApps{ get; };
    }



    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandUiccAppRecordDetailsResult", d919682f-be14-4934-981d-2f57b9ed83e6)]
    runtimeclass MobileBroadbandUiccAppRecordDetailsResult
    {
        Windows.Networking.NetworkOperators.MobileBroadbandUiccAppOperationStatus Status{ get; };
        Windows.Networking.NetworkOperators.UiccAppRecordKind Kind{ get; };
        Int32 RecordCount{ get; };
        Int32 RecordSize{ get; };
        Windows.Networking.NetworkOperators.UiccAccessCondition ReadAccessCondition{ get; };
        Windows.Networking.NetworkOperators.UiccAccessCondition WriteAccessCondition{ get; };
    }


    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandUiccAppReadRecordResult", 64c95285-358e-47c5-8249-695f383b2bdb)]
    runtimeclass MobileBroadbandUiccAppReadRecordResult
    {
        Windows.Networking.NetworkOperators.MobileBroadbandUiccAppOperationStatus Status{ get; };
        Windows.Storage.Streams.IBuffer Data{ get; };
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandNetworkRegistrationStateChange", beaf94e1-960f-49b4-a08d-7d85e968c7ec)]
    runtimeclass MobileBroadbandNetworkRegistrationStateChange
    {
        String DeviceId{ get; };
        Windows.Networking.NetworkOperators.MobileBroadbandNetwork Network{ get; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandNetworkRegistrationStateChangeTriggerDetails", 89135cff-28b8-46aa-b137-1c4b0f21edfe)]
    runtimeclass MobileBroadbandNetworkRegistrationStateChangeTriggerDetails
    {
        Windows.Foundation.Collections.IVectorView <Windows.Networking.NetworkOperators.MobileBroadbandNetworkRegistrationStateChange>  NetworkRegistrationStateChanges{ get; };
    }


    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandRadioStateChange", b054a561-9833-4aed-9717-4348b21a24b3)]
    runtimeclass MobileBroadbandRadioStateChange
    {
        String DeviceId{ get; };
        Windows.Networking.NetworkOperators.MobileBroadbandRadioState RadioState{ get; };
    }


    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandRadioStateChangeTriggerDetails", 71301ace-093c-42c6-b0db-ad1f75a65445)]
    runtimeclass MobileBroadbandRadioStateChangeTriggerDetails
    {
        Windows.Foundation.Collections.IVectorView <Windows.Networking.NetworkOperators.MobileBroadbandRadioStateChange>  RadioStateChanges{ get; };
    }


    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandPinLockStateChange", be16673e-1f04-4f95-8b90-e7f559dde7e5)]
    runtimeclass MobileBroadbandPinLockStateChange
    {
        String DeviceId{ get; };
        Windows.Networking.NetworkOperators.MobileBroadbandPinType PinType{ get; };
        Windows.Networking.NetworkOperators.MobileBroadbandPinLockState PinLockState{ get; };
    }


    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandPinLockStateChangeTriggerDetails", d338c091-3e91-4d38-9036-aee83a6e79ad)]
    runtimeclass MobileBroadbandPinLockStateChangeTriggerDetails
    {
        Windows.Foundation.Collections.IVectorView <Windows.Networking.NetworkOperators.MobileBroadbandPinLockStateChange>  PinLockStateChanges{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [dualapipartition(0xa000000)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandDeviceServiceTriggerDetails", 4a055b70-b9ae-4458-9241-a6a5fbf18a0c)]
    runtimeclass MobileBroadbandDeviceServiceTriggerDetails
    {
        String DeviceId{ get; };
        Guid DeviceServiceId{ get; };
        Windows.Storage.Streams.IBuffer ReceivedData{ get; };
    }


    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.Networking.NetworkOperators.IKnownCSimFilePathsStatics", b458aeed-49f1-4c22-b073-96d511bf9c35)]
    runtimeclass KnownCSimFilePaths
    {
        static Windows.Foundation.Collections.IVectorView <UInt32>  EFSpn{ get; };
        static Windows.Foundation.Collections.IVectorView <UInt32>  Gid1{ get; };
        static Windows.Foundation.Collections.IVectorView <UInt32>  Gid2{ get; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [static_name("Windows.Networking.NetworkOperators.IKnownRuimFilePathsStatics", 3883c8b9-ff24-4571-a867-09f960426e14)]
    runtimeclass KnownRuimFilePaths
    {
        static Windows.Foundation.Collections.IVectorView <UInt32>  EFSpn{ get; };
        static Windows.Foundation.Collections.IVectorView <UInt32>  Gid1{ get; };
        static Windows.Foundation.Collections.IVectorView <UInt32>  Gid2{ get; };
    }


    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.Networking.NetworkOperators.IKnownSimFilePathsStatics", 80cd1a63-37a5-43d3-80a3-ccd23e8fecee)]
    runtimeclass KnownSimFilePaths
    {
        static Windows.Foundation.Collections.IVectorView <UInt32>  EFOns{ get; };
        static Windows.Foundation.Collections.IVectorView <UInt32>  EFSpn{ get; };
        static Windows.Foundation.Collections.IVectorView <UInt32>  Gid1{ get; };
        static Windows.Foundation.Collections.IVectorView <UInt32>  Gid2{ get; };
    }


    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.Networking.NetworkOperators.IKnownUSimFilePathsStatics", 7c34e581-1f1b-43f4-9530-8b092d32d71f)]
    runtimeclass KnownUSimFilePaths
    {
        static Windows.Foundation.Collections.IVectorView <UInt32>  EFSpn{ get; };
        static Windows.Foundation.Collections.IVectorView <UInt32>  EFOpl{ get; };
        static Windows.Foundation.Collections.IVectorView <UInt32>  EFPnn{ get; };
        static Windows.Foundation.Collections.IVectorView <UInt32>  Gid1{ get; };
        static Windows.Foundation.Collections.IVectorView <UInt32>  Gid2{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandCellCdma", 0601b3b4-411a-4f2e-8287-76f5650c60cd)]
    runtimeclass MobileBroadbandCellCdma
    {
        Windows.Foundation.IReference <Int32>  BaseStationId{ get; };
        Windows.Foundation.IReference <Int32>  BaseStationPNCode{ get; };
        Windows.Foundation.IReference <Double>  BaseStationLatitude{ get; };
        Windows.Foundation.IReference <Double>  BaseStationLongitude{ get; };
        Windows.Foundation.IReference <Windows.Foundation.TimeSpan>  BaseStationLastBroadcastGpsTime{ get; };
        Windows.Foundation.IReference <Int32>  NetworkId{ get; };
        Windows.Foundation.IReference <Double>  PilotSignalStrengthInDB{ get; };
        Windows.Foundation.IReference <Int32>  SystemId{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandCellGsm", cc917f06-7ee0-47b8-9e1f-c3b48df9df5b)]
    runtimeclass MobileBroadbandCellGsm
    {
        Windows.Foundation.IReference <Int32>  BaseStationId{ get; };
        Windows.Foundation.IReference <Int32>  CellId{ get; };
        Windows.Foundation.IReference <Int32>  ChannelNumber{ get; };
        Windows.Foundation.IReference <Int32>  LocationAreaCode{ get; };
        String ProviderId{ get; };
        Windows.Foundation.IReference <Double>  ReceivedSignalStrengthInDBm{ get; };
        Windows.Foundation.IReference <Int32>  TimingAdvanceInBitPeriods{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandCellLte", 9197c87b-2b78-456d-8b53-aaa25d0af741)]
    runtimeclass MobileBroadbandCellLte
    {
        Windows.Foundation.IReference <Int32>  CellId{ get; };
        Windows.Foundation.IReference <Int32>  ChannelNumber{ get; };
        Windows.Foundation.IReference <Int32>  PhysicalCellId{ get; };
        String ProviderId{ get; };
        Windows.Foundation.IReference <Double>  ReferenceSignalReceivedPowerInDBm{ get; };
        Windows.Foundation.IReference <Double>  ReferenceSignalReceivedQualityInDBm{ get; };
        Windows.Foundation.IReference <Int32>  TimingAdvanceInBitPeriods{ get; };
        Windows.Foundation.IReference <Int32>  TrackingAreaCode{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandCellTdscdma", 0eda1655-db0e-4182-8cda-cc419a7bde08)]
    runtimeclass MobileBroadbandCellTdscdma
    {
        Windows.Foundation.IReference <Int32>  CellId{ get; };
        Windows.Foundation.IReference <Int32>  CellParameterId{ get; };
        Windows.Foundation.IReference <Int32>  ChannelNumber{ get; };
        Windows.Foundation.IReference <Int32>  LocationAreaCode{ get; };
        Windows.Foundation.IReference <Double>  PathLossInDB{ get; };
        String ProviderId{ get; };
        Windows.Foundation.IReference <Double>  ReceivedSignalCodePowerInDBm{ get; };
        Windows.Foundation.IReference <Int32>  TimingAdvanceInBitPeriods{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandCellUmts", 77b4b5ae-49c8-4f15-b285-4c26a7f67215)]
    runtimeclass MobileBroadbandCellUmts
    {
        Windows.Foundation.IReference <Int32>  CellId{ get; };
        Windows.Foundation.IReference <Int32>  ChannelNumber{ get; };
        Windows.Foundation.IReference <Int32>  LocationAreaCode{ get; };
        Windows.Foundation.IReference <Double>  PathLossInDB{ get; };
        Windows.Foundation.IReference <Int32>  PrimaryScramblingCode{ get; };
        String ProviderId{ get; };
        Windows.Foundation.IReference <Double>  ReceivedSignalCodePowerInDBm{ get; };
        Windows.Foundation.IReference <Double>  SignalToNoiseRatioInDB{ get; };
    }



    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 6)]
    [constructor_name("Windows.Networking.NetworkOperators.IMobileBroadbandModemIsolationFactory", 21d7ec58-c2b1-4c2f-a030-72820a24ecd9)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandModemIsolation", b5618fec-e661-4330-9bb4-3480212ec354)]
    runtimeclass MobileBroadbandModemIsolation
    {
        [method_name( "Create" )] MobileBroadbandModemIsolation(String modemDeviceId, String ruleGroupId);
        void AddAllowedHost(Windows.Networking.HostName host);
        void AddAllowedHostRange(Windows.Networking.HostName first, Windows.Networking.HostName last);
        Windows.Foundation.IAsyncAction ApplyConfigurationAsync();
        Windows.Foundation.IAsyncAction ClearConfigurationAsync();
    }




    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 6)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandPcoDataChangeTriggerDetails", 263f5114-64e0-4493-909b-2d14a01962b1)]
    runtimeclass MobileBroadbandPcoDataChangeTriggerDetails
    {
        Windows.Networking.NetworkOperators.MobileBroadbandPco UpdatedData{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandAntennaSar", b9af4b7e-cbf9-4109-90be-5c06bfd513b6)]
    runtimeclass MobileBroadbandAntennaSar
    {

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [constructor_name("Windows.Networking.NetworkOperators.IMobileBroadbandAntennaSarFactory", a91e1716-c04d-4a21-8698-1459dc672c6e)]
        {
            [method_name( "CreateWithIndex" )] MobileBroadbandAntennaSar(Int32 antennaIndex, Int32 sarBackoffIndex);
        }
        Int32 AntennaIndex{ get; };
        Int32 SarBackoffIndex{ get; };
    }



    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Networking.NetworkOperators.IMobileBroadbandTransmissionStateChangedEventArgs", 612e3875-040a-4f99-a4f9-61d7c32da129)]
    runtimeclass MobileBroadbandTransmissionStateChangedEventArgs
    {
        Boolean IsTransmitting{ get; };
    }


}
namespace Windows.ApplicationModel.Background
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [threading(both)]
    runtimeclass MobileBroadbandRegistrationStateChangeTrigger
        : [default]Windows.ApplicationModel.Background.IBackgroundTrigger
    {
        MobileBroadbandRegistrationStateChangeTrigger();
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [threading(both)]
    runtimeclass MobileBroadbandRadioStateChangeTrigger
        : [default]Windows.ApplicationModel.Background.IBackgroundTrigger
    {
        MobileBroadbandRadioStateChangeTrigger();
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [threading(both)]
    runtimeclass MobileBroadbandPinLockStateChangeTrigger
        : [default]Windows.ApplicationModel.Background.IBackgroundTrigger
    {
        MobileBroadbandPinLockStateChangeTrigger();
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [threading(both)]
    runtimeclass MobileBroadbandDeviceServiceNotificationTrigger
        : [default]Windows.ApplicationModel.Background.IBackgroundTrigger
    {
        MobileBroadbandDeviceServiceNotificationTrigger();
    }

    [contract(Windows.Foundation.UniversalApiContract, 6)]
    [marshaling_behavior(agile)]
    [threading(both)]
    runtimeclass NetworkOperatorDataUsageTrigger
        : [default]Windows.ApplicationModel.Background.IBackgroundTrigger
    {
        NetworkOperatorDataUsageTrigger();
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 6)]
    [threading(both)]
    runtimeclass TetheringEntitlementCheckTrigger
        : [default]Windows.ApplicationModel.Background.IBackgroundTrigger
    {
        TetheringEntitlementCheckTrigger();
    }

    [contract(Windows.Foundation.UniversalApiContract, 6)]
    [marshaling_behavior(agile)]
    [threading(both)]
    runtimeclass MobileBroadbandPcoDataChangeTrigger
        : [default]Windows.ApplicationModel.Background.IBackgroundTrigger
    {
        MobileBroadbandPcoDataChangeTrigger();
    }

}
