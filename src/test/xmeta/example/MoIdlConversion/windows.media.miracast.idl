










namespace Windows.Media.Miracast
{
    [contract(Windows.Foundation.UniversalApiContract, 8)]
    enum MiracastReceiverAuthorizationMethod
    {
        None,
        ConfirmConnection,
        PinDisplayIfRequested,
        PinDisplayRequired,
    };

    [contract(Windows.Foundation.UniversalApiContract, 8)]
    enum MiracastReceiverListeningStatus
    {
        NotListening,
        Listening,
        ConnectionPending,
        Connected,
        DisabledByPolicy,
        TemporarilyDisabled,
    };

    [contract(Windows.Foundation.UniversalApiContract, 8)]
    enum MiracastTransmitterAuthorizationStatus
    {
        Undecided,
        Allowed,
        AlwaysPrompt,
        Blocked,
    };

    [contract(Windows.Foundation.UniversalApiContract, 8)]
    enum MiracastReceiverWiFiStatus
    {
        MiracastSupportUndetermined,
        MiracastNotSupported,
        MiracastSupportNotOptimized,
        MiracastSupported,
    };

    [contract(Windows.Foundation.UniversalApiContract, 8)]
    enum MiracastReceiverApplySettingsStatus
    {
        Success,
        UnknownFailure,
        MiracastNotSupported,
        AccessDenied,
        FriendlyNameTooLong,
        ModelNameTooLong,
        ModelNumberTooLong,
        InvalidSettings,
    };

    [contract(Windows.Foundation.UniversalApiContract, 8)]
    enum MiracastReceiverSessionStartStatus
    {
        Success,
        UnknownFailure,
        MiracastNotSupported,
        AccessDenied,
    };

    [contract(Windows.Foundation.UniversalApiContract, 8)]
    enum MiracastReceiverDisconnectReason
    {
        Finished,
        AppSpecificError,
        ConnectionNotAccepted,
        DisconnectedByUser,
        FailedToStartStreaming,
        MediaDecodingError,
        MediaStreamingError,
        MediaDecryptionError,
    };

    [contract(Windows.Foundation.UniversalApiContract, 8)]
    enum MiracastReceiverGameControllerDeviceUsageMode
    {
        AsGameController,
        AsMouseAndKeyboard,
    };


    [dualapipartition(0x1)]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [interface_name("Windows.Media.Miracast.IMiracastReceiverConnection", 704b2f36-d2e5-551f-a854-f822b7917d28)]
    runtimeclass MiracastReceiverConnection
        : Windows.Foundation.IClosable
    {
        [method_name("Disconnect")] void Disconnect(MiracastReceiverDisconnectReason reason);
        [method_name("DisconnectWithMessage")] void Disconnect(MiracastReceiverDisconnectReason reason, String message);
        void Pause();
        Windows.Foundation.IAsyncAction PauseAsync();
        void Resume();
        Windows.Foundation.IAsyncAction ResumeAsync();
        Windows.Media.Miracast.MiracastTransmitter Transmitter{ get; };
        Windows.Media.Miracast.MiracastReceiverInputDevices InputDevices{ get; };
        Windows.Media.Miracast.MiracastReceiverCursorImageChannel CursorImageChannel{ get; };
        Windows.Media.Miracast.MiracastReceiverStreamControl StreamControl{ get; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [dualapipartition(0x1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Media.Miracast.IMiracastTransmitter", 342d79fd-2e64-5508-8a30-833d1eac70d0)]
    runtimeclass MiracastTransmitter
    {
        String Name{ get; };
        String Name{ set; };
        Windows.Media.Miracast.MiracastTransmitterAuthorizationStatus AuthorizationStatus{ get; };
        Windows.Media.Miracast.MiracastTransmitterAuthorizationStatus AuthorizationStatus{ set; };
        Windows.Foundation.Collections.IVectorView <Windows.Media.Miracast.MiracastReceiverConnection>  GetConnections();
        String MacAddress{ get; };
        Windows.Foundation.DateTime LastConnectionTime{ get; };
    }


    [dualapipartition(0x1)]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [interface_name("Windows.Media.Miracast.IMiracastReceiverCursorImageChannel", d9ac332d-723a-5a9d-b90a-81153efa2a0f)]
    runtimeclass MiracastReceiverCursorImageChannel
    {
        Boolean IsEnabled{ get; };
        Windows.Graphics.SizeInt32 MaxImageSize{ get; };
        Windows.Graphics.PointInt32 Position{ get; };
        Windows.Storage.Streams.IRandomAccessStreamWithContentType ImageStream{ get; };
        event Windows.Foundation.TypedEventHandler <Windows.Media.Miracast.MiracastReceiverCursorImageChannel, Object>  ImageStreamChanged;
        event Windows.Foundation.TypedEventHandler <Windows.Media.Miracast.MiracastReceiverCursorImageChannel, Object>  PositionChanged;
    }


    [dualapipartition(0x1)]
    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Media.Miracast.IMiracastReceiverCursorImageChannelSettings", ccdbedff-bd00-5b9c-8e4c-00cacf86b634)]
    runtimeclass MiracastReceiverCursorImageChannelSettings
    {
        Boolean IsEnabled{ get; };
        Boolean IsEnabled{ set; };
        Windows.Graphics.SizeInt32 MaxImageSize{ get; };
        Windows.Graphics.SizeInt32 MaxImageSize{ set; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [dualapipartition(0x1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Media.Miracast.IMiracastReceiverKeyboardDevice", beb67272-06c0-54ff-ac96-217464ff2501)]
    runtimeclass MiracastReceiverKeyboardDevice
    {
        Boolean TransmitInput{ get; };
        Boolean TransmitInput{ set; };
        Boolean IsRequestedByTransmitter{ get; };
        Boolean IsTransmittingInput{ get; };
        event Windows.Foundation.TypedEventHandler <Windows.Media.Miracast.MiracastReceiverKeyboardDevice, Object>  Changed;
    }


    [marshaling_behavior(agile)]
    [dualapipartition(0x1)]
    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [interface_name("Windows.Media.Miracast.IMiracastReceiverGameControllerDevice", 2d7171e8-bed4-5118-a058-e2477eb5888d)]
    runtimeclass MiracastReceiverGameControllerDevice
    {
        Boolean TransmitInput{ get; };
        Boolean TransmitInput{ set; };
        Boolean IsRequestedByTransmitter{ get; };
        Boolean IsTransmittingInput{ get; };
        Windows.Media.Miracast.MiracastReceiverGameControllerDeviceUsageMode Mode{ get; };
        Windows.Media.Miracast.MiracastReceiverGameControllerDeviceUsageMode Mode{ set; };
        event Windows.Foundation.TypedEventHandler <Windows.Media.Miracast.MiracastReceiverGameControllerDevice, Object>  Changed;
    }


    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [dualapipartition(0x1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Media.Miracast.IMiracastReceiverInputDevices", da35bb02-28aa-5ee8-96f5-a42901c66f00)]
    runtimeclass MiracastReceiverInputDevices
    {
        Windows.Media.Miracast.MiracastReceiverKeyboardDevice Keyboard{ get; };
        Windows.Media.Miracast.MiracastReceiverGameControllerDevice GameController{ get; };
    }


    [marshaling_behavior(agile)]
    [dualapipartition(0x1)]
    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [interface_name("Windows.Media.Miracast.IMiracastReceiverVideoStreamSettings", 169b5e1b-149d-52d0-b126-6f89744e4f50)]
    runtimeclass MiracastReceiverVideoStreamSettings
    {
        Windows.Graphics.SizeInt32 Size{ get; };
        Windows.Graphics.SizeInt32 Size{ set; };
        Int32 Bitrate{ get; };
        Int32 Bitrate{ set; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [marshaling_behavior(agile)]
    [dualapipartition(0x1)]
    [interface_name("Windows.Media.Miracast.IMiracastReceiverStreamControl", 38ea2d8b-2769-5ad7-8a8a-254b9df7ba82)]
    runtimeclass MiracastReceiverStreamControl
    {
        Windows.Media.Miracast.MiracastReceiverVideoStreamSettings GetVideoStreamSettings();
        Windows.Foundation.IAsyncOperation <Windows.Media.Miracast.MiracastReceiverVideoStreamSettings>  GetVideoStreamSettingsAsync();
        void SuggestVideoStreamSettings(MiracastReceiverVideoStreamSettings settings);
        Windows.Foundation.IAsyncAction SuggestVideoStreamSettingsAsync(MiracastReceiverVideoStreamSettings settings);
        Boolean MuteAudio{ get; };
        Boolean MuteAudio{ set; };
    }



    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [marshaling_behavior(agile)]
    [dualapipartition(0x1)]
    [interface_name("Windows.Media.Miracast.IMiracastReceiverConnectionCreatedEventArgs", 7d8dfa39-307a-5c0f-94bd-d0c69d169982)]
    runtimeclass MiracastReceiverConnectionCreatedEventArgs
    {
        Windows.Media.Miracast.MiracastReceiverConnection Connection{ get; };
        String Pin{ get; };
        Windows.Foundation.Deferral GetDeferral();
    }


    [dualapipartition(0x1)]
    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Media.Miracast.IMiracastReceiverMediaSourceCreatedEventArgs", 17cf519e-1246-531d-945a-6b158e39c3aa)]
    runtimeclass MiracastReceiverMediaSourceCreatedEventArgs
    {
        Windows.Media.Miracast.MiracastReceiverConnection Connection{ get; };
        Windows.Media.Core.MediaSource MediaSource{ get; };
        Windows.Media.Miracast.MiracastReceiverCursorImageChannelSettings CursorImageChannelSettings{ get; };
        Windows.Foundation.Deferral GetDeferral();
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [dualapipartition(0x1)]
    [interface_name("Windows.Media.Miracast.IMiracastReceiverDisconnectedEventArgs", d9a15e5e-5fee-57e6-b4b0-04727db93229)]
    runtimeclass MiracastReceiverDisconnectedEventArgs
    {
        Windows.Media.Miracast.MiracastReceiverConnection Connection{ get; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [dualapipartition(0x1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Media.Miracast.IMiracastReceiverSettings", 57cd2f24-c55a-5fbe-9464-eb05307705dd)]
    runtimeclass MiracastReceiverSettings
    {
        String FriendlyName{ get; };
        String FriendlyName{ set; };
        String ModelName{ get; };
        String ModelName{ set; };
        String ModelNumber{ get; };
        String ModelNumber{ set; };
        Windows.Media.Miracast.MiracastReceiverAuthorizationMethod AuthorizationMethod{ get; };
        Windows.Media.Miracast.MiracastReceiverAuthorizationMethod AuthorizationMethod{ set; };
        Boolean RequireAuthorizationFromKnownTransmitters{ get; };
        Boolean RequireAuthorizationFromKnownTransmitters{ set; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [marshaling_behavior(agile)]
    [dualapipartition(0x1)]
    [interface_name("Windows.Media.Miracast.IMiracastReceiverStatus", c28a5591-23ab-519e-ad09-90bff6dcc87e)]
    runtimeclass MiracastReceiverStatus
    {
        Windows.Media.Miracast.MiracastReceiverListeningStatus ListeningStatus{ get; };
        Windows.Media.Miracast.MiracastReceiverWiFiStatus WiFiStatus{ get; };
        Boolean IsConnectionTakeoverSupported{ get; };
        Int32 MaxSimultaneousConnections{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Media.Miracast.MiracastTransmitter>  KnownTransmitters{ get; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [dualapipartition(0x1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Media.Miracast.IMiracastReceiverSessionStartResult", b7c573ee-40ca-51ff-95f2-c9de34f2e90e)]
    runtimeclass MiracastReceiverSessionStartResult
    {
        Windows.Media.Miracast.MiracastReceiverSessionStartStatus Status{ get; };
        HRESULT ExtendedError{ get; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [marshaling_behavior(agile)]
    [dualapipartition(0x1)]
    [interface_name("Windows.Media.Miracast.IMiracastReceiverSession", 1d2bcdb4-ef8b-5209-bfc9-c32116504803)]
    runtimeclass MiracastReceiverSession
        : Windows.Foundation.IClosable
    {
        event Windows.Foundation.TypedEventHandler <Windows.Media.Miracast.MiracastReceiverSession, Windows.Media.Miracast.MiracastReceiverConnectionCreatedEventArgs>  ConnectionCreated;
        event Windows.Foundation.TypedEventHandler <Windows.Media.Miracast.MiracastReceiverSession, Windows.Media.Miracast.MiracastReceiverMediaSourceCreatedEventArgs>  MediaSourceCreated;
        event Windows.Foundation.TypedEventHandler <Windows.Media.Miracast.MiracastReceiverSession, Windows.Media.Miracast.MiracastReceiverDisconnectedEventArgs>  Disconnected;
        Boolean AllowConnectionTakeover{ get; };
        Boolean AllowConnectionTakeover{ set; };
        Int32 MaxSimultaneousConnections{ get; };
        Int32 MaxSimultaneousConnections{ set; };
        Windows.Media.Miracast.MiracastReceiverSessionStartResult Start();
        Windows.Foundation.IAsyncOperation <Windows.Media.Miracast.MiracastReceiverSessionStartResult>  StartAsync();
    }


    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [marshaling_behavior(agile)]
    [dualapipartition(0x1)]
    [interface_name("Windows.Media.Miracast.IMiracastReceiverApplySettingsResult", d0aa6272-09cd-58e1-a4f2-5d5143d312f9)]
    runtimeclass MiracastReceiverApplySettingsResult
    {
        Windows.Media.Miracast.MiracastReceiverApplySettingsStatus Status{ get; };
        HRESULT ExtendedError{ get; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [marshaling_behavior(agile)]
    [dualapipartition(0x1)]
    [interface_name("Windows.Media.Miracast.IMiracastReceiver", 7a315258-e444-51b4-aff7-b88daa1229e0)]
    [threading(both)]
    runtimeclass MiracastReceiver
    {
        MiracastReceiver();
        Windows.Media.Miracast.MiracastReceiverSettings GetDefaultSettings();
        Windows.Media.Miracast.MiracastReceiverSettings GetCurrentSettings();
        Windows.Foundation.IAsyncOperation <Windows.Media.Miracast.MiracastReceiverSettings>  GetCurrentSettingsAsync();
        Windows.Media.Miracast.MiracastReceiverApplySettingsResult DisconnectAllAndApplySettings(MiracastReceiverSettings settings);
        Windows.Foundation.IAsyncOperation <Windows.Media.Miracast.MiracastReceiverApplySettingsResult>  DisconnectAllAndApplySettingsAsync(MiracastReceiverSettings settings);
        Windows.Media.Miracast.MiracastReceiverStatus GetStatus();
        Windows.Foundation.IAsyncOperation <Windows.Media.Miracast.MiracastReceiverStatus>  GetStatusAsync();
        event Windows.Foundation.TypedEventHandler <Windows.Media.Miracast.MiracastReceiver, Object>  StatusChanged;
        Windows.Media.Miracast.MiracastReceiverSession CreateSession(Windows.ApplicationModel.Core.CoreApplicationView view);
        Windows.Foundation.IAsyncOperation <Windows.Media.Miracast.MiracastReceiverSession>  CreateSessionAsync(Windows.ApplicationModel.Core.CoreApplicationView view);
        void ClearKnownTransmitters();
        void RemoveKnownTransmitter(MiracastTransmitter transmitter);
    }

}
