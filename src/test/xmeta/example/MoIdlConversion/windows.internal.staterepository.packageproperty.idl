










namespace Windows.Internal.StateRepository
{
    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [contract(Windows.Internal.StateRepository.StateRepositoryContract, 1)]
    [static_name("Windows.Internal.StateRepository.IPackagePropertyStatics", cb50698c-dfd0-4c85-ba99-7e2045875ce9)]
    [interface_name("Windows.Internal.StateRepository.IPackageProperty", bac7aafa-fbb8-4b69-b8cf-7c987fd8dc1a)]
    [threading(both)]
    runtimeclass PackageProperty
    {
        static Boolean Exists(Int64 packagePropertyID);
        static Boolean ExistsByName(String Name);
        static Boolean ExistsByPackage(Package Package);
        static Boolean ExistsByPackageAndIndex(Package Package, Int32 Index);
        static Boolean ExistsByPackageAndName(Package Package, String Name);
        static Windows.Internal.StateRepository.PackageProperty Get(Int64 packagePropertyID);
        static Windows.Internal.StateRepository.PackageProperty TryGet(Int64 packagePropertyID);
        static Windows.Internal.StateRepository.PackageProperty GetByPackageAndIndex(Package Package, Int32 Index);
        static Windows.Internal.StateRepository.PackageProperty TryGetByPackageAndIndex(Package Package, Int32 Index);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.PackageProperty>  Find();
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.PackageProperty>  FindByName(String Name);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.PackageProperty>  FindByPackage(Package Package);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.PackageProperty>  FindByPackageAndName(Package Package, String Name);
        static Boolean ExistsByUserAndName(User user, String name);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.PackageProperty>  FindByUserAndName(User user, String name);
        PackageProperty();
        Int64 _PackagePropertyID{ get; };
        Int64 _PackagePropertyID{ set; };
        UInt64 _Revision{ get; };
        UInt64 _Revision{ set; };
        Int64 Package{ get; };
        Int64 Package{ set; };
        Windows.Internal.StateRepository.Package GetPackage();
        void SetPackage(Package value);
        Int32 Index{ get; };
        Int32 Index{ set; };
        String Name{ get; };
        String Name{ set; };
        Boolean Is_DictionaryNull{ get; };
        void Set_DictionaryToNull();
        void Get_Dictionary(out UInt8[] value);
        void Set_Dictionary(UInt8[] value);
        Windows.Foundation.Collections.IPropertySet Get_DictionaryAsPropertySet();
    }


}
