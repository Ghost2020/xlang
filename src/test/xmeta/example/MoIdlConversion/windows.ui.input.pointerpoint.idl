








namespace Windows.UI.Input
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(none)]
    [static_name("Windows.UI.Input.IPointerPointStatics", a506638d-2a1a-413e-bc75-9f38381cc069)]
    [interface_name("Windows.UI.Input.IPointerPoint", e995317d-7296-42d9-8233-c5be73b74a4a)]
    runtimeclass PointerPoint
    {
        [method_name("GetCurrentPoint")] static Windows.UI.Input.PointerPoint GetCurrentPoint(UInt32 pointerId);
        [method_name("GetIntermediatePoints")] static Windows.Foundation.Collections.IVector <Windows.UI.Input.PointerPoint>  GetIntermediatePoints(UInt32 pointerId);
        [method_name("GetCurrentPointTransformed")] static Windows.UI.Input.PointerPoint GetCurrentPoint(UInt32 pointerId, IPointerPointTransform transform);
        [method_name("GetIntermediatePointsTransformed")] static Windows.Foundation.Collections.IVector <Windows.UI.Input.PointerPoint>  GetIntermediatePoints(UInt32 pointerId, IPointerPointTransform transform);
        Windows.Devices.Input.PointerDevice PointerDevice{ get; };
        Windows.Foundation.Point Position{ get; };
        Windows.Foundation.Point RawPosition{ get; };
        UInt32 PointerId{ get; };
        UInt32 FrameId{ get; };
        UInt64 Timestamp{ get; };
        Boolean IsInContact{ get; };
        Windows.UI.Input.PointerPointProperties Properties{ get; };
    }

    [uuid(4d5fe14f-b87c-4028-bc9c-59e9947fb056)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface IPointerPointTransform
    {
        Windows.UI.Input.IPointerPointTransform Inverse{ get; };
        [return_name("returnValue")] Boolean TryTransform(Windows.Foundation.Point inPoint, out Windows.Foundation.Point outPoint);
        Windows.Foundation.Rect TransformBounds(Windows.Foundation.Rect rect);
    };


    [marshaling_behavior(none)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.UI.Input.IPointerPointProperties", c79d8a4b-c163-4ee7-803f-67ce79f9972d)]
    runtimeclass PointerPointProperties
    {
        Single Pressure{ get; };
        Boolean IsInverted{ get; };
        Boolean IsEraser{ get; };
        Single Orientation{ get; };
        Single XTilt{ get; };
        Single YTilt{ get; };
        Single Twist{ get; };
        Windows.Foundation.Rect ContactRect{ get; };
        Windows.Foundation.Rect ContactRectRaw{ get; };
        Boolean TouchConfidence{ get; };
        Boolean IsLeftButtonPressed{ get; };
        Boolean IsRightButtonPressed{ get; };
        Boolean IsMiddleButtonPressed{ get; };
        Int32 MouseWheelDelta{ get; };
        Boolean IsHorizontalMouseWheel{ get; };
        Boolean IsPrimary{ get; };
        Boolean IsInRange{ get; };
        Boolean IsCanceled{ get; };
        Boolean IsBarrelButtonPressed{ get; };
        Boolean IsXButton1Pressed{ get; };
        Boolean IsXButton2Pressed{ get; };
        Windows.UI.Input.PointerUpdateKind PointerUpdateKind{ get; };
        Boolean HasUsage(UInt32 usagePage, UInt32 usageId);
        Int32 GetUsageValue(UInt32 usagePage, UInt32 usageId);

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.UI.Input.IPointerPointProperties2", 22c3433a-c83b-41c0-a296-5e232d64d6af)]
        {
            Windows.Foundation.IReference <Single>  ZDistance{ get; };
        }
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum PointerUpdateKind
    {
        Other,
        LeftButtonPressed,
        LeftButtonReleased,
        RightButtonPressed,
        RightButtonReleased,
        MiddleButtonPressed,
        MiddleButtonReleased,
        XButton1Pressed,
        XButton1Released,
        XButton2Pressed,
        XButton2Released,
    };





    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Input.IPointerVisualizationSettingsStatics", 68870edb-165b-4214-b4f3-584eca8c8a69)]
    [interface_name("Windows.UI.Input.IPointerVisualizationSettings", 4d1e6461-84f7-499d-bd91-2a36e2b7aaa2)]
    runtimeclass PointerVisualizationSettings
    {
        static Windows.UI.Input.PointerVisualizationSettings GetForCurrentView();
        Boolean IsContactFeedbackEnabled{ set; };
        Boolean IsContactFeedbackEnabled{ get; };
        Boolean IsBarrelButtonFeedbackEnabled{ set; };
        Boolean IsBarrelButtonFeedbackEnabled{ get; };
    }

}
