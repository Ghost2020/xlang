











namespace Windows.UI.Input
{
    [contract(Windows.Foundation.UniversalApiContract, 8)]
    enum GazeInputAccessStatus
    {
        Unspecified,
        Allowed,
        DeniedByUser,
        DeniedBySystem,
    };




}
namespace Windows.Perception.People
{
    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [marshaling_behavior(agile)]
    [static_name("Windows.Perception.People.IEyesPoseStatics", 1cff7413-b21f-54c0-80c1-e60d994ca58c)]
    [interface_name("Windows.Perception.People.IEyesPose", 682a9b23-8a1e-5b86-a060-906ffacb62a4)]
    [threading(both)]
    runtimeclass EyesPose
    {
        static Boolean IsSupported();
        static Windows.Foundation.IAsyncOperation <Windows.UI.Input.GazeInputAccessStatus>  RequestAccessAsync();
        Boolean IsCalibrationValid{ get; };
        Windows.Foundation.IReference <Windows.Perception.Spatial.SpatialRay>  Gaze{ get; };
        Windows.Perception.PerceptionTimestamp UpdateTimestamp{ get; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 8)]
    enum HandJointKind
    {
        Palm,
        Wrist,
        ThumbMetacarpal,
        ThumbProximal,
        ThumbDistal,
        ThumbTip,
        IndexMetacarpal,
        IndexProximal,
        IndexIntermediate,
        IndexDistal,
        IndexTip,
        MiddleMetacarpal,
        MiddleProximal,
        MiddleIntermediate,
        MiddleDistal,
        MiddleTip,
        RingMetacarpal,
        RingProximal,
        RingIntermediate,
        RingDistal,
        RingTip,
        LittleMetacarpal,
        LittleProximal,
        LittleIntermediate,
        LittleDistal,
        LittleTip,
    };

    [contract(Windows.Foundation.UniversalApiContract, 8)]
    enum JointPoseAccuracy
    {
        High,
        Approximate,
    };

    [contract(Windows.Foundation.UniversalApiContract, 8)]
    struct JointPose
    {
        Windows.Foundation.Numerics.Quaternion Orientation;
        Windows.Foundation.Numerics.Vector3 Position;
        Single Radius;
        JointPoseAccuracy Accuracy;
    };


    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Perception.People.IHandPose", 4d98e79a-bb08-5d09-91de-df0dd3fae46c)]
    runtimeclass HandPose
    {
        [return_name("result")] Boolean TryGetJoint(Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem, HandJointKind joint, out JointPose jointPose);
        [return_name("result")] Boolean TryGetJoints(Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem, HandJointKind[] joints, ref JointPose[] jointPoses);
        Windows.Perception.People.JointPose GetRelativeJoint(HandJointKind joint, HandJointKind referenceJoint);
        void GetRelativeJoints(HandJointKind[] joints, HandJointKind[] referenceJoints, ref JointPose[] jointPoses);
    }

    [contract(Windows.Foundation.UniversalApiContract, 8)]
    struct HandMeshVertex
    {
        Windows.Foundation.Numerics.Vector3 Position;
        Windows.Foundation.Numerics.Vector3 Normal;
    };


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [interface_name("Windows.Perception.People.IHandMeshVertexState", 046c5fef-1d8b-55de-ab2c-1cd424886d8f)]
    runtimeclass HandMeshVertexState
    {
        Windows.Perception.Spatial.SpatialCoordinateSystem CoordinateSystem{ get; };
        void GetVertices(ref HandMeshVertex[] vertices);
        Windows.Perception.PerceptionTimestamp UpdateTimestamp{ get; };
    }


}
namespace Windows.UI.Input.Spatial
{
    [contract(Windows.Foundation.UniversalApiContract, 2)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionSource", fb5433ba-b0b3-3148-9f3b-e9f5de568f5d)]
    runtimeclass SpatialInteractionSource
    {
        UInt32 Id{ get; };
        Windows.UI.Input.Spatial.SpatialInteractionSourceKind Kind{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionSource2", e4c5b70c-0470-4028-88c0-a0eb44d34efe)]
        {
            Boolean IsPointingSupported{ get; };
            Boolean IsMenuSupported{ get; };
            Boolean IsGraspSupported{ get; };
            Windows.UI.Input.Spatial.SpatialInteractionController Controller{ get; };
            Windows.UI.Input.Spatial.SpatialInteractionSourceState TryGetStateAtTimestamp(Windows.Perception.PerceptionTimestamp timestamp);
        }

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionSource3", 0406d9f9-9afd-44f9-85dc-700023a962e3)]
        {
            Windows.UI.Input.Spatial.SpatialInteractionSourceHandedness Handedness{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 8)]
        [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionSource4", 0073bc4d-df66-5a91-a2ba-cea3e5c58a19)]
        {
            Windows.Perception.People.HandMeshObserver TryCreateHandMeshObserver();
            Windows.Foundation.IAsyncOperation <Windows.Perception.People.HandMeshObserver>  TryCreateHandMeshObserverAsync();
        }
    }

}
namespace Windows.Perception.People
{
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [interface_name("Windows.Perception.People.IHandMeshObserver", 85ae30cb-6fc3-55c4-a7b4-29e33896ca69)]
    runtimeclass HandMeshObserver
    {
        Windows.UI.Input.Spatial.SpatialInteractionSource Source{ get; };
        UInt32 TriangleIndexCount{ get; };
        UInt32 VertexCount{ get; };
        void GetTriangleIndices(ref UInt16[] indices);
        Windows.Perception.People.HandMeshVertexState GetVertexStateForPose(HandPose handPose);
        Windows.Perception.People.HandPose NeutralPose{ get; };
        Int32 NeutralPoseVersion{ get; };
        Int32 ModelId{ get; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 2)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Perception.People.IHeadPose", 7f5ac5a5-49db-379f-9429-32a2faf34fa6)]
    runtimeclass HeadPose
    {
        Windows.Foundation.Numerics.Vector3 Position{ get; };
        Windows.Foundation.Numerics.Vector3 ForwardDirection{ get; };
        Windows.Foundation.Numerics.Vector3 UpDirection{ get; };
    }

}
namespace Windows.UI.Input.Spatial
{
    [contract(Windows.Foundation.UniversalApiContract, 2)]
    enum SpatialInteractionSourceKind
    {
        Other,
        Hand,
        Voice,
        Controller,
    };

    [contract(Windows.Foundation.UniversalApiContract, 4)]
    enum SpatialInteractionPressKind
    {
        None,
        Select,
        Menu,
        Grasp,
        Touchpad,
        Thumbstick,
    };

    [contract(Windows.Foundation.UniversalApiContract, 5)]
    enum SpatialInteractionSourceHandedness
    {
        Unspecified,
        Left,
        Right,
    };

    [contract(Windows.Foundation.UniversalApiContract, 5)]
    enum SpatialInteractionSourcePositionAccuracy
    {
        High,
        Approximate,
    };




    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 4)]
    [interface_name("Windows.UI.Input.Spatial.ISpatialPointerInteractionSourcePose", a7104307-2c2b-4d3a-92a7-80ced7c4a0d0)]
    runtimeclass SpatialPointerInteractionSourcePose
    {
        Windows.Foundation.Numerics.Vector3 Position{ get; };
        Windows.Foundation.Numerics.Vector3 ForwardDirection{ get; };
        Windows.Foundation.Numerics.Vector3 UpDirection{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [interface_name("Windows.UI.Input.Spatial.ISpatialPointerInteractionSourcePose2", eccd86b8-52db-469f-9e3f-80c47f74bce9)]
        {
            Windows.Foundation.Numerics.Quaternion Orientation{ get; };
            Windows.UI.Input.Spatial.SpatialInteractionSourcePositionAccuracy PositionAccuracy{ get; };
        }
    }





    [contract(Windows.Foundation.UniversalApiContract, 4)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionController", 5f0e5ba3-0954-4e97-86c5-e7f30b114dfd)]
    runtimeclass SpatialInteractionController
    {
        Boolean HasTouchpad{ get; };
        Boolean HasThumbstick{ get; };
        Windows.Devices.Haptics.SimpleHapticsController SimpleHapticsController{ get; };
        UInt16 VendorId{ get; };
        UInt16 ProductId{ get; };
        UInt16 Version{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionController2", 35b6d924-c7a2-49b7-b72e-5436b2fb8f9c)]
        {
            Windows.Foundation.IAsyncOperation <Windows.Storage.Streams.IRandomAccessStreamWithContentType>  TryGetRenderableModelAsync();
        }

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [feature(Velocity_AlwaysAlwaysEnabled)]
        [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionController3", 628466a0-9d91-4a0b-888d-165e670a8cd5)]
        {
            Windows.Devices.Power.BatteryReport TryGetBatteryReport();
        }
    }

    [contract(Windows.Foundation.UniversalApiContract, 2)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionSourceState", d5c475ef-4b63-37ec-98b9-9fc652b9d2f2)]
    runtimeclass SpatialInteractionSourceState
    {
        Windows.UI.Input.Spatial.SpatialInteractionSource Source{ get; };
        Windows.UI.Input.Spatial.SpatialInteractionSourceProperties Properties{ get; };
        Boolean IsPressed{ get; };
        Windows.Perception.PerceptionTimestamp Timestamp{ get; };
        Windows.UI.Input.Spatial.SpatialPointerPose TryGetPointerPose(Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem);

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionSourceState2", 45f6d0bd-1773-492e-9ba3-8ac1cbe77c08)]
        {
            Boolean IsSelectPressed{ get; };
            Boolean IsMenuPressed{ get; };
            Boolean IsGrasped{ get; };
            Double SelectPressedValue{ get; };
            Windows.UI.Input.Spatial.SpatialInteractionControllerProperties ControllerProperties{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 8)]
        [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionSourceState3", f2f00bc2-bd2b-4a01-a8fb-323e0158527c)]
        {
            Windows.Perception.People.HandPose TryGetHandPose();
        }
    }




    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 2)]
    [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionSourceLocation", ea4696c4-7e8b-30ca-bcc5-c77189cea30a)]
    runtimeclass SpatialInteractionSourceLocation
    {
        Windows.Foundation.IReference <Windows.Foundation.Numerics.Vector3>  Position{ get; };
        Windows.Foundation.IReference <Windows.Foundation.Numerics.Vector3>  Velocity{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionSourceLocation2", 4c671045-3917-40fc-a9ac-31c9cf5ff91b)]
        {
            Windows.Foundation.IReference <Windows.Foundation.Numerics.Quaternion>  Orientation{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionSourceLocation3", 6702e65e-e915-4cfb-9c1b-0538efc86687)]
        {
            Windows.UI.Input.Spatial.SpatialInteractionSourcePositionAccuracy PositionAccuracy{ get; };
            Windows.Foundation.IReference <Windows.Foundation.Numerics.Vector3>  AngularVelocity{ get; };
            Windows.UI.Input.Spatial.SpatialPointerInteractionSourcePose SourcePointerPose{ get; };
        }
    }








    [contract(Windows.Foundation.UniversalApiContract, 2)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Input.Spatial.ISpatialPointerPoseStatics", a25591a9-aca1-3ee0-9816-785cfb2e3fb8)]
    [interface_name("Windows.UI.Input.Spatial.ISpatialPointerPose", 6953a42e-c17e-357d-97a1-7269d0ed2d10)]
    [threading(both)]
    runtimeclass SpatialPointerPose
    {
        static Windows.UI.Input.Spatial.SpatialPointerPose TryGetAtTimestamp(Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem, Windows.Perception.PerceptionTimestamp timestamp);
        Windows.Perception.PerceptionTimestamp Timestamp{ get; };
        Windows.Perception.People.HeadPose Head{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [interface_name("Windows.UI.Input.Spatial.ISpatialPointerPose2", 9d202b17-954e-4e0c-96d1-b6790b6fc2fd)]
        {
            Windows.UI.Input.Spatial.SpatialPointerInteractionSourcePose TryGetInteractionSourcePose(SpatialInteractionSource source);
        }

        [contract(Windows.Foundation.UniversalApiContract, 8)]
        [interface_name("Windows.UI.Input.Spatial.ISpatialPointerPose3", 6342f3f0-ec49-5b4b-b8d1-d16cbb16be84)]
        {
            Windows.Perception.People.EyesPose Eyes{ get; };
            Boolean IsHeadCapturedBySystem{ get; };
        }
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 2)]
    [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionSourceProperties", 05604542-3ef7-3222-9f53-63c9cb7e3bc7)]
    runtimeclass SpatialInteractionSourceProperties
    {
        Windows.Foundation.IReference <Windows.Foundation.Numerics.Vector3>  TryGetSourceLossMitigationDirection(Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem);
        Double SourceLossRisk{ get; };
        Windows.UI.Input.Spatial.SpatialInteractionSourceLocation TryGetLocation(Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem);
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 4)]
    [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionControllerProperties", 61056fb1-7ba9-4e35-b93f-9272cba9b28b)]
    runtimeclass SpatialInteractionControllerProperties
    {
        Boolean IsTouchpadTouched{ get; };
        Boolean IsTouchpadPressed{ get; };
        Boolean IsThumbstickPressed{ get; };
        Double ThumbstickX{ get; };
        Double ThumbstickY{ get; };
        Double TouchpadX{ get; };
        Double TouchpadY{ get; };
    }





    [contract(Windows.Foundation.UniversalApiContract, 2)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Input.Spatial.ISpatialInteraction", fc967639-88e6-4646-9112-4344aaec9dfa)]
    runtimeclass SpatialInteraction
    {
        Windows.UI.Input.Spatial.SpatialInteractionSourceState SourceState{ get; };
    }





    [contract(Windows.Foundation.UniversalApiContract, 2)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Input.Spatial.ISpatialInteractionManagerStatics", 00e31fa6-8ca2-30bf-91fe-d9cb4a008990)]
    [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionManager", 32a64ea8-a15a-3995-b8bd-80513cb5adef)]
    [threading(both)]
    runtimeclass SpatialInteractionManager
    {

        [contract(Windows.Foundation.UniversalApiContract, 8)]
        [static_name("Windows.UI.Input.Spatial.ISpatialInteractionManagerStatics2", 93f16c52-b88a-5929-8d7c-48cb948b081c)]
        {
            static Boolean IsSourceKindSupported(SpatialInteractionSourceKind kind);
        }
        static Windows.UI.Input.Spatial.SpatialInteractionManager GetForCurrentView();
        event Windows.Foundation.TypedEventHandler <Windows.UI.Input.Spatial.SpatialInteractionManager, Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs>  SourceDetected;
        event Windows.Foundation.TypedEventHandler <Windows.UI.Input.Spatial.SpatialInteractionManager, Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs>  SourceLost;
        event Windows.Foundation.TypedEventHandler <Windows.UI.Input.Spatial.SpatialInteractionManager, Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs>  SourceUpdated;
        event Windows.Foundation.TypedEventHandler <Windows.UI.Input.Spatial.SpatialInteractionManager, Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs>  SourcePressed;
        event Windows.Foundation.TypedEventHandler <Windows.UI.Input.Spatial.SpatialInteractionManager, Windows.UI.Input.Spatial.SpatialInteractionSourceEventArgs>  SourceReleased;
        event Windows.Foundation.TypedEventHandler <Windows.UI.Input.Spatial.SpatialInteractionManager, Windows.UI.Input.Spatial.SpatialInteractionDetectedEventArgs>  InteractionDetected;
        Windows.Foundation.Collections.IVectorView <Windows.UI.Input.Spatial.SpatialInteractionSourceState>  GetDetectedSourcesAtTimestamp(Windows.Perception.PerceptionTimestamp timeStamp);
    }

    [contract(Windows.Foundation.UniversalApiContract, 2)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionSourceEventArgs", 23b786cf-ec23-3979-b27c-eb0e12feb7c7)]
    runtimeclass SpatialInteractionSourceEventArgs
    {
        Windows.UI.Input.Spatial.SpatialInteractionSourceState State{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionSourceEventArgs2", d8b4b467-e648-4d52-ab49-e0d227199f63)]
        {
            Windows.UI.Input.Spatial.SpatialInteractionPressKind PressKind{ get; };
        }
    }

    [contract(Windows.Foundation.UniversalApiContract, 2)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionDetectedEventArgs", 075878e4-5961-3b41-9dfb-cea5d89cc38a)]
    runtimeclass SpatialInteractionDetectedEventArgs
    {
        Windows.UI.Input.Spatial.SpatialInteractionSourceKind InteractionSourceKind{ get; };
        Windows.UI.Input.Spatial.SpatialPointerPose TryGetPointerPose(Windows.Perception.Spatial.SpatialCoordinateSystem coordinateSystem);
        Windows.UI.Input.Spatial.SpatialInteraction Interaction{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [interface_name("Windows.UI.Input.Spatial.ISpatialInteractionDetectedEventArgs2", 7b263e93-5f13-419c-97d5-834678266aa6)]
        {
            Windows.UI.Input.Spatial.SpatialInteractionSource InteractionSource{ get; };
        }
    }



}
