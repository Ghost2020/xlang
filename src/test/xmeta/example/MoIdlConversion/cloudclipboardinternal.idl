








namespace Windows.ApplicationModel.Internal.DataTransfer
{
    [contractversion(1)]
    [internal]
    apicontract CloudClipboardInternalContract{};

    [contract(Windows.ApplicationModel.Internal.DataTransfer.CloudClipboardInternalContract, 1)]
    enum ClipboardItemStatus
    {
        New,
        Published,
        Queued,
        NetworkError,
        ServiceError,
    };

    [contract(Windows.ApplicationModel.Internal.DataTransfer.CloudClipboardInternalContract, 1)]
    enum ClipboardItemSaveResult
    {
        Unknown,
        Success,
        ExceedsSize,
        EnterpriseProtected,
        NotEligible,
        NoSupportedFormats,
        NoAccount,
        Throttled,
    };

    [contract(Windows.ApplicationModel.Internal.DataTransfer.CloudClipboardInternalContract, 1)]
    enum AccountStatus
    {
        Unknown,
        Success,
        NoAccount,
    };


    [contract(Windows.ApplicationModel.Internal.DataTransfer.CloudClipboardInternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Internal.DataTransfer.IClipboardItem", 9d046887-92cb-5851-88d4-80742a427c14)]
    runtimeclass ClipboardItem
    {
        String Id{ get; };
        Windows.ApplicationModel.DataTransfer.DataPackageView Data{ get; };
        Windows.Foundation.DateTime CreationTime{ get; };
        String SourceFriendlyName{ get; };
        Windows.ApplicationModel.Internal.DataTransfer.ClipboardItemStatus Status{ get; };
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Internal.DataTransfer.ClipboardItem, Object>  StatusChanged;
        Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Internal.DataTransfer.ClipboardItemSaveResult>  SaveAsync(String correlationVector);
    }


    [contract(Windows.ApplicationModel.Internal.DataTransfer.CloudClipboardInternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Internal.DataTransfer.IClipboardItemsAddedEventArgs", 3fb4539d-2088-54cc-a7c0-544d7dd9ed0b)]
    runtimeclass ClipboardItemsAddedEventArgs
    {
        Windows.Foundation.Collections.IVector <Windows.ApplicationModel.Internal.DataTransfer.ClipboardItem>  Items{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.ApplicationModel.Internal.DataTransfer.CloudClipboardInternalContract, 1)]
    [constructor_name("Windows.ApplicationModel.Internal.DataTransfer.IClipboardChannelFactory", fa2e140c-f3f3-53d9-9c2c-312524cf70bd)]
    [interface_name("Windows.ApplicationModel.Internal.DataTransfer.IClipboardChannel", 29941aef-8332-5acb-a051-57a39ad82831)]
    [threading(both)]
    runtimeclass ClipboardChannel
    {
        [method_name( "CreateForWebAccount" )] ClipboardChannel(Windows.Security.Credentials.WebAccount account);
        UInt32 GetMaxItemSizeSupportedInBytes();
        Windows.ApplicationModel.Internal.DataTransfer.ClipboardItem CreateItem(Windows.ApplicationModel.DataTransfer.DataPackageView data);
        Windows.Foundation.IAsyncOperation <Windows.Foundation.Collections.IVector <Windows.ApplicationModel.Internal.DataTransfer.ClipboardItem> >  GetRecentItemsAsync(UInt32 maxItems);
        Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Internal.DataTransfer.ClipboardItem>  GetItemAsync(String itemId);
        Windows.Foundation.IAsyncAction DeleteItemAsync(String itemId);
        Windows.Foundation.IAsyncAction DeleteAllItemsAsync();
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Internal.DataTransfer.ClipboardChannel, Object>  ItemsChanged;
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Internal.DataTransfer.ClipboardChannel, Windows.ApplicationModel.Internal.DataTransfer.ClipboardItemsAddedEventArgs>  ItemsAdded;
    }


}
