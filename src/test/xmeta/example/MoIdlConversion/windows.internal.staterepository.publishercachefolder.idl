










namespace Windows.Internal.StateRepository
{
    [contract(Windows.Internal.StateRepository.StateRepositoryContract, 1)]
    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [static_name("Windows.Internal.StateRepository.IPublisherCacheFolderStatics", f8f4dd1b-371f-48d3-b2be-c71c9c34b202)]
    [interface_name("Windows.Internal.StateRepository.IPublisherCacheFolder", 4cace330-0a8f-49ef-9e85-39cd667de608)]
    [threading(both)]
    runtimeclass PublisherCacheFolder
    {
        PublisherCacheFolder();
        static Boolean Exists(Int64 publisherCacheFolderID);
        static Boolean ExistsByFolderName(String FolderName);
        static Boolean ExistsByPackageExtension(PackageExtension PackageExtension);
        static Boolean ExistsByPackageExtensionAndFolderName(PackageExtension PackageExtension, String FolderName);
        static Boolean ExistsByPackageExtensionAndIndex(PackageExtension PackageExtension, Int32 Index);
        static Windows.Internal.StateRepository.PublisherCacheFolder Get(Int64 publisherCacheFolderID);
        static Windows.Internal.StateRepository.PublisherCacheFolder TryGet(Int64 publisherCacheFolderID);
        static Windows.Internal.StateRepository.PublisherCacheFolder GetByPackageExtensionAndFolderName(PackageExtension PackageExtension, String FolderName);
        static Windows.Internal.StateRepository.PublisherCacheFolder TryGetByPackageExtensionAndFolderName(PackageExtension PackageExtension, String FolderName);
        static Windows.Internal.StateRepository.PublisherCacheFolder GetByPackageExtensionAndIndex(PackageExtension PackageExtension, Int32 Index);
        static Windows.Internal.StateRepository.PublisherCacheFolder TryGetByPackageExtensionAndIndex(PackageExtension PackageExtension, Int32 Index);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.PublisherCacheFolder>  Find();
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.PublisherCacheFolder>  FindByFolderName(String FolderName);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.PublisherCacheFolder>  FindByPackageExtension(PackageExtension PackageExtension);
        Int64 _PublisherCacheFolderID{ get; };
        Int64 _PublisherCacheFolderID{ set; };
        UInt64 _Revision{ get; };
        UInt64 _Revision{ set; };
        Int64 PackageExtension{ get; };
        Int64 PackageExtension{ set; };
        Windows.Internal.StateRepository.PackageExtension GetPackageExtension();
        void SetPackageExtension(PackageExtension value);
        Int32 Index{ get; };
        Int32 Index{ set; };
        Boolean IsFolderNameNull{ get; };
        void SetFolderNameToNull();
        String FolderName{ get; };
        String FolderName{ set; };
        Windows.Storage.StorageFolder GetFolderNameAsStorageFolder();
        void SetFolderNameAsStorageFolder(Windows.Storage.IStorageFolder value);
        Boolean Is_DictionaryNull{ get; };
        void Set_DictionaryToNull();
        void Get_Dictionary(out UInt8[] value);
        void Set_Dictionary(UInt8[] value);
        Windows.Foundation.Collections.IPropertySet Get_DictionaryAsPropertySet();
    }


}
