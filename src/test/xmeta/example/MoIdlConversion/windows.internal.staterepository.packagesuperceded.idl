










namespace Windows.Internal.StateRepository
{
    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [contract(Windows.Internal.StateRepository.StateRepositoryContract, 1)]
    [static_name("Windows.Internal.StateRepository.IPackageSupercededStatics", 4d2303fa-4f96-48c2-bd30-42c88e18b7e2)]
    [interface_name("Windows.Internal.StateRepository.IPackageSuperceded", 83e13c21-bf5f-4301-8fb8-0c6ddc6f6617)]
    [threading(both)]
    runtimeclass PackageSuperceded
    {
        static Boolean Exists(Int64 packageSupercededID);
        static Boolean ExistsByPackageIdentity(PackageIdentity PackageIdentity);
        static Boolean ExistsByUser(User User);
        static Boolean ExistsByUserAndPackageIdentity(User User, PackageIdentity PackageIdentity);
        static Windows.Internal.StateRepository.PackageSuperceded TryGet(Int64 packageSupercededID);
        static Windows.Internal.StateRepository.PackageSuperceded TryGetByUserAndPackageIdentity(User User, PackageIdentity PackageIdentity);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.PackageSuperceded>  Find();
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.PackageSuperceded>  FindByPackageIdentity(PackageIdentity PackageIdentity);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.PackageSuperceded>  FindByUser(User User);
        PackageSuperceded();
        Int64 _PackageSupercededID{ get; };
        Int64 _PackageSupercededID{ set; };
        UInt64 _Revision{ get; };
        UInt64 _Revision{ set; };
        Int64 PackageIdentity{ get; };
        Int64 PackageIdentity{ set; };
        Windows.Internal.StateRepository.PackageIdentity GetPackageIdentity();
        void SetPackageIdentity(PackageIdentity value);
        Int64 User{ get; };
        Int64 User{ set; };
        Windows.Internal.StateRepository.User GetUser();
        void SetUser(User value);
        Boolean Is_DictionaryNull{ get; };
        void Set_DictionaryToNull();
        void Get_Dictionary(out UInt8[] value);
        void Set_Dictionary(UInt8[] value);
        Windows.Foundation.Collections.IPropertySet Get_DictionaryAsPropertySet();
    }


}
