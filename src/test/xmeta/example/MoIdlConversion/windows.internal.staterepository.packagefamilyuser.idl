










namespace Windows.Internal.StateRepository
{
    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [contract(Windows.Internal.StateRepository.StateRepositoryContract, 1)]
    [static_name("Windows.Internal.StateRepository.IPackageFamilyUserStatics", 4ec53a8e-e721-4b6a-988e-be771b150fd8)]
    [interface_name("Windows.Internal.StateRepository.IPackageFamilyUser", ababc380-d1ae-4da3-9385-bea8f704aa5b)]
    [threading(both)]
    runtimeclass PackageFamilyUser
    {
        static Boolean Exists(Int64 packageFamilyUserID);
        static Boolean ExistsByPackageFamily(PackageFamily PackageFamily);
        static Boolean ExistsByUser(User User);
        static Boolean ExistsByUserAndPackageFamily(User User, PackageFamily PackageFamily);
        static Windows.Internal.StateRepository.PackageFamilyUser TryGet(Int64 packageFamilyUserID);
        static Windows.Internal.StateRepository.PackageFamilyUser TryGetByUserAndPackageFamily(User User, PackageFamily PackageFamily);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.PackageFamilyUser>  Find();
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.PackageFamilyUser>  FindByPackageFamily(PackageFamily PackageFamily);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.PackageFamilyUser>  FindByUser(User User);
        static Boolean ExistsByPackageFamilyName(String packageFamilyName);
        static Boolean ExistsByUserAndPackageFamilyName(User user, String packageFamilyName);
        static Windows.Internal.StateRepository.PackageFamilyUser TryGetByUserAndPackageFamilyName(User user, String packageFamilyName);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.PackageFamilyUser>  FindByPackageFamilyName(String packageFamilyName);
        PackageFamilyUser();
        Int64 _PackageFamilyUserID{ get; };
        Int64 _PackageFamilyUserID{ set; };
        UInt64 _Revision{ get; };
        UInt64 _Revision{ set; };
        Int64 PackageFamily{ get; };
        Int64 PackageFamily{ set; };
        Windows.Internal.StateRepository.PackageFamily GetPackageFamily();
        void SetPackageFamily(PackageFamily value);
        Int64 User{ get; };
        Int64 User{ set; };
        Windows.Internal.StateRepository.User GetUser();
        void SetUser(User value);
        Windows.Foundation.DateTime WhenInstalled{ get; };
        Windows.Foundation.DateTime WhenInstalled{ set; };
        Boolean Is_DictionaryNull{ get; };
        void Set_DictionaryToNull();
        void Get_Dictionary(out UInt8[] value);
        void Set_Dictionary(UInt8[] value);
        Windows.Foundation.Collections.IPropertySet Get_DictionaryAsPropertySet();
    }


}
