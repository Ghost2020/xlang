







namespace Windows.UI.Input.Preview.Injection
{
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [flags]
    enum InjectedInputTouchParameters
    {
        None,
        Contact,
        Orientation,
        Pressure = 4,
    };

    [flags]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    enum InjectedInputPointerOptions
    {
        None,
        New,
        InRange,
        InContact = 4,
        FirstButton = 16,
        SecondButton = 32,
        Primary = 8192,
        Confidence = 16384,
        Canceled = 32768,
        PointerDown = 65536,
        Update = 131072,
        PointerUp = 262144,
        CaptureChanged = 2097152,
    };

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    enum InjectedInputButtonChangeKind
    {
        None,
        FirstButtonDown,
        FirstButtonUp,
        SecondButtonDown,
        SecondButtonUp,
        ThirdButtonDown,
        ThirdButtonUp,
        FourthButtonDown,
        FourthButtonUp,
        FifthButtonDown,
        FifthButtonUp,
    };

    [flags]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    enum InjectedInputPenButtons
    {
        None,
        Barrel,
        Inverted,
        Eraser = 4,
    };

    [flags]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    enum InjectedInputPenParameters
    {
        None,
        Pressure,
        Rotation,
        TiltX = 4,
        TiltY = 8,
    };

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [flags]
    enum InjectedInputMouseOptions
    {
        None,
        Move,
        LeftDown,
        LeftUp = 4,
        RightDown = 8,
        RightUp = 16,
        MiddleDown = 32,
        MiddleUp = 64,
        XDown = 128,
        XUp = 256,
        Wheel = 2048,
        HWheel = 4096,
        MoveNoCoalesce = 8192,
        VirtualDesk = 16384,
        Absolute = 32768,
    };

    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [feature(Velocity_AlwaysAlwaysDisabled)]
    enum InjectedInputButtonKind
    {
        None,
        ChannelIncrement,
        ChannelDecrement,
        Play,
        Pause,
        Record,
        FastForward,
        Rewind,
        NextTrack,
        PreviousTrack,
        Stop,
        PlayPause,
        Mute,
        VolumeUp,
        VolumeDown,
        LaunchSettings,
        LaunchEmail,
        LaunchCalculator,
        LaunchBrowser,
        Home,
        Back,
        Forward,
        ApplicationStop,
        Refresh,
        Favorites,
    };

    [feature(Velocity_AlwaysAlwaysDisabled)]
    [contract(Windows.Foundation.UniversalApiContract, 8)]
    enum InjectedInputButtonEvent
    {
        None,
        Down,
        Up,
    };

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [flags]
    enum InjectedInputKeyOptions
    {
        None,
        ExtendedKey,
        KeyUp,
        ScanCode = 8,
        Unicode = 4,
    };

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    enum InjectedInputShortcut
    {
        Back,
        Start,
        Search,
    };

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    enum InjectedInputVisualizationMode
    {
        None,
        Default,
        Indirect,
    };

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    struct InjectedInputRectangle
    {
        Int32 Left;
        Int32 Top;
        Int32 Bottom;
        Int32 Right;
    };

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    struct InjectedInputPoint
    {
        Int32 PositionX;
        Int32 PositionY;
    };

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    struct InjectedInputPointerInfo
    {
        UInt32 PointerId;
        InjectedInputPointerOptions PointerOptions;
        InjectedInputPoint PixelLocation;
        UInt32 TimeOffsetInMilliseconds;
        UInt64 PerformanceCount;
    };








    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [interface_name("Windows.UI.Input.Preview.Injection.IInjectedInputGamepadInfo", 20ae9a3f-df11-4572-a9ab-d75b8a5e48ad)]
    runtimeclass InjectedInputGamepadInfo
    {
        InjectedInputGamepadInfo();

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [constructor_name("Windows.UI.Input.Preview.Injection.IInjectedInputGamepadInfoFactory", 59596876-6c39-4ec4-8b2a-29ef7de18aca)]
        {
            [method_name("CreateInstanceFromGamepadReading")] [overload( "CreateInstance" )] InjectedInputGamepadInfo(Windows.Gaming.Input.GamepadReading reading);
        }
        Windows.Gaming.Input.GamepadButtons Buttons{ get; };
        Windows.Gaming.Input.GamepadButtons Buttons{ set; };
        Double LeftThumbstickX{ get; };
        Double LeftThumbstickX{ set; };
        Double LeftThumbstickY{ get; };
        Double LeftThumbstickY{ set; };
        Double LeftTrigger{ get; };
        Double LeftTrigger{ set; };
        Double RightThumbstickX{ get; };
        Double RightThumbstickX{ set; };
        Double RightThumbstickY{ get; };
        Double RightThumbstickY{ set; };
        Double RightTrigger{ get; };
        Double RightTrigger{ set; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.UI.Input.Preview.Injection.IInjectedInputKeyboardInfo", 4b46d140-2b6a-5ffa-7eae-bd077b052acd)]
    runtimeclass InjectedInputKeyboardInfo
    {
        InjectedInputKeyboardInfo();
        Windows.UI.Input.Preview.Injection.InjectedInputKeyOptions KeyOptions{ get; };
        Windows.UI.Input.Preview.Injection.InjectedInputKeyOptions KeyOptions{ set; };
        UInt16 ScanCode{ get; };
        UInt16 ScanCode{ set; };
        UInt16 VirtualKey{ get; };
        UInt16 VirtualKey{ set; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.UI.Input.Preview.Injection.IInjectedInputMouseInfo", 96f56e6b-e47a-5cf4-418d-8a5fb9670c7d)]
    runtimeclass InjectedInputMouseInfo
    {
        InjectedInputMouseInfo();
        Windows.UI.Input.Preview.Injection.InjectedInputMouseOptions MouseOptions{ get; };
        Windows.UI.Input.Preview.Injection.InjectedInputMouseOptions MouseOptions{ set; };
        UInt32 MouseData{ get; };
        UInt32 MouseData{ set; };
        Int32 DeltaY{ get; };
        Int32 DeltaY{ set; };
        Int32 DeltaX{ get; };
        Int32 DeltaX{ set; };
        UInt32 TimeOffsetInMilliseconds{ get; };
        UInt32 TimeOffsetInMilliseconds{ set; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.UI.Input.Preview.Injection.IInjectedInputTouchInfo", 224fd1df-43e8-5ef5-510a-69ca8c9b4c28)]
    runtimeclass InjectedInputTouchInfo
    {
        InjectedInputTouchInfo();
        Windows.UI.Input.Preview.Injection.InjectedInputRectangle Contact{ get; };
        Windows.UI.Input.Preview.Injection.InjectedInputRectangle Contact{ set; };
        Int32 Orientation{ get; };
        Int32 Orientation{ set; };
        Windows.UI.Input.Preview.Injection.InjectedInputPointerInfo PointerInfo{ get; };
        Windows.UI.Input.Preview.Injection.InjectedInputPointerInfo PointerInfo{ set; };
        Double Pressure{ get; };
        Double Pressure{ set; };
        Windows.UI.Input.Preview.Injection.InjectedInputTouchParameters TouchParameters{ get; };
        Windows.UI.Input.Preview.Injection.InjectedInputTouchParameters TouchParameters{ set; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.UI.Input.Preview.Injection.IInjectedInputPenInfo", 6b40ad03-ca1e-5527-7e02-2828540bb1d4)]
    runtimeclass InjectedInputPenInfo
    {
        InjectedInputPenInfo();
        Windows.UI.Input.Preview.Injection.InjectedInputPointerInfo PointerInfo{ get; };
        Windows.UI.Input.Preview.Injection.InjectedInputPointerInfo PointerInfo{ set; };
        Windows.UI.Input.Preview.Injection.InjectedInputPenButtons PenButtons{ get; };
        Windows.UI.Input.Preview.Injection.InjectedInputPenButtons PenButtons{ set; };
        Windows.UI.Input.Preview.Injection.InjectedInputPenParameters PenParameters{ get; };
        Windows.UI.Input.Preview.Injection.InjectedInputPenParameters PenParameters{ set; };
        Double Pressure{ get; };
        Double Pressure{ set; };
        Double Rotation{ get; };
        Double Rotation{ set; };
        Int32 TiltX{ get; };
        Int32 TiltX{ set; };
        Int32 TiltY{ get; };
        Int32 TiltY{ set; };
    }



    [feature(Velocity_AlwaysAlwaysDisabled)]
    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [interface_name("Windows.UI.Input.Preview.Injection.IInjectedInputButtonInfo", a2c657b1-3587-57eb-a052-560c1ac7d750)]
    runtimeclass InjectedInputButtonInfo
    {
        InjectedInputButtonInfo();
        Windows.UI.Input.Preview.Injection.InjectedInputButtonKind ButtonKind{ get; };
        Windows.UI.Input.Preview.Injection.InjectedInputButtonKind ButtonKind{ set; };
        Windows.UI.Input.Preview.Injection.InjectedInputButtonEvent ButtonEvent{ get; };
        Windows.UI.Input.Preview.Injection.InjectedInputButtonEvent ButtonEvent{ set; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [static_name("Windows.UI.Input.Preview.Injection.IInputInjectorStatics", deae6943-7402-4141-a5c6-0c01aa57b16a)]
    [interface_name("Windows.UI.Input.Preview.Injection.IInputInjector", 8ec26f84-0b02-4bd2-ad7a-3d4658be3e18)]
    runtimeclass InputInjector
    {
        static Windows.UI.Input.Preview.Injection.InputInjector TryCreate();

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [static_name("Windows.UI.Input.Preview.Injection.IInputInjectorStatics2", a4db38fb-dd8c-414f-95ea-f87ef4c0ae6c)]
        {
            static Windows.UI.Input.Preview.Injection.InputInjector TryCreateForAppBroadcastOnly();
        }
        void InjectKeyboardInput(Windows.Foundation.Collections.IIterable <Windows.UI.Input.Preview.Injection.InjectedInputKeyboardInfo>  input);
        void InjectMouseInput(Windows.Foundation.Collections.IIterable <Windows.UI.Input.Preview.Injection.InjectedInputMouseInfo>  input);
        void InitializeTouchInjection(InjectedInputVisualizationMode visualMode);
        void InjectTouchInput(Windows.Foundation.Collections.IIterable <Windows.UI.Input.Preview.Injection.InjectedInputTouchInfo>  input);
        void UninitializeTouchInjection();
        void InitializePenInjection(InjectedInputVisualizationMode visualMode);
        void InjectPenInput(InjectedInputPenInfo input);
        void UninitializePenInjection();
        void InjectShortcut(InjectedInputShortcut shortcut);

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [interface_name("Windows.UI.Input.Preview.Injection.IInputInjector2", 8e7a905d-1453-43a7-9bcb-06d6d7b305f7)]
        {
            void InitializeGamepadInjection();
            void InjectGamepadInput(InjectedInputGamepadInfo input);
            void UninitializeGamepadInjection();
        }

        [contract(Windows.Foundation.UniversalApiContract, 8)]
        [feature(Velocity_AlwaysAlwaysDisabled)]
        [interface_name("Windows.UI.Input.Preview.Injection.IInputInjector3", ef2c0f77-5e6a-4c4a-9db3-b6d3293cc05c)]
        {
            void InjectButtonInput(Windows.Foundation.Collections.IIterable <Windows.UI.Input.Preview.Injection.InjectedInputButtonInfo>  input);
        }
    }


}
