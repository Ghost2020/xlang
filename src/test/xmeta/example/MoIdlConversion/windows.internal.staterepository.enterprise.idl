








namespace Windows.Internal.StateRepository
{
    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [contract(Windows.Internal.StateRepository.StateRepositoryContract, 1)]
    [static_name("Windows.Internal.StateRepository.IEnterpriseStatics", 2a7443bf-6ad0-475d-a31f-c59df67ab9c4)]
    [interface_name("Windows.Internal.StateRepository.IEnterprise", f307fba7-2714-45ec-92ff-d47a27b1a8ba)]
    [threading(both)]
    runtimeclass Enterprise
    {
        static Boolean Exists(Int64 enterpriseID);
        static Boolean ExistsByEnterpriseId(Guid EnterpriseId);
        static Windows.Internal.StateRepository.Enterprise Get(Int64 enterpriseID);
        static Windows.Internal.StateRepository.Enterprise TryGet(Int64 enterpriseID);
        static Windows.Internal.StateRepository.Enterprise GetByEnterpriseId(Guid EnterpriseId);
        static Windows.Internal.StateRepository.Enterprise TryGetByEnterpriseId(Guid EnterpriseId);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.Enterprise>  Find();
        Enterprise();
        Int64 _EnterpriseID{ get; };
        Int64 _EnterpriseID{ set; };
        UInt64 _Revision{ get; };
        UInt64 _Revision{ set; };
        Guid EnterpriseId{ get; };
        Guid EnterpriseId{ set; };
        Boolean Is_DictionaryNull{ get; };
        void Set_DictionaryToNull();
        void Get_Dictionary(out UInt8[] value);
        void Set_Dictionary(UInt8[] value);
        Windows.Foundation.Collections.IPropertySet Get_DictionaryAsPropertySet();
    }


}
