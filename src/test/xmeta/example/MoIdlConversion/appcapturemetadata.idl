






namespace Windows.Media.Capture
{
    [contractversion(1)]
    apicontract AppCaptureMetadataContract{};

    [contract(Windows.Media.Capture.AppCaptureMetadataContract, 1)]
    enum AppCaptureMetadataPriority
    {
        Informational,
        Important,
    };


    [marshaling_behavior(agile)]
    [dualapipartition(0xa000004)]
    [contract(Windows.Media.Capture.AppCaptureMetadataContract, 1)]
    [interface_name("Windows.Media.Capture.IAppCaptureMetadataWriter", e0ce4877-9aaf-46b4-ad31-6a60b441c780)]
    [threading(both)]
    runtimeclass AppCaptureMetadataWriter
        : Windows.Foundation.IClosable
    {
        AppCaptureMetadataWriter();
        void AddStringEvent(String name, String value, AppCaptureMetadataPriority priority);
        void AddInt32Event(String name, Int32 value, AppCaptureMetadataPriority priority);
        void AddDoubleEvent(String name, Double value, AppCaptureMetadataPriority priority);
        void StartStringState(String name, String value, AppCaptureMetadataPriority priority);
        void StartInt32State(String name, Int32 value, AppCaptureMetadataPriority priority);
        void StartDoubleState(String name, Double value, AppCaptureMetadataPriority priority);
        void StopState(String name);
        void StopAllStates();
        UInt64 RemainingStorageBytesAvailable{ get; };
        event Windows.Foundation.TypedEventHandler <Windows.Media.Capture.AppCaptureMetadataWriter, Object>  MetadataPurged;
    }

}
