







namespace Windows.Devices.Printers
{
    [contractversion(1)]
    apicontract PrintersContract{};


    [marshaling_behavior(agile)]
    [contract(Windows.Devices.Printers.PrintersContract, 1)]
    [static_name("Windows.Devices.Printers.IPrint3DDeviceStatics", fde3620a-67cd-41b7-a344-5150a1fd75b5)]
    [interface_name("Windows.Devices.Printers.IPrint3DDevice", 041c3d19-9713-42a2-9813-7dc3337428d3)]
    [threading(both)]
    runtimeclass Print3DDevice
    {
        static Windows.Foundation.IAsyncOperation <Windows.Devices.Printers.Print3DDevice>  FromIdAsync(String deviceId);
        static String GetDeviceSelector();
        Windows.Devices.Printers.PrintSchema PrintSchema{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Devices.Printers.PrintersContract, 1)]
    [interface_name("Windows.Devices.Printers.IPrintSchema", c2b98316-26b8-4bfb-8138-9f962c22a35b)]
    runtimeclass PrintSchema
    {
        Windows.Foundation.IAsyncOperation <Windows.Storage.Streams.IRandomAccessStreamWithContentType>  GetDefaultPrintTicketAsync();
        Windows.Foundation.IAsyncOperation <Windows.Storage.Streams.IRandomAccessStreamWithContentType>  GetCapabilitiesAsync(Windows.Storage.Streams.IRandomAccessStreamWithContentType constrainTicket);
        Windows.Foundation.IAsyncOperation <Windows.Storage.Streams.IRandomAccessStreamWithContentType>  MergeAndValidateWithDefaultPrintTicketAsync(Windows.Storage.Streams.IRandomAccessStreamWithContentType deltaTicket);
    }


}
