








namespace Windows.UI.Input.Internal.Inking
{
    [contractversion(1)]
    [internal]
    apicontract InternalContract{};

    [contract(Windows.UI.Input.Internal.Inking.InternalContract, 1)]
    enum EraserShape
    {
        Rectangle,
    };


    [contract(Windows.UI.Input.Internal.Inking.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Input.Internal.Inking.IInkEraser", e5076ea2-200d-4c48-b462-fdda5a71398d)]
    runtimeclass InkEraser
    {
        InkEraser();
        Windows.Foundation.Size Size{ get; };
        Windows.Foundation.Size Size{ set; };
        Windows.UI.Input.Internal.Inking.EraserShape EraserShape{ get; };
        Windows.UI.Input.Internal.Inking.EraserShape EraserShape{ set; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.UI.Input.Internal.Inking.InternalContract, 1)]
    [interface_name("Windows.UI.Input.Internal.Inking.IEraseResults", 70e1ca3c-af3b-45d3-a4a3-ca93394e8e2d)]
    runtimeclass EraseResults
    {
        Windows.Foundation.Rect DirtyRect{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.UI.Input.Inking.InkStroke>  SplitStrokes{ get; };
        Boolean EraseOccurred{ get; };
    }


    [contract(Windows.UI.Input.Internal.Inking.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Input.Internal.Inking.IEraseHitTestResults", 100ca14d-f3e9-42d5-b89c-1013ff72d0fd)]
    runtimeclass EraseHitTestResults
    {
        Windows.Foundation.Collections.IVectorView <Windows.UI.Input.Inking.InkStroke>  StrokesHit{ get; };
    }

    [contract(Windows.UI.Input.Internal.Inking.InternalContract, 1)]
    [uuid(0b4280b7-2bb3-4e77-9c94-45bedc3af277)]
    interface IInkStrokeContainerInternal2
    {
        Windows.UI.Input.Internal.Inking.EraseHitTestResults HitTestErase(InkEraser eraser, Windows.Foundation.Collections.IVector <Windows.UI.Input.Inking.InkPoint>  eraserPath);
        void ReplaceStroke(Windows.UI.Input.Inking.InkStroke strokeToReplace, Windows.Foundation.Collections.IVectorView <Windows.UI.Input.Inking.InkStroke>  strokesToReplaceWith);
    };


    [contract(Windows.UI.Input.Internal.Inking.InternalContract, 1)]
    [static_name("Windows.UI.Input.Internal.Inking.IInkStrokeContainerStatics", 0fa49e8b-1eab-4693-a3ab-0abd3e8d0648)]
    runtimeclass InkStrokeContainerStatics
    {
        static Windows.UI.Input.Internal.Inking.EraseHitTestResults HitTestErase(Windows.UI.Input.Inking.InkStrokeContainer strokeContainer, InkEraser eraser, Windows.Foundation.Collections.IVector <Windows.UI.Input.Inking.InkPoint>  eraserPath);
        static void ReplaceStroke(Windows.UI.Input.Inking.InkStrokeContainer strokeContainer, Windows.UI.Input.Inking.InkStroke strokeToReplace, Windows.Foundation.Collections.IVectorView <Windows.UI.Input.Inking.InkStroke>  strokesToReplaceWith);
    }

    [uuid(6cee8f42-759f-4fae-8c50-8ea9297f8127)]
    [contract(Windows.UI.Input.Internal.Inking.InternalContract, 1)]
    interface IInkStrokeInternal
    {
        Windows.UI.Input.Internal.Inking.EraseResults GetPointEraseResults(InkEraser eraser, Windows.Foundation.Collections.IVector <Windows.UI.Input.Inking.InkPoint>  inkPoints, EraseHitTestResults eraseHitTestResults);
    };


    [contract(Windows.UI.Input.Internal.Inking.InternalContract, 1)]
    [static_name("Windows.UI.Input.Internal.Inking.IInkStrokeStatics", b099edeb-5899-43e8-bfd1-6d70de371f57)]
    runtimeclass InkStrokeStatics
    {
        static Windows.UI.Input.Internal.Inking.EraseResults GetPointEraseResults(Windows.UI.Input.Inking.InkStroke stroke, InkEraser eraser, Windows.Foundation.Collections.IVector <Windows.UI.Input.Inking.InkPoint>  inkPoints, EraseHitTestResults eraseHitTestResults);
    }


    [contract(Windows.UI.Input.Internal.Inking.InternalContract, 1)]
    [marshaling_behavior(none)]
    [interface_name("Windows.UI.Input.Internal.Inking.IInkStrokeContainerEventArgs", 39bde294-827d-4494-bddc-19f4c3be2914)]
    runtimeclass InkStrokeContainerEventArgs
    {
        Windows.Foundation.Collections.IVectorView <Windows.UI.Input.Inking.InkStroke>  Strokes{ get; };
    }

    [contract(Windows.UI.Input.Internal.Inking.InternalContract, 1)]
    [uuid(cd76b331-a26d-44b9-b97a-75f9d59ecbb2)]
    interface IInkStrokeContainerInternal
    {
        Windows.Foundation.IAsyncOperationWithProgress <UInt32, UInt32>  SaveIsfAsync(Windows.Storage.Streams.IOutputStream outputStream);
        [return_name("deletedStrokes")] Windows.Foundation.Collections.IVectorView <Windows.UI.Input.Inking.InkStroke>  DeleteWithLine(Windows.Foundation.Point From, Windows.Foundation.Point To, Single lineWidth, out Windows.Foundation.Rect invalidatedRect);
        event Windows.Foundation.TypedEventHandler <Windows.UI.Input.Inking.InkStrokeContainer, Windows.UI.Input.Internal.Inking.InkStrokeContainerEventArgs>  StrokesAppended;
        event Windows.Foundation.TypedEventHandler <Windows.UI.Input.Inking.InkStrokeContainer, Windows.UI.Input.Internal.Inking.InkStrokeContainerEventArgs>  StrokesRemoved;
        event Windows.Foundation.TypedEventHandler <Windows.UI.Input.Inking.InkStrokeContainer, Windows.UI.Input.Internal.Inking.InkStrokeContainerEventArgs>  StrokesModified;
        event Windows.Foundation.TypedEventHandler <Windows.UI.Input.Inking.InkStrokeContainer, Windows.UI.Input.Internal.Inking.InkStrokeContainerEventArgs>  ContentsChanged;
        event Windows.Foundation.TypedEventHandler <Windows.UI.Input.Inking.InkStrokeContainer, Windows.UI.Input.Internal.Inking.InkStrokeContainerEventArgs>  StrokesReplaced;
    };

    [contract(Windows.UI.Input.Internal.Inking.InternalContract, 1)]
    enum InkStorageFormat
    {
        ISF,
        GIF,
        PNG,
    };

    [contract(Windows.UI.Input.Internal.Inking.InternalContract, 1)]
    [uuid(176c7d62-5f2d-4744-bf6a-843cf12cae57)]
    interface IInkStrokeStorageInternal
    {
        Windows.Foundation.IAsyncOperationWithProgress <UInt32, UInt32>  SaveAsync(InkStorageFormat storageFormat, Windows.Storage.Streams.IOutputStream outputStream);
    };

    [contract(Windows.UI.Input.Internal.Inking.InternalContract, 1)]
    enum InputScope
    {
        Default,
        Url,
        FileFullPath,
        FileName,
        EmailUserName,
        EmailSmtpAddress,
        LoginName,
        PersonFullName,
        PersonPrefix,
        PersonGivenName,
        PersonMiddleName,
        PersonSurname,
        PersonSuffix,
        AddressFull,
        AddressPostalCode,
        AddressStreet,
        AddressStateOrProvince,
        AddressCity,
        AddressCountryName,
        AddressCountryShortName,
        CurrencyWithSymbol,
        CurrencyWithoutSymbol,
        DateFull,
        DateMonthNumber,
        DateDayNumber,
        DateYear,
        DateMonthName,
        DateDayName,
        Digits,
        Number,
        SingleCharacter,
        TelephoneFull = 32,
        TelephoneContryCode,
        TelephoneAreaCode,
        TelephoneLocalNumber,
        TimeFull,
        TimeHour,
        TimeMinutesOrSeconds,
        Search = 50,
        SearchIncremental = 52,
        Chat = 58,
        PersonNameOrPhoneNumber,
    };


    [contract(Windows.UI.Input.Internal.Inking.InternalContract, 1)]
    [marshaling_behavior(none)]
    [interface_name("Windows.UI.Input.Internal.Inking.IInputGuide", e821b852-d861-4eea-970b-e629f5821e7d)]
    runtimeclass InputGuide
    {
        Windows.Foundation.Rect WritingRect{ get; };
        Windows.Foundation.Rect WritingRect{ set; };
        Windows.Foundation.Rect DrawingRect{ get; };
        Windows.Foundation.Rect DrawingRect{ set; };
        Int32 RowCount{ get; };
        Int32 RowCount{ set; };
        Int32 ColumnCount{ get; };
        Int32 ColumnCount{ set; };
        Int32 Midline{ get; };
        Int32 Midline{ set; };
    }

    [contract(Windows.UI.Input.Internal.Inking.InternalContract, 1)]
    [uuid(95bc2778-449e-4d25-ba7f-c7e5e4d7ef0e)]
    interface IInkRecognizerContainerInternal
    {
        String Factoid{ get; };
        String Factoid{ set; };
        Windows.UI.Input.Internal.Inking.InputScope InputScope{ get; };
        Windows.UI.Input.Internal.Inking.InputScope InputScope{ set; };
        Windows.UI.Input.Internal.Inking.InputGuide InputGuide{ get; };
        Windows.UI.Input.Internal.Inking.InputGuide InputGuide{ set; };
        String SetDefaultRecognizerBcp47(String bcp47);
        void SetInputAdfixes(String prefix, String suffix);
    };

    [contract(Windows.UI.Input.Internal.Inking.InternalContract, 1)]
    enum InkRecognizerTextSeparator
    {
        Space,
        LinguisticInformation,
    };

    [contract(Windows.UI.Input.Internal.Inking.InternalContract, 1)]
    [uuid(5da29d01-af26-463f-bcf9-7785434fc5cf)]
    interface IInkRecognizerContainerInternal2
    {
        Windows.UI.Input.Internal.Inking.InkRecognizerTextSeparator TextSeparator{ get; };
        Windows.UI.Input.Internal.Inking.InkRecognizerTextSeparator TextSeparator{ set; };
    };

    [contract(Windows.UI.Input.Internal.Inking.InternalContract, 1)]
    [uuid(0c8fd4b0-e38b-47ab-b7d1-1f63536b7c0d)]
    interface IInkPresenterInternal3
    {
        Boolean AllowMultiTouchManipulations{ get; };
        Boolean AllowMultiTouchManipulations{ set; };
    };

}
