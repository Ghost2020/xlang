





namespace Windows.Internal.UI.Shutdown
{
    [contractversion(1)]
    [internal]
    apicontract InternalContract{};

    [flags]
    [contract(Windows.Internal.UI.Shutdown.InternalContract, 1)]
    enum ShutdownChoice
    {
        None,
        LogOff,
        Shutdown,
        Restart = 4,
        RestartDOS = 8,
        Sleep = 16,
        Sleep2 = 32,
        Hibernate = 64,
        Disconnect = 128,
        SwitchUser = 256,
        Lock = 512,
        Eject = 1024,
        Force = 2048,
        InstallUpdates = 4096,
        AccessDenied = 8192,
        Broken = 16384,
        NoWake = 32768,
        Separator = 65536,
        Hybrid = 131072,
        ForceOthers = 262144,
        BootOptions = 524288,
    };

    [contract(Windows.Internal.UI.Shutdown.InternalContract, 1)]
    [flags]
    enum ShutdownOptionModifiers
    {
        None,
        Control,
        Shift,
    };


    [contract(Windows.Internal.UI.Shutdown.InternalContract, 1)]
    [interface_name("Windows.Internal.UI.Shutdown.IShutdownUXOption", df79a42d-7768-4c64-8ce3-b4dadf990918)]
    runtimeclass ShutdownUXOption
    {
        Windows.Internal.UI.Shutdown.ShutdownChoice Kind{ get; };
        String Label{ get; };
        String Tooltip{ get; };
        String Glyph{ get; };
        void Invoke(ShutdownOptionModifiers modifiers);
    }


    [contract(Windows.Internal.UI.Shutdown.InternalContract, 1)]
    [interface_name("Windows.Internal.UI.Shutdown.IShutdownChoicesViewModel", e449cd09-7b95-4075-96b4-e72a473db36c)]
    runtimeclass ShutdownChoicesViewModel
    {
        Windows.Foundation.Collections.IVectorView <Windows.Internal.UI.Shutdown.ShutdownUXOption>  Choices{ get; };
        Boolean IsWarningVisible{ get; };
        String WarningText{ get; };
    }


    [contract(Windows.Internal.UI.Shutdown.InternalContract, 1)]
    [interface_name("Windows.Internal.UI.Shutdown.IShutdownReasonsViewModel", cb187199-41ef-4feb-95db-ae15febcfbe0)]
    runtimeclass ShutdownReasonsViewModel
    {
        Windows.Foundation.Collections.IVectorView <String>  Reasons{ get; };
        UInt32 SelectedReason{ get; };
        UInt32 SelectedReason{ set; };
        String HeaderText{ get; };
        String ContinueLabel{ get; };
        void InvokeContinue();
    }


    [contract(Windows.Internal.UI.Shutdown.InternalContract, 1)]
    [interface_name("Windows.Internal.UI.Shutdown.IShutdownConfirmationViewModel", c3e893b3-af20-4c5a-9f28-75314a8bbbfd)]
    runtimeclass ShutdownConfirmationViewModel
    {
        String Text{ get; };
        String ConfirmLabel{ get; };
        void InvokeConfirm();
    }

    [contract(Windows.Internal.UI.Shutdown.InternalContract, 1)]
    enum ShutdownView
    {
        None,
        Choices,
        Reasons,
        Confirmation,
    };


    [contract(Windows.Internal.UI.Shutdown.InternalContract, 1)]
    [constructor_name("Windows.Internal.UI.Shutdown.IShutdownUXViewModelFactory", 1cc9d633-5180-4f2a-8fee-89e30086b023)]
    [interface_name("Windows.Internal.UI.Shutdown.IShutdownUXViewModel", 3d0980d5-1d41-46a3-a0d5-637f10c6e301)]
    runtimeclass ShutdownUXViewModel
    {
        [method_name( "CreateShutdownUXViewModel" )] ShutdownUXViewModel(ShutdownCallingContext callingContext);
        Windows.Internal.UI.Shutdown.ShutdownView ActiveView{ get; };
        event Windows.Foundation.TypedEventHandler <Windows.Internal.UI.Shutdown.ShutdownUXViewModel, Windows.Internal.UI.Shutdown.ShutdownView>  ActiveViewChanged;
        Windows.Internal.UI.Shutdown.ShutdownChoicesViewModel Choices{ get; };
        Windows.Internal.UI.Shutdown.ShutdownReasonsViewModel Reasons{ get; };
        Windows.Internal.UI.Shutdown.ShutdownConfirmationViewModel Confirmation{ get; };

        [interface_name("Windows.Internal.UI.Shutdown.ILogonUIPowerTransitionHandlerRegistration", f8f5b9e7-b85c-4dbd-90b7-c006a6a37e4a)]
        {
            event Windows.Foundation.TypedEventHandler <Windows.Internal.UI.Shutdown.ShutdownUXViewModel, Windows.Internal.UI.Shutdown.ShutdownChoice>  OnPowerTransitionDetected;
        }
    }


    [contract(Windows.Internal.UI.Shutdown.InternalContract, 1)]
    enum ShutdownCallingContext
    {
        SignIn,
        SecurityOptions,
        Start,
    };


}
