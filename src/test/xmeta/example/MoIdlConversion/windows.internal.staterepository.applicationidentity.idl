








namespace Windows.Internal.StateRepository
{
    [contract(Windows.Internal.StateRepository.StateRepositoryContract, 1)]
    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [static_name("Windows.Internal.StateRepository.IApplicationIdentityStatics", 7032c381-a698-45c8-a1e6-b7eef8098687)]
    [interface_name("Windows.Internal.StateRepository.IApplicationIdentity", bf17f8ce-8526-4b3e-a7e1-dc36309f7ae2)]
    [threading(both)]
    runtimeclass ApplicationIdentity
    {
        ApplicationIdentity();
        static Boolean Exists(Int64 applicationIdentityID);
        static Boolean ExistsByApplicationUserModelId(String ApplicationUserModelId);
        static Windows.Internal.StateRepository.ApplicationIdentity TryGet(Int64 applicationIdentityID);
        static Windows.Internal.StateRepository.ApplicationIdentity TryGetByApplicationUserModelId(String ApplicationUserModelId);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.ApplicationIdentity>  Find();
        Int64 _ApplicationIdentityID{ get; };
        Int64 _ApplicationIdentityID{ set; };
        UInt64 _Revision{ get; };
        UInt64 _Revision{ set; };
        String ApplicationUserModelId{ get; };
        String ApplicationUserModelId{ set; };
        Boolean Is_DictionaryNull{ get; };
        void Set_DictionaryToNull();
        void Get_Dictionary(out UInt8[] value);
        void Set_Dictionary(UInt8[] value);
        Windows.Foundation.Collections.IPropertySet Get_DictionaryAsPropertySet();
    }


}
