









namespace Windows.Media.Import
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum PhotoImportStage
    {
        NotStarted,
        FindingItems,
        ImportingItems,
        DeletingImportedItemsFromSource,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum PhotoImportAccessMode
    {
        ReadWrite,
        ReadOnly,
        ReadAndDelete,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum PhotoImportImportMode
    {
        ImportEverything,
        IgnoreSidecars,
        IgnoreSiblings,
        IgnoreSidecarsAndSiblings,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum PhotoImportSourceType
    {
        Generic,
        Camera,
        MediaPlayer,
        Phone,
        Video,
        PersonalInfoManager,
        AudioRecorder,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum PhotoImportContentType
    {
        Unknown,
        Image,
        Video,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum PhotoImportPowerSource
    {
        Unknown,
        Battery,
        External,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum PhotoImportStorageMediumType
    {
        Undefined,
        Fixed,
        Removable,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum PhotoImportContentTypeFilter
    {
        OnlyImages,
        OnlyVideos,
        ImagesAndVideos,
        [contract(Windows.Foundation.UniversalApiContract, 7)]
        ImagesAndVideosFromCameraRoll,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum PhotoImportItemSelectionMode
    {
        SelectAll,
        SelectNone,
        SelectNew,
    };

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    enum PhotoImportSubfolderDateFormat
    {
        Year,
        YearMonth,
        YearMonthDay,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum PhotoImportConnectionTransport
    {
        Unknown,
        Usb,
        IP,
        Bluetooth,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum PhotoImportSubfolderCreationMode
    {
        DoNotCreateSubfolders,
        CreateSubfoldersFromFileDate,
        CreateSubfoldersFromExifDate,
        KeepOriginalFolderStructure,
    };


    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.Media.Import.IPhotoImportSourceStatics", 0528e586-32d8-467c-8cee-23a1b2f43e85)]
    [interface_name("Windows.Media.Import.IPhotoImportSource", 1f8ea35e-145b-4cd6-87f1-54965a982fef)]
    runtimeclass PhotoImportSource
    {
        static Windows.Foundation.IAsyncOperation <Windows.Media.Import.PhotoImportSource>  FromIdAsync(String sourceId);
        static Windows.Foundation.IAsyncOperation <Windows.Media.Import.PhotoImportSource>  FromFolderAsync(Windows.Storage.IStorageFolder sourceRootFolder);
        String Id{ get; };
        String DisplayName{ get; };
        String Description{ get; };
        String Manufacturer{ get; };
        String Model{ get; };
        String SerialNumber{ get; };
        String ConnectionProtocol{ get; };
        Windows.Media.Import.PhotoImportConnectionTransport ConnectionTransport{ get; };
        Windows.Media.Import.PhotoImportSourceType Type{ get; };
        Windows.Media.Import.PhotoImportPowerSource PowerSource{ get; };
        Windows.Foundation.IReference <UInt32>  BatteryLevelPercent{ get; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  DateTime{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Media.Import.PhotoImportStorageMedium>  StorageMedia{ get; };
        Windows.Foundation.IReference <Boolean>  IsLocked{ get; };
        Boolean IsMassStorage{ get; };
        Windows.Storage.Streams.IRandomAccessStreamReference Thumbnail{ get; };
        Windows.Media.Import.PhotoImportSession CreateImportSession();
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [interface_name("Windows.Media.Import.IPhotoImportOperation", d9f797e4-a09a-4ee4-a4b1-20940277a5be)]
    runtimeclass PhotoImportOperation
    {
        Windows.Media.Import.PhotoImportStage Stage{ get; };
        Windows.Media.Import.PhotoImportSession Session{ get; };
        Windows.Foundation.IAsyncOperationWithProgress <Windows.Media.Import.PhotoImportFindItemsResult, UInt32>  ContinueFindingItemsAsync{ get; };
        Windows.Foundation.IAsyncOperationWithProgress <Windows.Media.Import.PhotoImportImportItemsResult, Windows.Media.Import.PhotoImportProgress>  ContinueImportingItemsAsync{ get; };
        Windows.Foundation.IAsyncOperationWithProgress <Windows.Media.Import.PhotoImportDeleteImportedItemsFromSourceResult, Double>  ContinueDeletingImportedItemsFromSourceAsync{ get; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [static_name("Windows.Media.Import.IPhotoImportManagerStatics", 2771903d-a046-4f06-9b9c-bfd662e83287)]
    [threading(both)]
    runtimeclass PhotoImportManager
    {
        static Windows.Foundation.IAsyncOperation <Boolean>  IsSupportedAsync();
        static Windows.Foundation.IAsyncOperation <Windows.Foundation.Collections.IVectorView <Windows.Media.Import.PhotoImportSource> >  FindAllSourcesAsync();
        static Windows.Foundation.Collections.IVectorView <Windows.Media.Import.PhotoImportOperation>  GetPendingOperations();
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    struct PhotoImportProgress
    {
        UInt32 ItemsImported;
        UInt32 TotalItemsToImport;
        UInt64 BytesImported;
        UInt64 TotalBytesToImport;
        Double ImportProgress;
    };


    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Media.Import.IPhotoImportSession", aa63916e-ecdb-4efe-94c6-5f5cafe34cfb)]
    runtimeclass PhotoImportSession
        : Windows.Foundation.IClosable
    {
        Windows.Media.Import.PhotoImportSource Source{ get; };
        Guid SessionId{ get; };
        Windows.Storage.IStorageFolder DestinationFolder{ set; };
        Windows.Storage.IStorageFolder DestinationFolder{ get; };
        Boolean AppendSessionDateToDestinationFolder{ set; };
        Boolean AppendSessionDateToDestinationFolder{ get; };
        Windows.Media.Import.PhotoImportSubfolderCreationMode SubfolderCreationMode{ set; };
        Windows.Media.Import.PhotoImportSubfolderCreationMode SubfolderCreationMode{ get; };
        String DestinationFileNamePrefix{ set; };
        String DestinationFileNamePrefix{ get; };
        Windows.Foundation.IAsyncOperationWithProgress <Windows.Media.Import.PhotoImportFindItemsResult, UInt32>  FindItemsAsync(PhotoImportContentTypeFilter contentTypeFilter, PhotoImportItemSelectionMode itemSelectionMode);

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [interface_name("Windows.Media.Import.IPhotoImportSession2", 2a526710-3ec6-469d-a375-2b9f4785391e)]
        {
            Windows.Media.Import.PhotoImportSubfolderDateFormat SubfolderDateFormat{ set; };
            Windows.Media.Import.PhotoImportSubfolderDateFormat SubfolderDateFormat{ get; };
            Boolean RememberDeselectedItems{ set; };
            Boolean RememberDeselectedItems{ get; };
        }
    }

    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Media.Import.IPhotoImportFindItemsResult", 3915e647-6c78-492b-844e-8fe5e8f6bfb9)]
    runtimeclass PhotoImportFindItemsResult
    {
        Windows.Media.Import.PhotoImportSession Session{ get; };
        Boolean HasSucceeded{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Media.Import.PhotoImportItem>  FoundItems{ get; };
        UInt32 PhotosCount{ get; };
        UInt64 PhotosSizeInBytes{ get; };
        UInt32 VideosCount{ get; };
        UInt64 VideosSizeInBytes{ get; };
        UInt32 SidecarsCount{ get; };
        UInt64 SidecarsSizeInBytes{ get; };
        UInt32 SiblingsCount{ get; };
        UInt64 SiblingsSizeInBytes{ get; };
        UInt32 TotalCount{ get; };
        UInt64 TotalSizeInBytes{ get; };
        void SelectAll();
        void SelectNone();
        Windows.Foundation.IAsyncAction SelectNewAsync();
        void SetImportMode(PhotoImportImportMode value);
        Windows.Media.Import.PhotoImportImportMode ImportMode{ get; };
        UInt32 SelectedPhotosCount{ get; };
        UInt64 SelectedPhotosSizeInBytes{ get; };
        UInt32 SelectedVideosCount{ get; };
        UInt64 SelectedVideosSizeInBytes{ get; };
        UInt32 SelectedSidecarsCount{ get; };
        UInt64 SelectedSidecarsSizeInBytes{ get; };
        UInt32 SelectedSiblingsCount{ get; };
        UInt64 SelectedSiblingsSizeInBytes{ get; };
        UInt32 SelectedTotalCount{ get; };
        UInt64 SelectedTotalSizeInBytes{ get; };
        event Windows.Foundation.TypedEventHandler <Windows.Media.Import.PhotoImportFindItemsResult, Windows.Media.Import.PhotoImportSelectionChangedEventArgs>  SelectionChanged;
        Windows.Foundation.IAsyncOperationWithProgress <Windows.Media.Import.PhotoImportImportItemsResult, Windows.Media.Import.PhotoImportProgress>  ImportItemsAsync();
        event Windows.Foundation.TypedEventHandler <Windows.Media.Import.PhotoImportFindItemsResult, Windows.Media.Import.PhotoImportItemImportedEventArgs>  ItemImported;

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [interface_name("Windows.Media.Import.IPhotoImportFindItemsResult2", fbdd6a3b-ecf9-406a-815e-5015625b0a88)]
        {
            void AddItemsInDateRangeToSelection(Windows.Foundation.DateTime rangeStart, Windows.Foundation.TimeSpan rangeLength);
        }
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Media.Import.IPhotoImportImportItemsResult", e4d4f478-d419-4443-a84e-f06a850c0b00)]
    runtimeclass PhotoImportImportItemsResult
    {
        Windows.Media.Import.PhotoImportSession Session{ get; };
        Boolean HasSucceeded{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Media.Import.PhotoImportItem>  ImportedItems{ get; };
        UInt32 PhotosCount{ get; };
        UInt64 PhotosSizeInBytes{ get; };
        UInt32 VideosCount{ get; };
        UInt64 VideosSizeInBytes{ get; };
        UInt32 SidecarsCount{ get; };
        UInt64 SidecarsSizeInBytes{ get; };
        UInt32 SiblingsCount{ get; };
        UInt64 SiblingsSizeInBytes{ get; };
        UInt32 TotalCount{ get; };
        UInt64 TotalSizeInBytes{ get; };
        Windows.Foundation.IAsyncOperationWithProgress <Windows.Media.Import.PhotoImportDeleteImportedItemsFromSourceResult, Double>  DeleteImportedItemsFromSourceAsync();
    }

    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Media.Import.IPhotoImportDeleteImportedItemsFromSourceResult", f4e112f8-843d-428a-a1a6-81510292b0ae)]
    runtimeclass PhotoImportDeleteImportedItemsFromSourceResult
    {
        Windows.Media.Import.PhotoImportSession Session{ get; };
        Boolean HasSucceeded{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Media.Import.PhotoImportItem>  DeletedItems{ get; };
        UInt32 PhotosCount{ get; };
        UInt64 PhotosSizeInBytes{ get; };
        UInt32 VideosCount{ get; };
        UInt64 VideosSizeInBytes{ get; };
        UInt32 SidecarsCount{ get; };
        UInt64 SidecarsSizeInBytes{ get; };
        UInt32 SiblingsCount{ get; };
        UInt64 SiblingsSizeInBytes{ get; };
        UInt32 TotalCount{ get; };
        UInt64 TotalSizeInBytes{ get; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Media.Import.IPhotoImportStorageMedium", f2b9b093-fc85-487f-87c2-58d675d05b07)]
    runtimeclass PhotoImportStorageMedium
    {
        String Name{ get; };
        String Description{ get; };
        String SerialNumber{ get; };
        Windows.Media.Import.PhotoImportStorageMediumType StorageMediumType{ get; };
        Windows.Media.Import.PhotoImportAccessMode SupportedAccessMode{ get; };
        UInt64 CapacityInBytes{ get; };
        UInt64 AvailableSpaceInBytes{ get; };
        void Refresh();
    }






    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Media.Import.IPhotoImportSidecar", 46d7d757-f802-44c7-9c98-7a71f4bc1486)]
    runtimeclass PhotoImportSidecar
    {
        String Name{ get; };
        UInt64 SizeInBytes{ get; };
        Windows.Foundation.DateTime Date{ get; };
    }

    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Media.Import.IPhotoImportVideoSegment", 623c0289-321a-41d8-9166-8c62a333276c)]
    runtimeclass PhotoImportVideoSegment
    {
        String Name{ get; };
        UInt64 SizeInBytes{ get; };
        Windows.Foundation.DateTime Date{ get; };
        Windows.Media.Import.PhotoImportSidecar Sibling{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Media.Import.PhotoImportSidecar>  Sidecars{ get; };
    }


    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Media.Import.IPhotoImportItem", a9d07e76-9bfc-43b8-b356-633b6a988c9e)]
    runtimeclass PhotoImportItem
    {
        String Name{ get; };
        UInt64 ItemKey{ get; };
        Windows.Media.Import.PhotoImportContentType ContentType{ get; };
        UInt64 SizeInBytes{ get; };
        Windows.Foundation.DateTime Date{ get; };
        Windows.Media.Import.PhotoImportSidecar Sibling{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Media.Import.PhotoImportSidecar>  Sidecars{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Media.Import.PhotoImportVideoSegment>  VideoSegments{ get; };
        Boolean IsSelected{ get; };
        Boolean IsSelected{ set; };
        Windows.Storage.Streams.IRandomAccessStreamReference Thumbnail{ get; };
        Windows.Foundation.Collections.IVectorView <String>  ImportedFileNames{ get; };
        Windows.Foundation.Collections.IVectorView <String>  DeletedFileNames{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [interface_name("Windows.Media.Import.IPhotoImportItem2", f1053505-f53b-46a3-9e30-3610791a9110)]
        {
            String Path{ get; };
        }
    }


    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Media.Import.IPhotoImportSelectionChangedEventArgs", 10461782-fa9d-4c30-8bc9-4d64911572d5)]
    runtimeclass PhotoImportSelectionChangedEventArgs
    {
        Boolean IsSelectionEmpty{ get; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Media.Import.IPhotoImportItemImportedEventArgs", 42cb2fdd-7d68-47b5-bc7c-ceb73e0c77dc)]
    runtimeclass PhotoImportItemImportedEventArgs
    {
        Windows.Media.Import.PhotoImportItem ImportedItem{ get; };
    }








}
