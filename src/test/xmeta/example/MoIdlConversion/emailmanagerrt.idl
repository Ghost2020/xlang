












namespace Windows.ApplicationModel.Email
{
    [contract(Windows.Foundation.UniversalApiContract, 2)]
    enum EmailCertificateValidationStatus
    {
        Success,
        NoMatch,
        InvalidUsage,
        InvalidCertificate,
        Revoked,
        ChainRevoked,
        RevocationServerFailure,
        Expired,
        Untrusted,
        ServerError,
        UnknownFailure,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailStoreAccessType
    {
        AppMailboxesReadWrite,
        AllMailboxesLimitedReadWrite,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailMessageBodyKind
    {
        Html,
        PlainText,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailAttachmentDownloadState
    {
        NotDownloaded,
        Downloading,
        Downloaded,
        Failed,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailMessageDownloadState
    {
        PartiallyDownloaded,
        Downloading,
        Downloaded,
        Failed,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailSpecialFolderKind
    {
        None,
        Root,
        Inbox,
        Outbox,
        Drafts,
        DeletedItems,
        Sent,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailQueryKind
    {
        All,
        Important,
        Flagged,
        Unread,
        Read,
        Unseen,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailMailboxChangeType
    {
        MessageCreated,
        MessageModified,
        MessageDeleted,
        FolderCreated,
        FolderModified,
        FolderDeleted,
        ChangeTrackingLost,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailQuerySortDirection
    {
        Descending,
        Ascending,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailQuerySortProperty
    {
        Date,
    };

    [flags]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailQuerySearchFields
    {
        None,
        Subject,
        Sender,
        Preview = 4,
        Recipients = 8,
        All = -1,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailBatchStatus
    {
        Success,
        ServerSearchSyncManagerError,
        ServerSearchUnknownError,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailMessageResponseKind
    {
        None,
        Reply,
        ReplyAll,
        Forward,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailMeetingResponseType
    {
        Accept,
        Decline,
        Tentative,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailMailboxActionKind
    {
        MarkMessageAsSeen,
        MarkMessageRead,
        ChangeMessageFlagState,
        MoveMessage,
        SaveDraft,
        SendMessage,
        CreateResponseReplyMessage,
        CreateResponseReplyAllMessage,
        CreateResponseForwardMessage,
        MoveFolder,
        MarkFolderForSyncEnabled,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailImportance
    {
        Normal,
        High,
        Low,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailFlagState
    {
        Unflagged,
        Flagged,
        Completed,
        Cleared,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailMailboxSyncStatus
    {
        Idle,
        Syncing,
        UpToDate,
        AuthenticationError,
        PolicyError,
        UnknownError,
        [contract(Windows.Foundation.UniversalApiContract, 2)]
        ManualAccountRemovalRequired,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailMailboxOtherAppReadAccess
    {
        SystemOnly,
        Full,
        [contract(Windows.Foundation.UniversalApiContract, 3)]
        None,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailMailboxOtherAppWriteAccess
    {
        None,
        Limited,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailMailboxAllowedSmimeEncryptionAlgorithmNegotiation
    {
        None,
        StrongAlgorithm,
        AnyAlgorithm,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailMailboxSmimeEncryptionAlgorithm
    {
        Any,
        TripleDes,
        Des,
        RC2128Bit,
        RC264Bit,
        RC240Bit,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailMailboxSmimeSigningAlgorithm
    {
        Any,
        Sha1,
        MD5,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailMailboxAutoReplyMessageResponseKind
    {
        Html,
        PlainText,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EmailQuerySearchScope
    {
        Local,
        Server,
    };

    [contract(Windows.Foundation.UniversalApiContract, 2)]
    enum EmailRecipientResolutionStatus
    {
        Success,
        RecipientNotFound,
        AmbiguousRecipient,
        NoCertificate,
        CertificateRequestLimitReached,
        CannotResolveDistributionList,
        ServerError,
        UnknownFailure,
    };

    [contract(Windows.Foundation.UniversalApiContract, 2)]
    enum EmailMessageSmimeKind
    {
        None,
        ClearSigned,
        OpaqueSigned,
        Encrypted,
    };

    [contract(Windows.Foundation.UniversalApiContract, 2)]
    enum EmailMailboxEmptyFolderStatus
    {
        Success,
        NetworkError,
        PermissionsError,
        ServerError,
        UnknownFailure,
        CouldNotDeleteEverything,
    };

    [contract(Windows.Foundation.UniversalApiContract, 2)]
    enum EmailMailboxCreateFolderStatus
    {
        Success,
        NetworkError,
        PermissionsError,
        ServerError,
        UnknownFailure,
        NameCollision,
        ServerRejected,
    };

    [contract(Windows.Foundation.UniversalApiContract, 2)]
    enum EmailMailboxDeleteFolderStatus
    {
        Success,
        NetworkError,
        PermissionsError,
        ServerError,
        UnknownFailure,
        CouldNotDeleteEverything,
    };


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Email.IEmailMessage", 6c6d948d-80b5-48f8-b0b1-e04e430f44e5)]
    [threading(both)]
    runtimeclass EmailMessage
    {
        EmailMessage();
        String Subject{ get; };
        String Subject{ set; };
        String Body{ get; };
        String Body{ set; };
        Windows.Foundation.Collections.IVector <Windows.ApplicationModel.Email.EmailRecipient>  To{ get; };
        Windows.Foundation.Collections.IVector <Windows.ApplicationModel.Email.EmailRecipient>  CC{ get; };
        Windows.Foundation.Collections.IVector <Windows.ApplicationModel.Email.EmailRecipient>  Bcc{ get; };
        Windows.Foundation.Collections.IVector <Windows.ApplicationModel.Email.EmailAttachment>  Attachments{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.ApplicationModel.Email.IEmailMessage2", fdc8248b-9f1a-44db-bd3c-65c384770f86)]
        {
            String Id{ get; };
            String RemoteId{ get; };
            String RemoteId{ set; };
            String MailboxId{ get; };
            String ConversationId{ get; };
            String FolderId{ get; };
            Boolean AllowInternetImages{ get; };
            Boolean AllowInternetImages{ set; };
            UInt64 ChangeNumber{ get; };
            Windows.ApplicationModel.Email.EmailMessageDownloadState DownloadState{ get; };
            Windows.ApplicationModel.Email.EmailMessageDownloadState DownloadState{ set; };
            UInt32 EstimatedDownloadSizeInBytes{ get; };
            UInt32 EstimatedDownloadSizeInBytes{ set; };
            Windows.ApplicationModel.Email.EmailFlagState FlagState{ get; };
            Windows.ApplicationModel.Email.EmailFlagState FlagState{ set; };
            Boolean HasPartialBodies{ get; };
            Windows.ApplicationModel.Email.EmailImportance Importance{ get; };
            Windows.ApplicationModel.Email.EmailImportance Importance{ set; };
            String InResponseToMessageId{ get; };
            Windows.ApplicationModel.Email.EmailIrmInfo IrmInfo{ get; };
            Windows.ApplicationModel.Email.EmailIrmInfo IrmInfo{ set; };
            Boolean IsDraftMessage{ get; };
            Boolean IsRead{ get; };
            Boolean IsRead{ set; };
            Boolean IsSeen{ get; };
            Boolean IsSeen{ set; };
            Boolean IsServerSearchMessage{ get; };
            Boolean IsSmartSendable{ get; };
            String MessageClass{ get; };
            String MessageClass{ set; };
            String NormalizedSubject{ get; };
            Int32 OriginalCodePage{ get; };
            Int32 OriginalCodePage{ set; };
            String Preview{ get; };
            String Preview{ set; };
            Windows.ApplicationModel.Email.EmailMessageResponseKind LastResponseKind{ get; };
            Windows.ApplicationModel.Email.EmailMessageResponseKind LastResponseKind{ set; };
            Windows.ApplicationModel.Email.EmailRecipient Sender{ get; };
            Windows.ApplicationModel.Email.EmailRecipient Sender{ set; };
            Windows.Foundation.IReference <Windows.Foundation.DateTime>  SentTime{ get; };
            Windows.Foundation.IReference <Windows.Foundation.DateTime>  SentTime{ set; };
            Windows.ApplicationModel.Email.EmailMeetingInfo MeetingInfo{ get; };
            Windows.ApplicationModel.Email.EmailMeetingInfo MeetingInfo{ set; };
            Windows.Storage.Streams.IRandomAccessStreamReference GetBodyStream(EmailMessageBodyKind type);
            void SetBodyStream(EmailMessageBodyKind type, Windows.Storage.Streams.IRandomAccessStreamReference stream);
        }

        [contract(Windows.Foundation.UniversalApiContract, 2)]
        [interface_name("Windows.ApplicationModel.Email.IEmailMessage3", a1ea675c-e598-4d29-a018-fc7b7eece0a1)]
        {
            Windows.Storage.Streams.IRandomAccessStreamReference SmimeData{ get; };
            Windows.Storage.Streams.IRandomAccessStreamReference SmimeData{ set; };
            Windows.ApplicationModel.Email.EmailMessageSmimeKind SmimeKind{ get; };
            Windows.ApplicationModel.Email.EmailMessageSmimeKind SmimeKind{ set; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [interface_name("Windows.ApplicationModel.Email.IEmailMessage4", 317cf181-3e7f-4a05-8394-3e10336dd435)]
        {
            Windows.Foundation.Collections.IVector <Windows.ApplicationModel.Email.EmailRecipient>  ReplyTo{ get; };
            Windows.ApplicationModel.Email.EmailRecipient SentRepresenting{ get; };
            Windows.ApplicationModel.Email.EmailRecipient SentRepresenting{ set; };
        }
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.IEmailStore", f803226e-9137-4f8b-a470-279ac3058eb6)]
    runtimeclass EmailStore
    {
        Windows.Foundation.IAsyncOperation <Windows.Foundation.Collections.IVectorView <Windows.ApplicationModel.Email.EmailMailbox> >  FindMailboxesAsync();
        [method_name("GetConversationReader")] Windows.ApplicationModel.Email.EmailConversationReader GetConversationReader();
        [method_name("GetConversationReaderWithOptions")] Windows.ApplicationModel.Email.EmailConversationReader GetConversationReader(EmailQueryOptions options);
        [method_name("GetMessageReader")] Windows.ApplicationModel.Email.EmailMessageReader GetMessageReader();
        [method_name("GetMessageReaderWithOptions")] Windows.ApplicationModel.Email.EmailMessageReader GetMessageReader(EmailQueryOptions options);
        Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailMailbox>  GetMailboxAsync(String id);
        Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailConversation>  GetConversationAsync(String id);
        Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailFolder>  GetFolderAsync(String id);
        Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailMessage>  GetMessageAsync(String id);
        [method_name("CreateMailboxAsync")] Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailMailbox>  CreateMailboxAsync(String accountName, String accountAddress);
        [method_name("CreateMailboxInAccountAsync")] Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailMailbox>  CreateMailboxAsync(String accountName, String accountAddress, String userDataAccountId);
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.IEmailManagerForUser", f773de9f-3ca5-4b0f-90c1-156e40174ce5)]
    runtimeclass EmailManagerForUser
    {
        Windows.Foundation.IAsyncAction ShowComposeNewEmailAsync(EmailMessage message);
        Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailStore>  RequestStoreAsync(EmailStoreAccessType accessType);
        Windows.System.User User{ get; };
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.IEmailMailbox", a8790649-cf5b-411b-80b1-4a6a1484ce25)]
    runtimeclass EmailMailbox
    {
        Windows.ApplicationModel.Email.EmailMailboxCapabilities Capabilities{ get; };
        Windows.ApplicationModel.Email.EmailMailboxChangeTracker ChangeTracker{ get; };
        String DisplayName{ get; };
        String DisplayName{ set; };
        String Id{ get; };
        Boolean IsOwnedByCurrentApp{ get; };
        Boolean IsDataEncryptedUnderLock{ get; };
        String MailAddress{ get; };
        String MailAddress{ set; };
        Windows.Foundation.Collections.IVector <String>  MailAddressAliases{ get; };
        Windows.ApplicationModel.Email.EmailMailboxOtherAppReadAccess OtherAppReadAccess{ get; };
        Windows.ApplicationModel.Email.EmailMailboxOtherAppReadAccess OtherAppReadAccess{ set; };
        Windows.ApplicationModel.Email.EmailMailboxOtherAppWriteAccess OtherAppWriteAccess{ get; };
        Windows.ApplicationModel.Email.EmailMailboxOtherAppWriteAccess OtherAppWriteAccess{ set; };
        Windows.ApplicationModel.Email.EmailMailboxPolicies Policies{ get; };
        String SourceDisplayName{ get; };
        Windows.ApplicationModel.Email.EmailMailboxSyncManager SyncManager{ get; };
        String UserDataAccountId{ get; };
        [method_name("GetConversationReader")] Windows.ApplicationModel.Email.EmailConversationReader GetConversationReader();
        [method_name("GetConversationReaderWithOptions")] Windows.ApplicationModel.Email.EmailConversationReader GetConversationReader(EmailQueryOptions options);
        [method_name("GetMessageReader")] Windows.ApplicationModel.Email.EmailMessageReader GetMessageReader();
        [method_name("GetMessageReaderWithOptions")] Windows.ApplicationModel.Email.EmailMessageReader GetMessageReader(EmailQueryOptions options);
        Windows.Foundation.IAsyncAction DeleteAsync();
        Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailConversation>  GetConversationAsync(String id);
        Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailFolder>  GetFolderAsync(String id);
        Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailMessage>  GetMessageAsync(String id);
        Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailFolder>  GetSpecialFolderAsync(EmailSpecialFolderKind folderType);
        Windows.Foundation.IAsyncAction SaveAsync();
        Windows.Foundation.IAsyncAction MarkMessageAsSeenAsync(String messageId);
        Windows.Foundation.IAsyncAction MarkFolderAsSeenAsync(String folderId);
        Windows.Foundation.IAsyncAction MarkMessageReadAsync(String messageId, Boolean isRead);
        Windows.Foundation.IAsyncAction ChangeMessageFlagStateAsync(String messageId, EmailFlagState flagState);
        Windows.Foundation.IAsyncOperation <Boolean>  TryMoveMessageAsync(String messageId, String newParentFolderId);
        [method_name("TryMoveFolderAsync")] Windows.Foundation.IAsyncOperation <Boolean>  TryMoveFolderAsync(String folderId, String newParentFolderId);
        [method_name("TryMoveFolderWithNewNameAsync")] Windows.Foundation.IAsyncOperation <Boolean>  TryMoveFolderAsync(String folderId, String newParentFolderId, String newFolderName);
        Windows.Foundation.IAsyncAction DeleteMessageAsync(String messageId);
        Windows.Foundation.IAsyncAction MarkFolderSyncEnabledAsync(String folderId, Boolean isSyncEnabled);
        [method_name("SendMessageAsync")] [remote_sync]Windows.Foundation.IAsyncAction SendMessageAsync(EmailMessage message);
        [remote_sync]Windows.Foundation.IAsyncAction SaveDraftAsync(EmailMessage message);
        Windows.Foundation.IAsyncAction DownloadMessageAsync(String messageId);
        Windows.Foundation.IAsyncAction DownloadAttachmentAsync(String attachmentId);
        Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailMessage>  CreateResponseMessageAsync(String messageId, EmailMessageResponseKind responseType, String subject, EmailMessageBodyKind responseHeaderType, String responseHeader);
        [remote_sync]Windows.Foundation.IAsyncOperation <Boolean>  TryUpdateMeetingResponseAsync(EmailMessage meeting, EmailMeetingResponseType response, String subject, String comment, Boolean sendUpdate);
        [remote_sync]Windows.Foundation.IAsyncOperation <Boolean>  TryForwardMeetingAsync(EmailMessage meeting, Windows.Foundation.Collections.IIterable <Windows.ApplicationModel.Email.EmailRecipient>  recipients, String subject, EmailMessageBodyKind forwardHeaderType, String forwardHeader, String comment);
        [remote_sync]Windows.Foundation.IAsyncOperation <Boolean>  TryProposeNewTimeForMeetingAsync(EmailMessage meeting, Windows.Foundation.DateTime newStartTime, Windows.Foundation.TimeSpan newDuration, String subject, String comment);
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Email.EmailMailbox, Windows.ApplicationModel.Email.EmailMailboxChangedEventArgs>  MailboxChanged;
        [method_name("SmartSendMessageAsync")] [remote_sync]Windows.Foundation.IAsyncAction SendMessageAsync(EmailMessage message, Boolean smartSend);
        [remote_sync]Windows.Foundation.IAsyncOperation <Boolean>  TrySetAutoReplySettingsAsync(EmailMailboxAutoReplySettings autoReplySettings);
        Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings>  TryGetAutoReplySettingsAsync(EmailMailboxAutoReplyMessageResponseKind requestedFormat);

        [interface_name("Windows.ApplicationModel.Email.IEmailMailbox2", 14f8e404-6ca2-4ab2-9241-79cd7bf46346)]
        {
            String LinkedMailboxId{ get; };
            String NetworkAccountId{ get; };
            String NetworkId{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 2)]
        [interface_name("Windows.ApplicationModel.Email.IEmailMailbox3", 3da5897b-458b-408a-8e37-ac8b05d8af56)]
        {
            Windows.Foundation.IAsyncOperation <Windows.Foundation.Collections.IVectorView <Windows.ApplicationModel.Email.EmailRecipientResolutionResult> >  ResolveRecipientsAsync(Windows.Foundation.Collections.IIterable <String>  recipients);
            Windows.Foundation.IAsyncOperation <Windows.Foundation.Collections.IVectorView <Windows.ApplicationModel.Email.EmailCertificateValidationStatus> >  ValidateCertificatesAsync(Windows.Foundation.Collections.IIterable <Windows.Security.Cryptography.Certificates.Certificate>  certificates);
            Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailMailboxEmptyFolderStatus>  TryEmptyFolderAsync(String folderId);
            Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailMailboxCreateFolderResult>  TryCreateFolderAsync(String parentFolderId, String name);
            Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailMailboxDeleteFolderStatus>  TryDeleteFolderAsync(String folderId);
        }

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [interface_name("Windows.ApplicationModel.Email.IEmailMailbox4", 5d1f301b-f222-48a7-b7b6-716356cd26a1)]
        {
            Windows.Foundation.IAsyncAction RegisterSyncManagerAsync();
        }

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [interface_name("Windows.ApplicationModel.Email.IEmailMailbox5", 39967087-0092-49be-bd0e-5d4dc9d96d90)]
        {
            Windows.ApplicationModel.Email.EmailMailboxChangeTracker GetChangeTracker(String identity);
        }
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.IEmailConversationReader", b4630f82-2875-44c8-9b8c-85beb3a3c653)]
    runtimeclass EmailConversationReader
    {
        Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailConversationBatch>  ReadBatchAsync();
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.ApplicationModel.Email.IEmailQueryOptionsFactory", 88f1a1b8-78ab-4ee8-b4e3-046d6e2fe5e2)]
    [interface_name("Windows.ApplicationModel.Email.IEmailQueryOptions", 45504b9b-3e7f-4d52-b6dd-d6fd4e1fbd9a)]
    [threading(both)]
    runtimeclass EmailQueryOptions
    {
        [method_name( "CreateWithText" )] EmailQueryOptions(String text);
        [method_name( "CreateWithTextAndFields" )] EmailQueryOptions(String text, EmailQuerySearchFields fields);
        EmailQueryOptions();
        Windows.ApplicationModel.Email.EmailQueryTextSearch TextSearch{ get; };
        Windows.ApplicationModel.Email.EmailQuerySortDirection SortDirection{ get; };
        Windows.ApplicationModel.Email.EmailQuerySortDirection SortDirection{ set; };
        Windows.ApplicationModel.Email.EmailQuerySortProperty SortProperty{ get; };
        Windows.ApplicationModel.Email.EmailQuerySortProperty SortProperty{ set; };
        Windows.ApplicationModel.Email.EmailQueryKind Kind{ get; };
        Windows.ApplicationModel.Email.EmailQueryKind Kind{ set; };
        Windows.Foundation.Collections.IVector <String>  FolderIds{ get; };
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Email.IEmailMessageReader", 2f4abe9f-6213-4a85-a3b0-f92d1a839d19)]
    runtimeclass EmailMessageReader
    {
        Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailMessageBatch>  ReadBatchAsync();
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Email.IEmailConversation", da18c248-a0bc-4349-902d-90f66389f51b)]
    runtimeclass EmailConversation
    {
        String Id{ get; };
        String MailboxId{ get; };
        Windows.ApplicationModel.Email.EmailFlagState FlagState{ get; };
        Boolean HasAttachment{ get; };
        Windows.ApplicationModel.Email.EmailImportance Importance{ get; };
        Windows.ApplicationModel.Email.EmailMessageResponseKind LastEmailResponseKind{ get; };
        UInt32 MessageCount{ get; };
        String MostRecentMessageId{ get; };
        Windows.Foundation.DateTime MostRecentMessageTime{ get; };
        String Preview{ get; };
        Windows.ApplicationModel.Email.EmailRecipient LatestSender{ get; };
        String Subject{ get; };
        UInt32 UnreadMessageCount{ get; };
        [method_name("FindMessagesAsync")] Windows.Foundation.IAsyncOperation <Windows.Foundation.Collections.IVectorView <Windows.ApplicationModel.Email.EmailMessage> >  FindMessagesAsync();
        [method_name("FindMessagesWithCountAsync")] Windows.Foundation.IAsyncOperation <Windows.Foundation.Collections.IVectorView <Windows.ApplicationModel.Email.EmailMessage> >  FindMessagesAsync(UInt32 count);
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.IEmailFolder", a24f7771-996c-4864-b1ba-ed1240e57d11)]
    runtimeclass EmailFolder
    {
        String Id{ get; };
        String RemoteId{ get; };
        String RemoteId{ set; };
        String MailboxId{ get; };
        String ParentFolderId{ get; };
        String DisplayName{ get; };
        String DisplayName{ set; };
        Boolean IsSyncEnabled{ get; };
        Boolean IsSyncEnabled{ set; };
        Windows.Foundation.DateTime LastSuccessfulSyncTime{ get; };
        Windows.Foundation.DateTime LastSuccessfulSyncTime{ set; };
        Windows.ApplicationModel.Email.EmailSpecialFolderKind Kind{ get; };
        Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailFolder>  CreateFolderAsync(String name);
        Windows.Foundation.IAsyncAction DeleteAsync();
        Windows.Foundation.IAsyncOperation <Windows.Foundation.Collections.IVectorView <Windows.ApplicationModel.Email.EmailFolder> >  FindChildFoldersAsync();
        [method_name("GetConversationReader")] Windows.ApplicationModel.Email.EmailConversationReader GetConversationReader();
        [method_name("GetConversationReaderWithOptions")] Windows.ApplicationModel.Email.EmailConversationReader GetConversationReader(EmailQueryOptions options);
        Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailMessage>  GetMessageAsync(String id);
        [method_name("GetMessageReader")] Windows.ApplicationModel.Email.EmailMessageReader GetMessageReader();
        [method_name("GetMessageReaderWithOptions")] Windows.ApplicationModel.Email.EmailMessageReader GetMessageReader(EmailQueryOptions options);
        Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailItemCounts>  GetMessageCountsAsync();
        [method_name("TryMoveAsync")] [remote_sync]Windows.Foundation.IAsyncOperation <Boolean>  TryMoveAsync(EmailFolder newParentFolder);
        [method_name("TryMoveWithNewNameAsync")] [remote_sync]Windows.Foundation.IAsyncOperation <Boolean>  TryMoveAsync(EmailFolder newParentFolder, String newFolderName);
        Windows.Foundation.IAsyncOperation <Boolean>  TrySaveAsync();
        [remote_sync]Windows.Foundation.IAsyncAction SaveMessageAsync(EmailMessage message);
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.ApplicationModel.Email.IEmailRecipientFactory", 5500b84d-c79a-4ef8-b909-722e18e3935d)]
    [interface_name("Windows.ApplicationModel.Email.IEmailRecipient", cae825b3-4478-4814-b900-c902b5e19b53)]
    [threading(both)]
    runtimeclass EmailRecipient
    {
        [method_name( "Create" )] EmailRecipient(String address);
        [method_name( "CreateWithName" )] EmailRecipient(String address, String name);
        EmailRecipient();
        String Name{ get; };
        String Name{ set; };
        String Address{ get; };
        String Address{ set; };
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.ApplicationModel.Email.IEmailIrmTemplateFactory", 3da31876-8738-4418-b9cb-471b936fe71e)]
    [interface_name("Windows.ApplicationModel.Email.IEmailIrmTemplate", f327758d-546d-4bea-a963-54a38b2cc016)]
    [threading(both)]
    runtimeclass EmailIrmTemplate
    {
        [method_name( "Create" )] EmailIrmTemplate(String id, String name, String description);
        EmailIrmTemplate();
        String Id{ get; };
        String Id{ set; };
        String Description{ get; };
        String Description{ set; };
        String Name{ get; };
        String Name{ set; };
    }



    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Email.IEmailIrmInfo", 90f52193-b1a0-4ebd-a6b6-ddca55606e0e)]
    [threading(both)]
    runtimeclass EmailIrmInfo
    {
        EmailIrmInfo();

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [constructor_name("Windows.ApplicationModel.Email.IEmailIrmInfoFactory", 314bb18c-e3e6-4d7b-be8d-91a96311b01b)]
        {
            [method_name( "Create" )] EmailIrmInfo(Windows.Foundation.DateTime expiration, EmailIrmTemplate irmTemplate);
        }
        Boolean CanEdit{ get; };
        Boolean CanEdit{ set; };
        Boolean CanExtractData{ get; };
        Boolean CanExtractData{ set; };
        Boolean CanForward{ get; };
        Boolean CanForward{ set; };
        Boolean CanModifyRecipientsOnResponse{ get; };
        Boolean CanModifyRecipientsOnResponse{ set; };
        Boolean CanPrintData{ get; };
        Boolean CanPrintData{ set; };
        Boolean CanRemoveIrmOnResponse{ get; };
        Boolean CanRemoveIrmOnResponse{ set; };
        Boolean CanReply{ get; };
        Boolean CanReply{ set; };
        Boolean CanReplyAll{ get; };
        Boolean CanReplyAll{ set; };
        Windows.Foundation.DateTime ExpirationDate{ get; };
        Windows.Foundation.DateTime ExpirationDate{ set; };
        Boolean IsIrmOriginator{ get; };
        Boolean IsIrmOriginator{ set; };
        Boolean IsProgramaticAccessAllowed{ get; };
        Boolean IsProgramaticAccessAllowed{ set; };
        Windows.ApplicationModel.Email.EmailIrmTemplate Template{ get; };
        Windows.ApplicationModel.Email.EmailIrmTemplate Template{ set; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.ApplicationModel.Email.IEmailAttachmentFactory2", 23259435-51f9-427d-adcd-241023c8cfb7)]
    [interface_name("Windows.ApplicationModel.Email.IEmailAttachment", f353caf9-57c8-4adb-b992-60fceb584f54)]
    [threading(both)]
    runtimeclass EmailAttachment
    {
        [method_name( "Create" )] EmailAttachment(String fileName, Windows.Storage.Streams.IRandomAccessStreamReference data, String mimeType);

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [constructor_name("Windows.ApplicationModel.Email.IEmailAttachmentFactory", 796eac46-ed56-4979-8708-abb8bc854b7d)]
        {
            [method_name( "Create" )] EmailAttachment(String fileName, Windows.Storage.Streams.IRandomAccessStreamReference data);
        }
        EmailAttachment();
        String FileName{ get; };
        String FileName{ set; };
        Windows.Storage.Streams.IRandomAccessStreamReference Data{ get; };
        Windows.Storage.Streams.IRandomAccessStreamReference Data{ set; };

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.ApplicationModel.Email.IEmailAttachment2", 225f1070-b0ff-4571-9d54-a706c48d55c6)]
        {
            String Id{ get; };
            String ContentId{ get; };
            String ContentId{ set; };
            String ContentLocation{ get; };
            String ContentLocation{ set; };
            Windows.ApplicationModel.Email.EmailAttachmentDownloadState DownloadState{ get; };
            Windows.ApplicationModel.Email.EmailAttachmentDownloadState DownloadState{ set; };
            UInt64 EstimatedDownloadSizeInBytes{ get; };
            UInt64 EstimatedDownloadSizeInBytes{ set; };
            Boolean IsFromBaseMessage{ get; };
            Boolean IsInline{ get; };
            Boolean IsInline{ set; };
            String MimeType{ get; };
            String MimeType{ set; };
        }
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Email.IEmailMeetingInfo", 31c03fa9-7933-415f-a275-d165ba07026b)]
    [threading(both)]
    runtimeclass EmailMeetingInfo
    {
        EmailMeetingInfo();
        Boolean AllowNewTimeProposal{ get; };
        Boolean AllowNewTimeProposal{ set; };
        String AppointmentRoamingId{ get; };
        String AppointmentRoamingId{ set; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  AppointmentOriginalStartTime{ get; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  AppointmentOriginalStartTime{ set; };
        Windows.Foundation.TimeSpan Duration{ get; };
        Windows.Foundation.TimeSpan Duration{ set; };
        Boolean IsAllDay{ get; };
        Boolean IsAllDay{ set; };
        Boolean IsResponseRequested{ get; };
        Boolean IsResponseRequested{ set; };
        String Location{ get; };
        String Location{ set; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  ProposedStartTime{ get; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  ProposedStartTime{ set; };
        Windows.Foundation.IReference <Windows.Foundation.TimeSpan>  ProposedDuration{ get; };
        Windows.Foundation.IReference <Windows.Foundation.TimeSpan>  ProposedDuration{ set; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  RecurrenceStartTime{ get; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  RecurrenceStartTime{ set; };
        Windows.ApplicationModel.Appointments.AppointmentRecurrence Recurrence{ get; };
        Windows.ApplicationModel.Appointments.AppointmentRecurrence Recurrence{ set; };
        UInt64 RemoteChangeNumber{ get; };
        UInt64 RemoteChangeNumber{ set; };
        Windows.Foundation.DateTime StartTime{ get; };
        Windows.Foundation.DateTime StartTime{ set; };

        [contract(Windows.Foundation.UniversalApiContract, 2)]
        [interface_name("Windows.ApplicationModel.Email.IEmailMeetingInfo2", 7e59386d-b0d9-4fe5-867c-e31ed2b588b8)]
        {
            Boolean IsReportedOutOfDateByServer{ get; };
        }
    }








    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.IEmailMailboxChangedDeferral", 779a74c1-97c5-4b54-b30d-306232623e6d)]
    runtimeclass EmailMailboxChangedDeferral
    {
        void Complete();
    }










    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Email.IEmailMailboxCapabilities", eedec3a6-89db-4305-82c4-439e0a33da11)]
    runtimeclass EmailMailboxCapabilities
    {
        Boolean CanForwardMeetings{ get; };
        Boolean CanGetAndSetExternalAutoReplies{ get; };
        Boolean CanGetAndSetInternalAutoReplies{ get; };
        Boolean CanUpdateMeetingResponses{ get; };
        Boolean CanServerSearchFolders{ get; };
        Boolean CanServerSearchMailbox{ get; };
        Boolean CanProposeNewTimeForMeetings{ get; };
        Boolean CanSmartSend{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 2)]
        [interface_name("Windows.ApplicationModel.Email.IEmailMailboxCapabilities2", 69723ee4-2f21-4cbc-88ab-2e7602a4806b)]
        {
            Boolean CanResolveRecipients{ get; };
            Boolean CanValidateCertificates{ get; };
            Boolean CanEmptyFolder{ get; };
            Boolean CanCreateFolder{ get; };
            Boolean CanDeleteFolder{ get; };
            Boolean CanMoveFolder{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [interface_name("Windows.ApplicationModel.Email.IEmailMailboxCapabilities3", f690e944-56f2-45aa-872c-0ce9f3db0b5c)]
        {
            Boolean CanForwardMeetings{ set; };
            Boolean CanGetAndSetExternalAutoReplies{ set; };
            Boolean CanGetAndSetInternalAutoReplies{ set; };
            Boolean CanUpdateMeetingResponses{ set; };
            Boolean CanServerSearchFolders{ set; };
            Boolean CanServerSearchMailbox{ set; };
            Boolean CanProposeNewTimeForMeetings{ set; };
            Boolean CanSmartSend{ set; };
            Boolean CanResolveRecipients{ set; };
            Boolean CanValidateCertificates{ set; };
            Boolean CanEmptyFolder{ set; };
            Boolean CanCreateFolder{ set; };
            Boolean CanDeleteFolder{ set; };
            Boolean CanMoveFolder{ set; };
        }
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.IEmailMailboxChangeTracker", 7ae48638-5166-42b7-8882-fd21c92bdd4b)]
    runtimeclass EmailMailboxChangeTracker
    {
        Boolean IsTracking{ get; };
        void Enable();
        Windows.ApplicationModel.Email.EmailMailboxChangeReader GetChangeReader();
        void Reset();
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Email.IEmailMailboxPolicies", 1f3345c5-1c3b-4dc7-b410-6373783e545d)]
    runtimeclass EmailMailboxPolicies
    {
        Windows.ApplicationModel.Email.EmailMailboxAllowedSmimeEncryptionAlgorithmNegotiation AllowedSmimeEncryptionAlgorithmNegotiation{ get; };
        Boolean AllowSmimeSoftCertificates{ get; };
        Windows.Foundation.IReference <Windows.ApplicationModel.Email.EmailMailboxSmimeEncryptionAlgorithm>  RequiredSmimeEncryptionAlgorithm{ get; };
        Windows.Foundation.IReference <Windows.ApplicationModel.Email.EmailMailboxSmimeSigningAlgorithm>  RequiredSmimeSigningAlgorithm{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 2)]
        [interface_name("Windows.ApplicationModel.Email.IEmailMailboxPolicies2", bab58afb-a14b-497c-a8e2-55eac29cc4b5)]
        {
            Boolean MustEncryptSmimeMessages{ get; };
            Boolean MustSignSmimeMessages{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [interface_name("Windows.ApplicationModel.Email.IEmailMailboxPolicies3", bdd4a01f-4867-414a-81a2-803919c44191)]
        {
            Windows.ApplicationModel.Email.EmailMailboxAllowedSmimeEncryptionAlgorithmNegotiation AllowedSmimeEncryptionAlgorithmNegotiation{ set; };
            Boolean AllowSmimeSoftCertificates{ set; };
            Windows.Foundation.IReference <Windows.ApplicationModel.Email.EmailMailboxSmimeEncryptionAlgorithm>  RequiredSmimeEncryptionAlgorithm{ set; };
            Windows.Foundation.IReference <Windows.ApplicationModel.Email.EmailMailboxSmimeSigningAlgorithm>  RequiredSmimeSigningAlgorithm{ set; };
            Boolean MustEncryptSmimeMessages{ set; };
            Boolean MustSignSmimeMessages{ set; };
        }
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Email.IEmailMailboxSyncManager", 517ac55a-3591-4b5d-85bc-c71dde862263)]
    runtimeclass EmailMailboxSyncManager
    {
        Windows.ApplicationModel.Email.EmailMailboxSyncStatus Status{ get; };
        Windows.Foundation.DateTime LastSuccessfulSyncTime{ get; };
        Windows.Foundation.DateTime LastAttemptedSyncTime{ get; };
        Windows.Foundation.IAsyncOperation <Boolean>  SyncAsync();
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Email.EmailMailboxSyncManager, Object>  SyncStatusChanged;

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [interface_name("Windows.ApplicationModel.Email.IEmailMailboxSyncManager2", cd8dc97e-95c1-4f89-81b7-e6aecb6695fc)]
        {
            Windows.ApplicationModel.Email.EmailMailboxSyncStatus Status{ set; };
            Windows.Foundation.DateTime LastSuccessfulSyncTime{ set; };
            Windows.Foundation.DateTime LastAttemptedSyncTime{ set; };
        }
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.IEmailMailboxChangedEventArgs", 3cfd5f6e-01d4-4e4a-a44c-b22dd42ec207)]
    runtimeclass EmailMailboxChangedEventArgs
    {
        Windows.ApplicationModel.Email.EmailMailboxChangedDeferral GetDeferral();
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Email.IEmailMailboxAutoReplySettings", a87a9fa8-0ac6-4b77-ba77-a6b99e9a27b8)]
    [threading(both)]
    runtimeclass EmailMailboxAutoReplySettings
    {
        EmailMailboxAutoReplySettings();
        Boolean IsEnabled{ get; };
        Boolean IsEnabled{ set; };
        Windows.ApplicationModel.Email.EmailMailboxAutoReplyMessageResponseKind ResponseKind{ get; };
        Windows.ApplicationModel.Email.EmailMailboxAutoReplyMessageResponseKind ResponseKind{ set; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  StartTime{ get; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  StartTime{ set; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  EndTime{ get; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  EndTime{ set; };
        Windows.ApplicationModel.Email.EmailMailboxAutoReply InternalReply{ get; };
        Windows.ApplicationModel.Email.EmailMailboxAutoReply KnownExternalReply{ get; };
        Windows.ApplicationModel.Email.EmailMailboxAutoReply UnknownExternalReply{ get; };
    }



    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 2)]
    [interface_name("Windows.ApplicationModel.Email.IEmailRecipientResolutionResult", 918338fa-8d8d-4573-80d1-07172a34b98d)]
    [threading(both)]
    runtimeclass EmailRecipientResolutionResult
    {
        EmailRecipientResolutionResult();
        Windows.ApplicationModel.Email.EmailRecipientResolutionStatus Status{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Security.Cryptography.Certificates.Certificate>  PublicKeys{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [interface_name("Windows.ApplicationModel.Email.IEmailRecipientResolutionResult2", 5e420bb6-ce5b-4bde-b9d4-e16da0b09fca)]
        {
            Windows.ApplicationModel.Email.EmailRecipientResolutionStatus Status{ set; };
            void SetPublicKeys(Windows.Foundation.Collections.IIterable <Windows.Security.Cryptography.Certificates.Certificate>  value);
        }
    }

    [contract(Windows.Foundation.UniversalApiContract, 2)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.IEmailMailboxCreateFolderResult", b228557f-2885-4998-b595-8a2d374ce950)]
    runtimeclass EmailMailboxCreateFolderResult
    {
        Windows.ApplicationModel.Email.EmailMailboxCreateFolderStatus Status{ get; };
        Windows.ApplicationModel.Email.EmailFolder Folder{ get; };
    }







    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.IEmailMailboxAutoReply", e223254c-8ab4-485b-b31f-04d15476bd59)]
    runtimeclass EmailMailboxAutoReply
    {
        Boolean IsEnabled{ get; };
        Boolean IsEnabled{ set; };
        String Response{ get; };
        String Response{ set; };
    }





    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Email.IEmailItemCounts", 5bd13321-fec8-4bab-83ba-0baf3c1f6cbd)]
    runtimeclass EmailItemCounts
    {
        UInt32 Flagged{ get; };
        UInt32 Important{ get; };
        UInt32 Total{ get; };
        UInt32 Unread{ get; };
    }






    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Email.IEmailQueryTextSearch", 9fa0a288-3c5d-46a5-a6e2-31d6fd17e540)]
    runtimeclass EmailQueryTextSearch
    {
        Windows.ApplicationModel.Email.EmailQuerySearchFields Fields{ get; };
        Windows.ApplicationModel.Email.EmailQuerySearchFields Fields{ set; };
        Windows.ApplicationModel.Email.EmailQuerySearchScope SearchScope{ get; };
        Windows.ApplicationModel.Email.EmailQuerySearchScope SearchScope{ set; };
        String Text{ get; };
        String Text{ set; };
    }



    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Email.IEmailConversationBatch", b8c1ab81-01c5-432a-9df1-fe85d98a279a)]
    runtimeclass EmailConversationBatch
    {
        Windows.Foundation.Collections.IVectorView <Windows.ApplicationModel.Email.EmailConversation>  Conversations{ get; };
        Windows.ApplicationModel.Email.EmailBatchStatus Status{ get; };
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.IEmailMessageBatch", 605cd08f-25d9-4f1b-9e51-0514c0149653)]
    runtimeclass EmailMessageBatch
    {
        Windows.Foundation.Collections.IVectorView <Windows.ApplicationModel.Email.EmailMessage>  Messages{ get; };
        Windows.ApplicationModel.Email.EmailBatchStatus Status{ get; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.IEmailMailboxAction", ac9889fa-21fa-4927-9210-d410582fdf3e)]
    runtimeclass EmailMailboxAction
    {
        Windows.ApplicationModel.Email.EmailMailboxActionKind Kind{ get; };
        UInt64 ChangeNumber{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Email.IEmailMailboxChange", 61edf54b-11ef-400c-adde-8cde65c85e66)]
    runtimeclass EmailMailboxChange
    {
        Windows.ApplicationModel.Email.EmailMailboxChangeType ChangeType{ get; };
        Windows.Foundation.Collections.IVector <Windows.ApplicationModel.Email.EmailMailboxAction>  MailboxActions{ get; };
        Windows.ApplicationModel.Email.EmailMessage Message{ get; };
        Windows.ApplicationModel.Email.EmailFolder Folder{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Email.IEmailMailboxChangeReader", bdbd0ebb-c53d-4331-97be-be75a2146a75)]
    runtimeclass EmailMailboxChangeReader
    {
        void AcceptChanges();
        void AcceptChangesThrough(EmailMailboxChange lastChangeToAcknowledge);
        Windows.Foundation.IAsyncOperation <Windows.Foundation.Collections.IVectorView <Windows.ApplicationModel.Email.EmailMailboxChange> >  ReadBatchAsync();
    }




    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.ApplicationModel.Email.IEmailManagerStatics2", ac052da3-b194-425d-b6d9-d0f04135eda2)]
    [threading(both)]
    runtimeclass EmailManager
    {

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [static_name("Windows.ApplicationModel.Email.IEmailManagerStatics3", 4a722395-843e-4945-b3aa-349e07a362c5)]
        {
            static Windows.ApplicationModel.Email.EmailManagerForUser GetForUser(Windows.System.User user);
        }
        static Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.Email.EmailStore>  RequestStoreAsync(EmailStoreAccessType accessType);

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [static_name("Windows.ApplicationModel.Email.IEmailManagerStatics", f5128654-55c5-4890-a824-216c2618ce7f)]
        {
            static Windows.Foundation.IAsyncAction ShowComposeNewEmailAsync(EmailMessage message);
        }
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [default_interface]
    [interface_name("Windows.ApplicationModel.Email.IEmailStoreNotificationTriggerDetails", ce17563c-46e6-43c9-96f7-facf7dd710cb)]
    runtimeclass EmailStoreNotificationTriggerDetails
    {
    }


}
namespace Windows.ApplicationModel.Background
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.ApplicationModel.Background.IEmailStoreNotificationTrigger", 986d06da-47eb-4268-a4f2-f3f77188388a)]
    [threading(both)]
    runtimeclass EmailStoreNotificationTrigger
        : Windows.ApplicationModel.Background.IBackgroundTrigger
    {
        EmailStoreNotificationTrigger();
    }


}
namespace Windows.ApplicationModel.Email.DataProvider
{
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailDataProviderConnection", 3b9c9dc7-37b2-4bf0-ae30-7b644a1c96e1)]
    runtimeclass EmailDataProviderConnection
    {
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Email.DataProvider.EmailDataProviderConnection, Windows.ApplicationModel.Email.DataProvider.EmailMailboxSyncManagerSyncRequestEventArgs>  MailboxSyncRequested;
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Email.DataProvider.EmailDataProviderConnection, Windows.ApplicationModel.Email.DataProvider.EmailMailboxDownloadMessageRequestEventArgs>  DownloadMessageRequested;
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Email.DataProvider.EmailDataProviderConnection, Windows.ApplicationModel.Email.DataProvider.EmailMailboxDownloadAttachmentRequestEventArgs>  DownloadAttachmentRequested;
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Email.DataProvider.EmailDataProviderConnection, Windows.ApplicationModel.Email.DataProvider.EmailMailboxCreateFolderRequestEventArgs>  CreateFolderRequested;
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Email.DataProvider.EmailDataProviderConnection, Windows.ApplicationModel.Email.DataProvider.EmailMailboxDeleteFolderRequestEventArgs>  DeleteFolderRequested;
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Email.DataProvider.EmailDataProviderConnection, Windows.ApplicationModel.Email.DataProvider.EmailMailboxEmptyFolderRequestEventArgs>  EmptyFolderRequested;
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Email.DataProvider.EmailDataProviderConnection, Windows.ApplicationModel.Email.DataProvider.EmailMailboxMoveFolderRequestEventArgs>  MoveFolderRequested;
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Email.DataProvider.EmailDataProviderConnection, Windows.ApplicationModel.Email.DataProvider.EmailMailboxUpdateMeetingResponseRequestEventArgs>  UpdateMeetingResponseRequested;
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Email.DataProvider.EmailDataProviderConnection, Windows.ApplicationModel.Email.DataProvider.EmailMailboxForwardMeetingRequestEventArgs>  ForwardMeetingRequested;
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Email.DataProvider.EmailDataProviderConnection, Windows.ApplicationModel.Email.DataProvider.EmailMailboxProposeNewTimeForMeetingRequestEventArgs>  ProposeNewTimeForMeetingRequested;
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Email.DataProvider.EmailDataProviderConnection, Windows.ApplicationModel.Email.DataProvider.EmailMailboxSetAutoReplySettingsRequestEventArgs>  SetAutoReplySettingsRequested;
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Email.DataProvider.EmailDataProviderConnection, Windows.ApplicationModel.Email.DataProvider.EmailMailboxGetAutoReplySettingsRequestEventArgs>  GetAutoReplySettingsRequested;
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Email.DataProvider.EmailDataProviderConnection, Windows.ApplicationModel.Email.DataProvider.EmailMailboxResolveRecipientsRequestEventArgs>  ResolveRecipientsRequested;
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Email.DataProvider.EmailDataProviderConnection, Windows.ApplicationModel.Email.DataProvider.EmailMailboxValidateCertificatesRequestEventArgs>  ValidateCertificatesRequested;
        event Windows.Foundation.TypedEventHandler <Windows.ApplicationModel.Email.DataProvider.EmailDataProviderConnection, Windows.ApplicationModel.Email.DataProvider.EmailMailboxServerSearchReadBatchRequestEventArgs>  ServerSearchReadBatchRequested;
        void Start();
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxSyncManagerSyncRequestEventArgs", 439a031a-8fcc-4ae5-b9b5-d434e0a65aa8)]
    runtimeclass EmailMailboxSyncManagerSyncRequestEventArgs
    {
        Windows.ApplicationModel.Email.DataProvider.EmailMailboxSyncManagerSyncRequest Request{ get; };
        Windows.Foundation.Deferral GetDeferral();
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxDownloadMessageRequestEventArgs", 470409ad-d0a0-4a5b-bb2a-37621039c53e)]
    runtimeclass EmailMailboxDownloadMessageRequestEventArgs
    {
        Windows.ApplicationModel.Email.DataProvider.EmailMailboxDownloadMessageRequest Request{ get; };
        Windows.Foundation.Deferral GetDeferral();
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxDownloadAttachmentRequestEventArgs", ccddc46d-ffa8-4877-9f9d-fed7bcaf4104)]
    runtimeclass EmailMailboxDownloadAttachmentRequestEventArgs
    {
        Windows.ApplicationModel.Email.DataProvider.EmailMailboxDownloadAttachmentRequest Request{ get; };
        Windows.Foundation.Deferral GetDeferral();
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxCreateFolderRequestEventArgs", 03e4c02c-241c-4ea9-a68f-ff20bc5afc85)]
    runtimeclass EmailMailboxCreateFolderRequestEventArgs
    {
        Windows.ApplicationModel.Email.DataProvider.EmailMailboxCreateFolderRequest Request{ get; };
        Windows.Foundation.Deferral GetDeferral();
    }

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxDeleteFolderRequestEventArgs", b4d32d06-2332-4678-8378-28b579336846)]
    runtimeclass EmailMailboxDeleteFolderRequestEventArgs
    {
        Windows.ApplicationModel.Email.DataProvider.EmailMailboxDeleteFolderRequest Request{ get; };
        Windows.Foundation.Deferral GetDeferral();
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxEmptyFolderRequestEventArgs", 7183f484-985a-4ac0-b33f-ee0e2627a3c0)]
    runtimeclass EmailMailboxEmptyFolderRequestEventArgs
    {
        Windows.ApplicationModel.Email.DataProvider.EmailMailboxEmptyFolderRequest Request{ get; };
        Windows.Foundation.Deferral GetDeferral();
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxMoveFolderRequestEventArgs", 38623020-14ba-4c88-8698-7239e3c8aaa7)]
    runtimeclass EmailMailboxMoveFolderRequestEventArgs
    {
        Windows.ApplicationModel.Email.DataProvider.EmailMailboxMoveFolderRequest Request{ get; };
        Windows.Foundation.Deferral GetDeferral();
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxUpdateMeetingResponseRequestEventArgs", 6898d761-56c9-4f17-be31-66fda94ba159)]
    runtimeclass EmailMailboxUpdateMeetingResponseRequestEventArgs
    {
        Windows.ApplicationModel.Email.DataProvider.EmailMailboxUpdateMeetingResponseRequest Request{ get; };
        Windows.Foundation.Deferral GetDeferral();
    }

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxForwardMeetingRequestEventArgs", 2bd8f33a-2974-4759-a5a5-58f44d3c0275)]
    runtimeclass EmailMailboxForwardMeetingRequestEventArgs
    {
        Windows.ApplicationModel.Email.DataProvider.EmailMailboxForwardMeetingRequest Request{ get; };
        Windows.Foundation.Deferral GetDeferral();
    }

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxProposeNewTimeForMeetingRequestEventArgs", fb480b98-33ad-4a67-8251-0f9c249b6a20)]
    runtimeclass EmailMailboxProposeNewTimeForMeetingRequestEventArgs
    {
        Windows.ApplicationModel.Email.DataProvider.EmailMailboxProposeNewTimeForMeetingRequest Request{ get; };
        Windows.Foundation.Deferral GetDeferral();
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxSetAutoReplySettingsRequestEventArgs", 09da11ad-d7ca-4087-ac86-53fa67f76246)]
    runtimeclass EmailMailboxSetAutoReplySettingsRequestEventArgs
    {
        Windows.ApplicationModel.Email.DataProvider.EmailMailboxSetAutoReplySettingsRequest Request{ get; };
        Windows.Foundation.Deferral GetDeferral();
    }

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxGetAutoReplySettingsRequestEventArgs", d79f55c2-fd45-4004-8a91-9bacf38b7022)]
    runtimeclass EmailMailboxGetAutoReplySettingsRequestEventArgs
    {
        Windows.ApplicationModel.Email.DataProvider.EmailMailboxGetAutoReplySettingsRequest Request{ get; };
        Windows.Foundation.Deferral GetDeferral();
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxResolveRecipientsRequestEventArgs", 260f9e02-b2cf-40f8-8c28-e3ed43b1e89a)]
    runtimeclass EmailMailboxResolveRecipientsRequestEventArgs
    {
        Windows.ApplicationModel.Email.DataProvider.EmailMailboxResolveRecipientsRequest Request{ get; };
        Windows.Foundation.Deferral GetDeferral();
    }

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxValidateCertificatesRequestEventArgs", 2583bf17-02ff-49fe-a73c-03f37566c691)]
    runtimeclass EmailMailboxValidateCertificatesRequestEventArgs
    {
        Windows.ApplicationModel.Email.DataProvider.EmailMailboxValidateCertificatesRequest Request{ get; };
        Windows.Foundation.Deferral GetDeferral();
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxServerSearchReadBatchRequestEventArgs", 14101b4e-ed9e-45d1-ad7a-cc9b7f643ae2)]
    runtimeclass EmailMailboxServerSearchReadBatchRequestEventArgs
    {
        Windows.ApplicationModel.Email.DataProvider.EmailMailboxServerSearchReadBatchRequest Request{ get; };
        Windows.Foundation.Deferral GetDeferral();
    }
















    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailDataProviderTriggerDetails", 8f3e4e50-341e-45f3-bba0-84a005e1319a)]
    runtimeclass EmailDataProviderTriggerDetails
    {
        Windows.ApplicationModel.Email.DataProvider.EmailDataProviderConnection Connection{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxSyncManagerSyncRequest", 4e10e8e4-7e67-405a-b673-dc60c91090fc)]
    runtimeclass EmailMailboxSyncManagerSyncRequest
    {
        String EmailMailboxId{ get; };
        Windows.Foundation.IAsyncAction ReportCompletedAsync();
        Windows.Foundation.IAsyncAction ReportFailedAsync();
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxDownloadMessageRequest", 497b4187-5b4d-4b23-816c-f3842beb753e)]
    runtimeclass EmailMailboxDownloadMessageRequest
    {
        String EmailMailboxId{ get; };
        String EmailMessageId{ get; };
        Windows.Foundation.IAsyncAction ReportCompletedAsync();
        Windows.Foundation.IAsyncAction ReportFailedAsync();
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxDownloadAttachmentRequest", 0b1dbbb4-750c-48e1-bce4-8d589684ffbc)]
    runtimeclass EmailMailboxDownloadAttachmentRequest
    {
        String EmailMailboxId{ get; };
        String EmailMessageId{ get; };
        String EmailAttachmentId{ get; };
        Windows.Foundation.IAsyncAction ReportCompletedAsync();
        Windows.Foundation.IAsyncAction ReportFailedAsync();
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxCreateFolderRequest", 184d3775-c921-4c39-a309-e16c9f22b04b)]
    runtimeclass EmailMailboxCreateFolderRequest
    {
        String EmailMailboxId{ get; };
        String ParentFolderId{ get; };
        String Name{ get; };
        Windows.Foundation.IAsyncAction ReportCompletedAsync(Windows.ApplicationModel.Email.EmailFolder folder);
        Windows.Foundation.IAsyncAction ReportFailedAsync(Windows.ApplicationModel.Email.EmailMailboxCreateFolderStatus status);
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxDeleteFolderRequest", 9469e88a-a931-4779-923d-09a3ea292e29)]
    runtimeclass EmailMailboxDeleteFolderRequest
    {
        String EmailMailboxId{ get; };
        String EmailFolderId{ get; };
        Windows.Foundation.IAsyncAction ReportCompletedAsync();
        Windows.Foundation.IAsyncAction ReportFailedAsync(Windows.ApplicationModel.Email.EmailMailboxDeleteFolderStatus status);
    }


    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxEmptyFolderRequest", fe4b03ab-f86d-46d9-b4ce-bc8a6d9e9268)]
    runtimeclass EmailMailboxEmptyFolderRequest
    {
        String EmailMailboxId{ get; };
        String EmailFolderId{ get; };
        Windows.Foundation.IAsyncAction ReportCompletedAsync();
        Windows.Foundation.IAsyncAction ReportFailedAsync(Windows.ApplicationModel.Email.EmailMailboxEmptyFolderStatus status);
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxMoveFolderRequest", 10ba2856-4a95-4068-91cc-67cc7acf454f)]
    runtimeclass EmailMailboxMoveFolderRequest
    {
        String EmailMailboxId{ get; };
        String EmailFolderId{ get; };
        String NewParentFolderId{ get; };
        String NewFolderName{ get; };
        Windows.Foundation.IAsyncAction ReportCompletedAsync();
        Windows.Foundation.IAsyncAction ReportFailedAsync();
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxUpdateMeetingResponseRequest", 5b99ac93-b2cf-4888-ba4f-306b6b66df30)]
    runtimeclass EmailMailboxUpdateMeetingResponseRequest
    {
        String EmailMailboxId{ get; };
        String EmailMessageId{ get; };
        Windows.ApplicationModel.Email.EmailMeetingResponseType Response{ get; };
        String Subject{ get; };
        String Comment{ get; };
        Boolean SendUpdate{ get; };
        Windows.Foundation.IAsyncAction ReportCompletedAsync();
        Windows.Foundation.IAsyncAction ReportFailedAsync();
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxForwardMeetingRequest", 616d6af1-70d4-4832-b869-b80542ae9be8)]
    runtimeclass EmailMailboxForwardMeetingRequest
    {
        String EmailMailboxId{ get; };
        String EmailMessageId{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.ApplicationModel.Email.EmailRecipient>  Recipients{ get; };
        String Subject{ get; };
        Windows.ApplicationModel.Email.EmailMessageBodyKind ForwardHeaderType{ get; };
        String ForwardHeader{ get; };
        String Comment{ get; };
        Windows.Foundation.IAsyncAction ReportCompletedAsync();
        Windows.Foundation.IAsyncAction ReportFailedAsync();
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxProposeNewTimeForMeetingRequest", 5aeff152-9799-4f9f-a399-ff07f3eef04e)]
    runtimeclass EmailMailboxProposeNewTimeForMeetingRequest
    {
        String EmailMailboxId{ get; };
        String EmailMessageId{ get; };
        Windows.Foundation.DateTime NewStartTime{ get; };
        Windows.Foundation.TimeSpan NewDuration{ get; };
        String Subject{ get; };
        String Comment{ get; };
        Windows.Foundation.IAsyncAction ReportCompletedAsync();
        Windows.Foundation.IAsyncAction ReportFailedAsync();
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxSetAutoReplySettingsRequest", 75a422d0-a88e-4e54-8dc7-c243186b774e)]
    runtimeclass EmailMailboxSetAutoReplySettingsRequest
    {
        String EmailMailboxId{ get; };
        Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings AutoReplySettings{ get; };
        Windows.Foundation.IAsyncAction ReportCompletedAsync();
        Windows.Foundation.IAsyncAction ReportFailedAsync();
    }


    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxGetAutoReplySettingsRequest", 9b380789-1e88-4e01-84cc-1386ad9a2c2f)]
    runtimeclass EmailMailboxGetAutoReplySettingsRequest
    {
        String EmailMailboxId{ get; };
        Windows.ApplicationModel.Email.EmailMailboxAutoReplyMessageResponseKind RequestedFormat{ get; };
        Windows.Foundation.IAsyncAction ReportCompletedAsync(Windows.ApplicationModel.Email.EmailMailboxAutoReplySettings autoReplySettings);
        Windows.Foundation.IAsyncAction ReportFailedAsync();
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxResolveRecipientsRequest", efa4cf70-7b39-4c9b-811e-41eaf43a332d)]
    runtimeclass EmailMailboxResolveRecipientsRequest
    {
        String EmailMailboxId{ get; };
        Windows.Foundation.Collections.IVectorView <String>  Recipients{ get; };
        Windows.Foundation.IAsyncAction ReportCompletedAsync(Windows.Foundation.Collections.IIterable <Windows.ApplicationModel.Email.EmailRecipientResolutionResult>  resolutionResults);
        Windows.Foundation.IAsyncAction ReportFailedAsync();
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxValidateCertificatesRequest", a94d3931-e11a-4f97-b81a-187a70a8f41a)]
    runtimeclass EmailMailboxValidateCertificatesRequest
    {
        String EmailMailboxId{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Security.Cryptography.Certificates.Certificate>  Certificates{ get; };
        Windows.Foundation.IAsyncAction ReportCompletedAsync(Windows.Foundation.Collections.IIterable <Windows.ApplicationModel.Email.EmailCertificateValidationStatus>  validationStatuses);
        Windows.Foundation.IAsyncAction ReportFailedAsync();
    }


    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.Email.DataProvider.IEmailMailboxServerSearchReadBatchRequest", 090eebdf-5a96-41d3-8ad8-34912f9aa60e)]
    runtimeclass EmailMailboxServerSearchReadBatchRequest
    {
        String SessionId{ get; };
        String EmailMailboxId{ get; };
        String EmailFolderId{ get; };
        Windows.ApplicationModel.Email.EmailQueryOptions Options{ get; };
        UInt32 SuggestedBatchSize{ get; };
        Windows.Foundation.IAsyncAction SaveMessageAsync(Windows.ApplicationModel.Email.EmailMessage message);
        Windows.Foundation.IAsyncAction ReportCompletedAsync();
        Windows.Foundation.IAsyncAction ReportFailedAsync(Windows.ApplicationModel.Email.EmailBatchStatus batchStatus);
    }

}
