








namespace lockframework
{
    [contractversion(1)]
    [internal]
    apicontract InternalPrivContract{};

    [uuid(8d81d2e4-8660-4adc-8b8c-f0bdb05fd669)]
    [contract(lockframework.InternalPrivContract, 1)]
    interface ILockScreenDataLayerPlatform
    {
        void AlarmIconChanged();
        void BadgesChanged();
        void DetailTextChanged();
        void UnpinBadge(UInt32 slot);
        void UnpinDetailedStatus();
        String GetDetailedStatusAumID();
        String GetBadgeAumID(UInt32 slot);
        void GetBadgeSlotCount(out UInt32 value);
        Windows.Storage.Streams.IRandomAccessStream ResolveGlyph(UInt32 value);
        Windows.Storage.Streams.IRandomAccessStream ResolveLogo(String path);
        void FormatAccessibleTextBadgeGlyph(String appDisplayName, UInt32 glyph, out String accesibleText);
        void FormatAccessibleTextBadgeNumber(String appDisplayName, UInt32 value, out String accesibleText);
    };

    [contract(lockframework.InternalPrivContract, 1)]
    [uuid(8f083062-1a3f-4f06-be10-da6397eda8b5)]
    interface ILockScreenDataLayerPlatformHelper
    {
        Int32 GetGlyphResourceId(UInt32 value);
    };



    [dualapipartition(0xa000004)]
    [contract(lockframework.InternalPrivContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("lockframework.ILockScreenDataLayerFactory", a99aeb58-e8c4-49a0-b459-4b885a3783c9)]
    [interface_name("lockframework.ILockScreenDataLayer", fccb4ca4-5329-431b-9a68-47cf44ba6827)]
    [threading(both)]
    runtimeclass LockScreenDataLayer
    {
        [method_name( "CreateLockScreenDataLayer" )] LockScreenDataLayer(ILockScreenDataLayerPlatform platform);
        void Shutdown();
        Windows.Storage.Streams.IRandomAccessStream AlarmIcon{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.ApplicationModel.LockScreen.LockScreenBadge>  Badges{ get; };
        Windows.Foundation.Collections.IVectorView <String>  DetailText{ get; };
    }

    [contract(lockframework.InternalPrivContract, 1)]
    [uuid(e8f7573d-3f95-4ff2-9979-17fe45312f8f)]
    interface ILockScreenDataLayerHelper
    {
        String AlarmIconLogoResourcePath{ get; };
    };


    [contract(lockframework.InternalPrivContract, 1)]
    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [static_name("lockframework.ILockFrameworkBrokerStatics", 28fe486d-6853-4c62-81ab-4bdc6b9c1a9d)]
    runtimeclass LockFrameworkBroker
    {
        static Windows.ApplicationModel.LockScreen.LockApplicationHost CreateLockApplicationHost();
        static void ValidateCaller(out Boolean isValid);
        static Object CreateLockActivatedEventArgs(Windows.ApplicationModel.LockScreen.LockScreenInfo info);
        static Boolean ApplicationValidateLockScreenExtension(String appUserModelId);
        static Boolean ApplicationValidateAboveLockExtension(String appUserModelId);
        static Boolean ProcessIdValidateLockScreenExtension(UInt32 processId);
        static Boolean ApplicationValidateLockScreenExtensionForUser(String userSid, String appUserModelId);
        static Boolean ApplicationValidateAboveLockExtensionForUser(String userSid, String appUserModelId);
    }


    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [contract(lockframework.InternalPrivContract, 1)]
    [static_name("lockframework.ILockScreenViewStatics", f886f763-4d0f-476d-b909-b8e333ef9370)]
    runtimeclass LockScreenView
    {
        static Object CreateLockScreenInfoControl(Object model);
        static Object CreateXamlRuntimeSite();
    }

}
