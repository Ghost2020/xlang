









namespace Windows.Web.Http.Diagnostics
{
    [contractversion(2)]
    apicontract HttpDiagnosticsContract{};

    [contract(Windows.Web.Http.Diagnostics.HttpDiagnosticsContract, 1)]
    enum HttpDiagnosticRequestInitiator
    {
        ParsedElement,
        Script,
        Image,
        Link,
        Style,
        XmlHttpRequest,
        Media,
        HtmlDownload,
        Prefetch,
        Other,
        [contract(Windows.Web.Http.Diagnostics.HttpDiagnosticsContract, 2)]
        CrossOriginPreFlight,
        [contract(Windows.Web.Http.Diagnostics.HttpDiagnosticsContract, 2)]
        Fetch,
        [contract(Windows.Web.Http.Diagnostics.HttpDiagnosticsContract, 2)]
        Beacon,
    };


    [marshaling_behavior(agile)]
    [contract(Windows.Web.Http.Diagnostics.HttpDiagnosticsContract, 1)]
    [interface_name("Windows.Web.Http.Diagnostics.IHttpDiagnosticSourceLocation", 54a9d260-8860-423f-b6fa-d77716f647a7)]
    runtimeclass HttpDiagnosticSourceLocation
    {
        Windows.Foundation.Uri SourceUri{ get; };
        UInt64 LineNumber{ get; };
        UInt64 ColumnNumber{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Web.Http.Diagnostics.HttpDiagnosticsContract, 1)]
    [interface_name("Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestSentEventArgs", 3f5196d0-4c1f-4ebe-a57a-06930771c50d)]
    runtimeclass HttpDiagnosticProviderRequestSentEventArgs
    {
        Windows.Foundation.DateTime Timestamp{ get; };
        Guid ActivityId{ get; };
        Windows.Web.Http.HttpRequestMessage Message{ get; };
        UInt32 ProcessId{ get; };
        UInt32 ThreadId{ get; };
        Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator Initiator{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Web.Http.Diagnostics.HttpDiagnosticSourceLocation>  SourceLocations{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Web.Http.Diagnostics.HttpDiagnosticsContract, 1)]
    [interface_name("Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderResponseReceivedEventArgs", a0a2566c-ab5f-4d66-bb2d-084cf41635d0)]
    runtimeclass HttpDiagnosticProviderResponseReceivedEventArgs
    {
        Windows.Foundation.DateTime Timestamp{ get; };
        Guid ActivityId{ get; };
        Windows.Web.Http.HttpResponseMessage Message{ get; };
    }


    [contract(Windows.Web.Http.Diagnostics.HttpDiagnosticsContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseTimestamps", e0afde10-55cf-4c01-91d4-a20557d849f0)]
    runtimeclass HttpDiagnosticProviderRequestResponseTimestamps
    {
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  CacheCheckedTimestamp{ get; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  ConnectionInitiatedTimestamp{ get; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  NameResolvedTimestamp{ get; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  SslNegotiatedTimestamp{ get; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  ConnectionCompletedTimestamp{ get; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  RequestSentTimestamp{ get; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  RequestCompletedTimestamp{ get; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  ResponseReceivedTimestamp{ get; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  ResponseCompletedTimestamp{ get; };
    }


    [contract(Windows.Web.Http.Diagnostics.HttpDiagnosticsContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderRequestResponseCompletedEventArgs", 735f98ee-94f6-4532-b26e-61e1b1e4efd4)]
    runtimeclass HttpDiagnosticProviderRequestResponseCompletedEventArgs
    {
        Guid ActivityId{ get; };
        Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseTimestamps Timestamps{ get; };
        Windows.Foundation.Uri RequestedUri{ get; };
        UInt32 ProcessId{ get; };
        UInt32 ThreadId{ get; };
        Windows.Web.Http.Diagnostics.HttpDiagnosticRequestInitiator Initiator{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Web.Http.Diagnostics.HttpDiagnosticSourceLocation>  SourceLocations{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Web.Http.Diagnostics.HttpDiagnosticsContract, 1)]
    [static_name("Windows.Web.Http.Diagnostics.IHttpDiagnosticProviderStatics", 5b824ec1-6a6c-47cc-afec-1e86bc26053b)]
    [interface_name("Windows.Web.Http.Diagnostics.IHttpDiagnosticProvider", bd811501-a056-4d39-b174-833b7b03b02c)]
    [threading(both)]
    runtimeclass HttpDiagnosticProvider
    {
        static Windows.Web.Http.Diagnostics.HttpDiagnosticProvider CreateFromProcessDiagnosticInfo(Windows.System.Diagnostics.ProcessDiagnosticInfo processDiagnosticInfo);
        void Start();
        void Stop();
        event Windows.Foundation.TypedEventHandler <Windows.Web.Http.Diagnostics.HttpDiagnosticProvider, Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestSentEventArgs>  RequestSent;
        event Windows.Foundation.TypedEventHandler <Windows.Web.Http.Diagnostics.HttpDiagnosticProvider, Windows.Web.Http.Diagnostics.HttpDiagnosticProviderResponseReceivedEventArgs>  ResponseReceived;
        event Windows.Foundation.TypedEventHandler <Windows.Web.Http.Diagnostics.HttpDiagnosticProvider, Windows.Web.Http.Diagnostics.HttpDiagnosticProviderRequestResponseCompletedEventArgs>  RequestResponseCompleted;
    }


}
