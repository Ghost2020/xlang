










namespace Windows.Internal.StateRepository
{
    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [contract(Windows.Internal.StateRepository.StateRepositoryContract, 1)]
    [static_name("Windows.Internal.StateRepository.IPackageAppInstallerStatics", c1beebfd-9cae-4779-be9b-dc252d20e552)]
    [interface_name("Windows.Internal.StateRepository.IPackageAppInstaller", ee751b00-bfc8-4b1c-b0d8-d4974b231f49)]
    [threading(both)]
    runtimeclass PackageAppInstaller
    {
        static Boolean Exists(Int64 packageAppInstallerID);
        static Boolean ExistsByAppInstaller(AppInstaller AppInstaller);
        static Boolean ExistsByPackage(Package Package);
        static Boolean ExistsByPackageAndAppInstaller(Package Package, AppInstaller AppInstaller);
        static Windows.Internal.StateRepository.PackageAppInstaller Get(Int64 packageAppInstallerID);
        static Windows.Internal.StateRepository.PackageAppInstaller TryGet(Int64 packageAppInstallerID);
        static Windows.Internal.StateRepository.PackageAppInstaller GetByPackageAndAppInstaller(Package Package, AppInstaller AppInstaller);
        static Windows.Internal.StateRepository.PackageAppInstaller TryGetByPackageAndAppInstaller(Package Package, AppInstaller AppInstaller);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.PackageAppInstaller>  Find();
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.PackageAppInstaller>  FindByAppInstaller(AppInstaller AppInstaller);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.PackageAppInstaller>  FindByPackage(Package Package);
        PackageAppInstaller();
        Int64 _PackageAppInstallerID{ get; };
        Int64 _PackageAppInstallerID{ set; };
        UInt64 _Revision{ get; };
        UInt64 _Revision{ set; };
        Int64 Package{ get; };
        Int64 Package{ set; };
        Windows.Internal.StateRepository.Package GetPackage();
        void SetPackage(Package value);
        Int64 AppInstaller{ get; };
        Int64 AppInstaller{ set; };
        Windows.Internal.StateRepository.AppInstaller GetAppInstaller();
        void SetAppInstaller(AppInstaller value);
        Boolean Is_DictionaryNull{ get; };
        void Set_DictionaryToNull();
        void Get_Dictionary(out UInt8[] value);
        void Set_Dictionary(UInt8[] value);
        Windows.Foundation.Collections.IPropertySet Get_DictionaryAsPropertySet();
    }


}
