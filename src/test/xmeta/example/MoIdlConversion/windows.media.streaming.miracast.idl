





namespace Windows.Media.Streaming.Miracast
{
    [contractversion(2)]
    [internal]
    apicontract MiracastReceiverContract{};

    [contract(Windows.Media.Streaming.Miracast.MiracastReceiverContract, 1)]
    enum WiFiGroupOwnerMode
    {
        Automatic,
        Always,
        Prefer,
        Avoid,
    };

    [contract(Windows.Media.Streaming.Miracast.MiracastReceiverContract, 1)]
    enum MiracastHumanInterfaceDeviceReportType
    {
        Report,
        ReportDescriptor,
    };

    [contract(Windows.Media.Streaming.Miracast.MiracastReceiverContract, 1)]
    enum MiracastGenericReportType
    {
        TouchDown,
        TouchUp,
        TouchMove,
        KeyDown,
        KeyUp,
        Zoom,
        VerticalScroll,
        HorizontalScroll,
        Rotate,
    };

    [contract(Windows.Media.Streaming.Miracast.MiracastReceiverContract, 1)]
    enum HdcpTransportState
    {
        HdcpUninitialized,
        HdcpListening,
        HdcpConnected,
        HdcpHandshakeStarted,
        HdcpHandshakeComplete,
        HdcpDisconnected,
        HdcpDownstreamTopologyChanged,
        HdcpHandshakeFailed,
        HdcpConnectionFailed,
    };


    [contract(Windows.Media.Streaming.Miracast.MiracastReceiverContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Media.Streaming.Miracast.IMiracastTransmitterInternal", 652dd160-c71e-5433-88fb-cf02a1450164)]
    runtimeclass MiracastTransmitterInternal
    {
        UInt32 SignalStrength{ get; };
    }

    [uuid(f58dd458-494c-5455-ab14-94becbdb76b8)]
    [contract(Windows.Media.Streaming.Miracast.MiracastReceiverContract, 1)]
    interface IMiracastReceiverInputDeviceSettingsInternal
    {
        Boolean AreGenericReportsEnabled{ get; };
        Boolean AreGenericReportsEnabled{ set; };
        Boolean AreGenericReportsRequested{ get; };
        void SendGenericReport(MiracastGenericReportType reportType, UInt8[] report);
        Boolean AreHumanInterfaceDeviceReportsEnabled{ get; };
        Boolean AreHumanInterfaceDeviceReportsEnabled{ set; };
        Boolean AreHumanInterfaceDeviceReportsRequested{ get; };
        void SendReport(MiracastHumanInterfaceDeviceReportType reportType, UInt8[] report);
    };


    [contract(Windows.Media.Streaming.Miracast.MiracastReceiverContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Media.Streaming.Miracast.IMiracastReceiverInputDeviceSettings", 6b8c8160-e794-50d7-bf0d-5088623fb706)]
    runtimeclass MiracastReceiverInputDeviceSettings
        : Windows.Media.Streaming.Miracast.IMiracastReceiverInputDeviceSettingsInternal
    {
        Boolean IsEnabled{ get; };
        Boolean IsEnabled{ set; };
        Boolean IsRequestedByTransmitter{ get; };
    }

    [contract(Windows.Media.Streaming.Miracast.MiracastReceiverContract, 1)]
    [uuid(29a361ff-3744-562b-9e0e-e676dbb19eb2)]
    interface IMiracastReceiverInputDevicesInternal
    {
        Windows.Media.Streaming.Miracast.MiracastReceiverInputDeviceSettings Mouse{ get; };
        Windows.Media.Streaming.Miracast.MiracastReceiverInputDeviceSettings MultiTouch{ get; };
        Windows.Media.Streaming.Miracast.MiracastReceiverInputDeviceSettings Stylus{ get; };
        Windows.Media.Streaming.Miracast.MiracastReceiverInputDeviceSettings RemoteController{ get; };
    };

    [uuid(2771021f-2172-5265-a232-42c40b028ed8)]
    [contract(Windows.Media.Streaming.Miracast.MiracastReceiverContract, 1)]
    interface IMiracastReceiverConnectionInternal
    {
        Windows.Media.Streaming.Miracast.HdcpTransportState HdcpState{ get; };
    };

    [contract(Windows.Media.Streaming.Miracast.MiracastReceiverContract, 1)]
    [uuid(648f5c1a-0193-5a30-b619-36c9822bc231)]
    interface IMiracastReceiverSettingsInternal
    {
        String ContainerId{ get; };
        String ContainerId{ set; };
        Windows.Media.Streaming.Miracast.WiFiGroupOwnerMode WiFiGroupOwner{ get; };
        Windows.Media.Streaming.Miracast.WiFiGroupOwnerMode WiFiGroupOwner{ set; };
    };

    [contract(Windows.Media.Streaming.Miracast.MiracastReceiverContract, 1)]
    [uuid(11947df4-0a5e-5116-a0e3-b7b809a33625)]
    interface IMiracastReceiverStatusInternal
    {
        Boolean IsHdcp2SupportedByPlatform{ get; };
    };

}
