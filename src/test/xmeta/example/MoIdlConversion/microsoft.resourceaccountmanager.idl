







namespace Microsoft.ResourceAccountManager
{
    [contractversion(1)]
    [internal]
    apicontract InternalContract{};


    [contract(Microsoft.ResourceAccountManager.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Microsoft.ResourceAccountManager.IResourceAccountSetup", 4b9502d3-2c08-488c-8523-0be682cf5cbd)]
    [threading(both)]
    runtimeclass ResourceAccountSetup
    {
        ResourceAccountSetup();
        Windows.Foundation.IAsyncAction CreateResourceAccountWithAADAccountAsync(String userName, Windows.Storage.Streams.IBuffer password);
        Windows.Foundation.IAsyncAction ProvisionAADResourceAccountUserAsync(String UPN, String FriendlyName);
        Boolean IsRequired();
        void EnsureResourceAccountMailboxCreation();
        String UPN{ get; };
    }


    [contract(Microsoft.ResourceAccountManager.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Microsoft.ResourceAccountManager.IResourceAccountPolicy", b31aa21d-686c-4eae-8c37-47387927ceed)]
    [threading(both)]
    runtimeclass ResourceAccountPolicy
    {
        ResourceAccountPolicy();
        Boolean IsAppAllowedForResourceAccount(String appId);
    }


    [contract(Microsoft.ResourceAccountManager.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Microsoft.ResourceAccountManager.IResourceAccountLicense", f333c367-a41b-4510-b8a2-746b80327d93)]
    [threading(both)]
    runtimeclass ResourceAccountLicense
    {
        ResourceAccountLicense();
        Windows.Foundation.IAsyncOperation <Boolean>  ActivateLicenseAsync(String contentId, String policyId);
        Windows.Foundation.IAsyncOperation <Boolean>  ValidatePolicyAsync(String contentId, String policyId);
        Boolean IsRequired();
        UInt64 LastActivationTime{ get; };
        UInt64 LastActivationTime{ set; };
    }


    [contract(Microsoft.ResourceAccountManager.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Microsoft.ResourceAccountManager.IResourceAccountActivateLicense", 7531e6ef-938a-4ebb-b30f-38f6c03d3429)]
    [threading(both)]
    runtimeclass ResourceAccountActivateLicense
    {
        ResourceAccountActivateLicense();
        Windows.Foundation.IAsyncOperation <Boolean>  ActivateLicenseAsync(String contentId);
    }

}
