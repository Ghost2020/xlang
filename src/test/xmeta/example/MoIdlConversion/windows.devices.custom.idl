








namespace Windows.Devices.Custom
{
    [contractversion(1)]
    apicontract CustomDeviceContract{};


    [contract(Windows.Devices.Custom.CustomDeviceContract, 1)]
    [dualapipartition(0x6030000)]
    [marshaling_behavior(agile)]
    [static_name("Windows.Devices.Custom.IKnownDeviceTypesStatics", ee5479c2-5448-45da-ad1b-24948c239094)]
    runtimeclass KnownDeviceTypes
    {
        static UInt16 Unknown{ get; };
    }

    [contract(Windows.Devices.Custom.CustomDeviceContract, 1)]
    enum IOControlAccessMode
    {
        Any,
        Read,
        Write,
        ReadWrite,
    };

    [contract(Windows.Devices.Custom.CustomDeviceContract, 1)]
    enum IOControlBufferingMethod
    {
        Buffered,
        DirectInput,
        DirectOutput,
        Neither,
    };

    [contract(Windows.Devices.Custom.CustomDeviceContract, 1)]
    [uuid(0e9559e7-60c8-4375-a761-7f8808066c60)]
    interface IIOControlCode
    {
        Windows.Devices.Custom.IOControlAccessMode AccessMode{ get; };
        Windows.Devices.Custom.IOControlBufferingMethod BufferingMethod{ get; };
        UInt16 Function{ get; };
        UInt16 DeviceType{ get; };
        UInt32 ControlCode{ get; };
    };


    [marshaling_behavior(agile)]
    [contract(Windows.Devices.Custom.CustomDeviceContract, 1)]
    [dualapipartition(0x6030000)]
    [constructor_name("Windows.Devices.Custom.IIOControlCodeFactory", 856a7cf0-4c11-44ae-afc6-b8d4a212788f)]
    [threading(both)]
    runtimeclass IOControlCode
        : [default]Windows.Devices.Custom.IIOControlCode
    {
        [method_name( "CreateIOControlCode" )] IOControlCode(UInt16 deviceType, UInt16 function, IOControlAccessMode accessMode, IOControlBufferingMethod bufferingMethod);
    }

    [contract(Windows.Devices.Custom.CustomDeviceContract, 1)]
    enum DeviceAccessMode
    {
        Read,
        Write,
        ReadWrite,
    };

    [contract(Windows.Devices.Custom.CustomDeviceContract, 1)]
    enum DeviceSharingMode
    {
        Shared,
        Exclusive,
    };


    [dualapipartition(0x6030000)]
    [marshaling_behavior(agile)]
    [contract(Windows.Devices.Custom.CustomDeviceContract, 1)]
    [static_name("Windows.Devices.Custom.ICustomDeviceStatics", c8220312-ef4c-46b1-a58e-eeb308dc8917)]
    [interface_name("Windows.Devices.Custom.ICustomDevice", dd30251f-c48b-43bd-bcb1-dec88f15143e)]
    [threading(both)]
    runtimeclass CustomDevice
    {
        static String GetDeviceSelector(Guid classGuid);
        static Windows.Foundation.IAsyncOperation <Windows.Devices.Custom.CustomDevice>  FromIdAsync(String deviceId, DeviceAccessMode desiredAccess, DeviceSharingMode sharingMode);
        Windows.Storage.Streams.IInputStream InputStream{ get; };
        Windows.Storage.Streams.IOutputStream OutputStream{ get; };
        Windows.Foundation.IAsyncOperation <UInt32>  SendIOControlAsync(IIOControlCode ioControlCode, Windows.Storage.Streams.IBuffer inputBuffer, Windows.Storage.Streams.IBuffer outputBuffer);
        Windows.Foundation.IAsyncOperation <Boolean>  TrySendIOControlAsync(IIOControlCode ioControlCode, Windows.Storage.Streams.IBuffer inputBuffer, Windows.Storage.Streams.IBuffer outputBuffer);
    }


}
