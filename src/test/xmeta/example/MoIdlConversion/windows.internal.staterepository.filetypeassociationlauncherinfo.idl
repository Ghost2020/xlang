











namespace Windows.Internal.StateRepository
{
    [dualapipartition(0xa000000)]
    [contract(Windows.Internal.StateRepository.StateRepositoryContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Internal.StateRepository.IFileTypeAssociationLauncherInfo", 8f8bf3e3-b9be-4969-9eb5-e49b5a12d2ec)]
    [threading(both)]
    runtimeclass FileTypeAssociationLauncherInfo
    {
        FileTypeAssociationLauncherInfo();
        Int64 FileTypeAssociation{ get; };
        Int64 FileTypeAssociation{ set; };
        Windows.Internal.StateRepository.FileTypeAssociation GetFileTypeAssociation();
        void SetFileTypeAssociation(FileTypeAssociation value);
        String FileType{ get; };
        String FileType{ set; };
        Int64 Application{ get; };
        Int64 Application{ set; };
        Windows.Internal.StateRepository.Application GetApplication();
        void SetApplication(Application value);
        String ApplicationUserModelId{ get; };
        String ApplicationUserModelId{ set; };
        Boolean IsProgIDNull{ get; };
        void SetProgIDToNull();
        String ProgID{ get; };
        String ProgID{ set; };
        String PackageFamilyName{ get; };
        String PackageFamilyName{ set; };
        String PackageFullName{ get; };
        String PackageFullName{ set; };
        Windows.Internal.StateRepository.SupportedUsers SupportedUsers{ get; };
        Windows.Internal.StateRepository.SupportedUsers SupportedUsers{ set; };
        Windows.Internal.StateRepository.PackageOrigin PackageOrigin{ get; };
        Windows.Internal.StateRepository.PackageOrigin PackageOrigin{ set; };
        Boolean Is_DictionaryNull{ get; };
        void Set_DictionaryToNull();
        void Get_Dictionary(out UInt8[] value);
        void Set_Dictionary(UInt8[] value);
        Windows.Foundation.Collections.IPropertySet Get_DictionaryAsPropertySet();
        Windows.Internal.StateRepository.SupportedUsers EffectiveSupportedUsers{ get; };
    }

}
