








namespace Windows.Devices.Sms
{
    [contractversion(1)]
    apicontract LegacySmsApiContract{};

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum SmsMessageClass
    {
        None,
        Class0,
        Class1,
        Class2,
        Class3,
    };

    [uuid(ed3c5e28-6984-4b07-811d-8d5906ed3cea)]
    [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
    interface ISmsMessage
    {
        UInt32 Id{ get; };
        Windows.Devices.Sms.SmsMessageClass MessageClass{ get; };
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum SmsMessageType
    {
        Binary,
        Text,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Wap,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        App,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Broadcast,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Voicemail,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Status,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum CellularClass
    {
        None,
        Gsm,
        Cdma,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(2cf0fe30-fe50-4fc6-aa88-4ccfe27a29ea)]
    interface ISmsMessageBase
    {
        Windows.Devices.Sms.SmsMessageType MessageType{ get; };
        String DeviceId{ get; };
        Windows.Devices.Sms.CellularClass CellularClass{ get; };
        Windows.Devices.Sms.SmsMessageClass MessageClass{ get; };
        String SimIccId{ get; };
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum SmsDataFormat
    {
        Unknown,
        CdmaSubmit,
        GsmSubmit,
        CdmaDeliver,
        GsmDeliver,
    };

    [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
    [deprecated("SmsBinaryMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsAppMessage.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
    [uuid(5bf4e813-3b53-4c6e-b61a-d86a63755650)]
    interface ISmsBinaryMessage requires Windows.Devices.Sms.ISmsMessage
    {
        [deprecated("SmsBinaryMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsAppMessage.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        Windows.Devices.Sms.SmsDataFormat Format{ get; };
        [deprecated("SmsBinaryMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsAppMessage.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        Windows.Devices.Sms.SmsDataFormat Format{ set; };
        [deprecated("SmsBinaryMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsAppMessage.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        UInt8[] GetData();
        [deprecated("SmsBinaryMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsAppMessage.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        void SetData(UInt8[] value);
    };

    [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
    [dualapipartition(0x6020000)]
    [marshaling_behavior(agile)]
    [deprecated("SmsBinaryMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsAppMessage.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
    runtimeclass SmsBinaryMessage
        : [default]Windows.Devices.Sms.ISmsBinaryMessage
        , Windows.Devices.Sms.ISmsMessage
    {
        SmsBinaryMessage();
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum SmsEncoding
    {
        Unknown,
        Optimal,
        SevenBitAscii,
        Unicode,
        GsmSevenBit,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        EightBit,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Latin,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Korean,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        IA5,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        ShiftJis,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        LatinHebrew,
    };

    [uuid(d61c904c-a495-487f-9a6f-971548c5bc9f)]
    [deprecated("SmsTextMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsTextMessage2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
    [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
    interface ISmsTextMessage requires Windows.Devices.Sms.ISmsMessage
    {
        [deprecated("SmsTextMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsTextMessage2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        Windows.Foundation.DateTime Timestamp{ get; };
        [deprecated("SmsTextMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsTextMessage2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        UInt32 PartReferenceId{ get; };
        [deprecated("SmsTextMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsTextMessage2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        UInt32 PartNumber{ get; };
        [deprecated("SmsTextMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsTextMessage2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        UInt32 PartCount{ get; };
        [deprecated("SmsTextMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsTextMessage2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        String To{ get; };
        [deprecated("SmsTextMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsTextMessage2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        String To{ set; };
        [deprecated("SmsTextMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsTextMessage2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        String From{ get; };
        [deprecated("SmsTextMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsTextMessage2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        String From{ set; };
        [deprecated("SmsTextMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsTextMessage2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        String Body{ get; };
        [deprecated("SmsTextMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsTextMessage2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        String Body{ set; };
        [deprecated("SmsTextMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsTextMessage2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        Windows.Devices.Sms.SmsEncoding Encoding{ get; };
        [deprecated("SmsTextMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsTextMessage2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        Windows.Devices.Sms.SmsEncoding Encoding{ set; };
        [deprecated("SmsTextMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsTextMessage2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        Windows.Foundation.Collections.IVectorView <Windows.Devices.Sms.ISmsBinaryMessage>  ToBinaryMessages(SmsDataFormat format);
    };


    [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
    [marshaling_behavior(agile)]
    [deprecated("SmsTextMessage may be altered or unavailable for releases after Windows 10. Instead, use SmsTextMessage2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
    [dualapipartition(0x6020000)]
    [static_name("Windows.Devices.Sms.ISmsTextMessageStatics", 7f68c5ed-3ccc-47a3-8c55-380d3b010892)]
    [threading(both)]
    runtimeclass SmsTextMessage
        : [default]Windows.Devices.Sms.ISmsTextMessage
        , Windows.Devices.Sms.ISmsMessage
    {
        SmsTextMessage();
        [deprecated("ISmsTextMessageStatics may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        static Windows.Devices.Sms.SmsTextMessage FromBinaryMessage(SmsBinaryMessage binaryMessage);
        [deprecated("ISmsTextMessageStatics may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        static Windows.Devices.Sms.SmsTextMessage FromBinaryData(SmsDataFormat format, UInt8[] value);
    }


    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Devices.Sms.ISmsTextMessage2", 22a0d893-4555-4755-b5a1-e7fd84955f8d)]
    [threading(both)]
    runtimeclass SmsTextMessage2
        : Windows.Devices.Sms.ISmsMessageBase
    {
        SmsTextMessage2();
        Windows.Foundation.DateTime Timestamp{ get; };
        String To{ get; };
        String To{ set; };
        String From{ get; };
        String Body{ get; };
        String Body{ set; };
        Windows.Devices.Sms.SmsEncoding Encoding{ get; };
        Windows.Devices.Sms.SmsEncoding Encoding{ set; };
        String CallbackNumber{ get; };
        String CallbackNumber{ set; };
        Boolean IsDeliveryNotificationEnabled{ get; };
        Boolean IsDeliveryNotificationEnabled{ set; };
        Int32 RetryAttemptCount{ get; };
        Int32 RetryAttemptCount{ set; };
        Int32 TeleserviceId{ get; };
        Int32 ProtocolId{ get; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [interface_name("Windows.Devices.Sms.ISmsWapMessage", cd937743-7a55-4d3b-9021-f22e022d09c5)]
    runtimeclass SmsWapMessage
        : Windows.Devices.Sms.ISmsMessageBase
    {
        Windows.Foundation.DateTime Timestamp{ get; };
        String To{ get; };
        String From{ get; };
        String ApplicationId{ get; };
        String ContentType{ get; };
        Windows.Storage.Streams.IBuffer BinaryBody{ get; };
        Windows.Foundation.Collections.IMap <String, String>  Headers{ get; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Devices.Sms.ISmsAppMessage", e8bb8494-d3a0-4a0a-86d7-291033a8cf54)]
    runtimeclass SmsAppMessage
        : Windows.Devices.Sms.ISmsMessageBase
    {
        SmsAppMessage();
        Windows.Foundation.DateTime Timestamp{ get; };
        String To{ get; };
        String To{ set; };
        String From{ get; };
        String Body{ get; };
        String Body{ set; };
        String CallbackNumber{ get; };
        String CallbackNumber{ set; };
        Boolean IsDeliveryNotificationEnabled{ get; };
        Boolean IsDeliveryNotificationEnabled{ set; };
        Int32 RetryAttemptCount{ get; };
        Int32 RetryAttemptCount{ set; };
        Windows.Devices.Sms.SmsEncoding Encoding{ get; };
        Windows.Devices.Sms.SmsEncoding Encoding{ set; };
        Int32 PortNumber{ get; };
        Int32 PortNumber{ set; };
        Int32 TeleserviceId{ get; };
        Int32 TeleserviceId{ set; };
        Int32 ProtocolId{ get; };
        Int32 ProtocolId{ set; };
        Windows.Storage.Streams.IBuffer BinaryBody{ get; };
        Windows.Storage.Streams.IBuffer BinaryBody{ set; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum SmsGeographicalScope
    {
        None,
        CellWithImmediateDisplay,
        LocationArea,
        Plmn,
        Cell,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum SmsBroadcastType
    {
        Other,
        CmasPresidential,
        CmasExtreme,
        CmasSevere,
        CmasAmber,
        CmasTest,
        EUAlert1,
        EUAlert2,
        EUAlert3,
        EUAlertAmber,
        EUAlertInfo,
        EtwsEarthquake,
        EtwsTsunami,
        EtwsTsunamiAndEarthquake,
        LatAlertLocal,
    };


    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Devices.Sms.ISmsBroadcastMessage", 75aebbf1-e4b7-4874-a09c-2956e592f957)]
    runtimeclass SmsBroadcastMessage
        : Windows.Devices.Sms.ISmsMessageBase
    {
        Windows.Foundation.DateTime Timestamp{ get; };
        String To{ get; };
        String Body{ get; };
        Int32 Channel{ get; };
        Windows.Devices.Sms.SmsGeographicalScope GeographicalScope{ get; };
        Int32 MessageCode{ get; };
        Int32 UpdateNumber{ get; };
        Windows.Devices.Sms.SmsBroadcastType BroadcastType{ get; };
        Boolean IsEmergencyAlert{ get; };
        Boolean IsUserPopupRequested{ get; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [interface_name("Windows.Devices.Sms.ISmsVoicemailMessage", 271aa0a6-95b1-44ff-bcb8-b8fdd7e08bc3)]
    runtimeclass SmsVoicemailMessage
        : Windows.Devices.Sms.ISmsMessageBase
    {
        Windows.Foundation.DateTime Timestamp{ get; };
        String To{ get; };
        String Body{ get; };
        Windows.Foundation.IReference <Int32>  MessageCount{ get; };
    }


    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Devices.Sms.ISmsStatusMessage", e6d28342-b70b-4677-9379-c9783fdff8f4)]
    runtimeclass SmsStatusMessage
        : Windows.Devices.Sms.ISmsMessageBase
    {
        String To{ get; };
        String From{ get; };
        String Body{ get; };
        Int32 Status{ get; };
        Int32 MessageReferenceNumber{ get; };
        Windows.Foundation.DateTime ServiceCenterTimestamp{ get; };
        Windows.Foundation.DateTime DischargeTime{ get; };
    }

    [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
    [deprecated("SmsMessageFilter may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
    enum SmsMessageFilter
    {
        All,
        Unread,
        Read,
        Sent,
        Draft,
    };

    [deprecated("DeleteSmsMessageOperation may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
    [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
    runtimeclass DeleteSmsMessageOperation
        : [default]Windows.Foundation.IAsyncAction
    {
    }

    [deprecated("DeleteSmsMessagesOperation may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
    [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
    runtimeclass DeleteSmsMessagesOperation
        : [default]Windows.Foundation.IAsyncAction
    {
    }

    [deprecated("GetSmsMessageOperation may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
    [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
    runtimeclass GetSmsMessageOperation
        : [default]Windows.Foundation.IAsyncOperation<Windows.Devices.Sms.ISmsMessage>
    {
    }

    [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
    [deprecated("GetSmsMessagesOperation may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
    runtimeclass GetSmsMessagesOperation
        : [default]Windows.Foundation.IAsyncOperationWithProgress<Windows.Foundation.Collections.IVectorView<Windows.Devices.Sms.ISmsMessage>, Int32>
    {
    }


    [deprecated("SmsDeviceMessageStore may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
    [dualapipartition(0x6020000)]
    [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
    [interface_name("Windows.Devices.Sms.ISmsDeviceMessageStore", 9889f253-f188-4427-8d54-ce0c2423c5c1)]
    runtimeclass SmsDeviceMessageStore
    {
        [deprecated("SmsDeviceMessageStore may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        Windows.Foundation.IAsyncAction DeleteMessageAsync(UInt32 messageId);
        [deprecated("SmsDeviceMessageStore may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        Windows.Foundation.IAsyncAction DeleteMessagesAsync(SmsMessageFilter messageFilter);
        [deprecated("SmsDeviceMessageStore may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        Windows.Foundation.IAsyncOperation <Windows.Devices.Sms.ISmsMessage>  GetMessageAsync(UInt32 messageId);
        [deprecated("SmsDeviceMessageStore may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        Windows.Foundation.IAsyncOperationWithProgress <Windows.Foundation.Collections.IVectorView <Windows.Devices.Sms.ISmsMessage> , Int32>  GetMessagesAsync(SmsMessageFilter messageFilter);
        [deprecated("SmsDeviceMessageStore may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        UInt32 MaxMessages{ get; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    struct SmsEncodedLength
    {
        UInt32 SegmentCount;
        UInt32 CharacterCountLastSegment;
        UInt32 CharactersPerSegment;
        UInt32 ByteCountLastSegment;
        UInt32 BytesPerSegment;
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum SmsDeviceStatus
    {
        Off,
        Ready,
        SimNotInserted,
        BadSim,
        DeviceFailure,
        SubscriptionNotActivated,
        DeviceLocked,
        DeviceBlocked,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum SmsModemErrorCode
    {
        Other,
        MessagingNetworkError,
        SmsOperationNotSupportedByDevice,
        SmsServiceNotSupportedByNetwork,
        DeviceFailure,
        MessageNotEncodedProperly,
        MessageTooLarge,
        DeviceNotReady,
        NetworkNotReady,
        InvalidSmscAddress,
        NetworkFailure,
        FixedDialingNumberRestricted,
    };


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [interface_name("Windows.Devices.Sms.ISmsSendMessageResult", db139af2-78c9-4feb-9622-452328088d62)]
    runtimeclass SmsSendMessageResult
    {
        Boolean IsSuccessful{ get; };
        Windows.Foundation.Collections.IVectorView <Int32>  MessageReferenceNumbers{ get; };
        Windows.Devices.Sms.CellularClass CellularClass{ get; };
        Windows.Devices.Sms.SmsModemErrorCode ModemErrorCode{ get; };
        Boolean IsErrorTransient{ get; };
        Int32 NetworkCauseCode{ get; };
        Int32 TransportFailureCause{ get; };
    }

    [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
    [deprecated("SendSmsMessageOperation may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
    runtimeclass SendSmsMessageOperation
        : [default]Windows.Foundation.IAsyncAction
    {
    }


    [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
    [deprecated("SmsMessageReceivedEventArgs may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
    [interface_name("Windows.Devices.Sms.ISmsMessageReceivedEventArgs", 08e80a98-b8e5-41c1-a3d8-d3abfae22675)]
    runtimeclass SmsMessageReceivedEventArgs
    {
        [deprecated("SmsMessageReceivedEventArgs may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        Windows.Devices.Sms.SmsTextMessage TextMessage{ get; };
        [deprecated("SmsMessageReceivedEventArgs may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        Windows.Devices.Sms.SmsBinaryMessage BinaryMessage{ get; };
    }

    [deprecated("SmsMessageReceivedEventHandler may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
    [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
    [uuid(0b7ad409-ec2d-47ce-a253-732beeebcacd)]
    delegate void SmsMessageReceivedEventHandler(SmsDevice sender, SmsMessageReceivedEventArgs e);

    [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
    [dualapipartition(0x6020000)]
    [deprecated("SmsDevice may be altered or unavailable for releases after Windows 10. Instead, use SmsDevice2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
    [static_name("Windows.Devices.Sms.ISmsDeviceStatics2", 2ca11c87-0873-4caf-8a7d-bd471e8586d1)]
    [threading(both)]
    runtimeclass SmsDevice
        : [default]Windows.Devices.Sms.ISmsDevice
    {
        [deprecated("ISmsDeviceStatics2 may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        static Windows.Foundation.IAsyncOperation <Windows.Devices.Sms.SmsDevice>  FromNetworkAccountIdAsync(String networkAccountId);

        [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
        [static_name("Windows.Devices.Sms.ISmsDeviceStatics", f88d07ea-d815-4dd1-a234-4520ce4604a4)]
        {
            [deprecated("ISmsDeviceStatics may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
            static String GetDeviceSelector();
            [deprecated("ISmsDeviceStatics may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
            static Windows.Foundation.IAsyncOperation <Windows.Devices.Sms.SmsDevice>  FromIdAsync(String deviceId);
            [deprecated("ISmsDeviceStatics may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
            static Windows.Foundation.IAsyncOperation <Windows.Devices.Sms.SmsDevice>  GetDefaultAsync();
        }
    }

    [uuid(982b1162-3dd7-4618-af89-0c272d5d06d8)]
    [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
    [deprecated("SmsDeviceStatusChangedEventHandler may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
    delegate void SmsDeviceStatusChangedEventHandler(SmsDevice sender);

    [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
    [deprecated("GetSmsDeviceOperation may be altered or unavailable for releases after Windows 10.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
    runtimeclass GetSmsDeviceOperation
        : [default]Windows.Foundation.IAsyncOperation<Windows.Devices.Sms.SmsDevice>
    {
    }



    [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
    [uuid(091791ed-872b-4eec-9c72-ab11627b34ec)]
    [deprecated("SmsDevice may be altered or unavailable for releases after Windows 10. Instead, use SmsDevice2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
    interface ISmsDevice
    {
        [deprecated("SmsDevice may be altered or unavailable for releases after Windows 10. Instead, use SmsDevice2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        [remote_sync]Windows.Devices.Sms.SendSmsMessageOperation SendMessageAsync(ISmsMessage message);
        [deprecated("SmsDevice may be altered or unavailable for releases after Windows 10. Instead, use SmsDevice2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        Windows.Devices.Sms.SmsEncodedLength CalculateLength(SmsTextMessage message);
        [deprecated("SmsDevice may be altered or unavailable for releases after Windows 10. Instead, use SmsDevice2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        String AccountPhoneNumber{ get; };
        [deprecated("SmsDevice may be altered or unavailable for releases after Windows 10. Instead, use SmsDevice2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        Windows.Devices.Sms.CellularClass CellularClass{ get; };
        [deprecated("SmsDevice may be altered or unavailable for releases after Windows 10. Instead, use SmsDevice2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        Windows.Devices.Sms.SmsDeviceMessageStore MessageStore{ get; };
        [deprecated("SmsDevice may be altered or unavailable for releases after Windows 10. Instead, use SmsDevice2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        Windows.Devices.Sms.SmsDeviceStatus DeviceStatus{ get; };
        [deprecated("SmsDevice may be altered or unavailable for releases after Windows 10. Instead, use SmsDevice2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        event Windows.Devices.Sms.SmsMessageReceivedEventHandler SmsMessageReceived;
        [deprecated("SmsDevice may be altered or unavailable for releases after Windows 10. Instead, use SmsDevice2.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        event Windows.Devices.Sms.SmsDeviceStatusChangedEventHandler SmsDeviceStatusChanged;
    };


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [dualapipartition(0xa000000)]
    [static_name("Windows.Devices.Sms.ISmsDevice2Statics", 65c78325-1031-491e-8fb6-ef9991afe363)]
    [interface_name("Windows.Devices.Sms.ISmsDevice2", bd8a5c13-e522-46cb-b8d5-9ead30fb6c47)]
    [threading(both)]
    runtimeclass SmsDevice2
    {
        static String GetDeviceSelector();
        static Windows.Devices.Sms.SmsDevice2 FromId(String deviceId);
        static Windows.Devices.Sms.SmsDevice2 GetDefault();
        static Windows.Devices.Sms.SmsDevice2 FromParentId(String parentDeviceId);
        String SmscAddress{ get; };
        String SmscAddress{ set; };
        String DeviceId{ get; };
        String ParentDeviceId{ get; };
        String AccountPhoneNumber{ get; };
        Windows.Devices.Sms.CellularClass CellularClass{ get; };
        Windows.Devices.Sms.SmsDeviceStatus DeviceStatus{ get; };
        Windows.Devices.Sms.SmsEncodedLength CalculateLength(ISmsMessageBase message);
        Windows.Foundation.IAsyncOperation <Windows.Devices.Sms.SmsSendMessageResult>  SendMessageAndGetResultAsync(ISmsMessageBase message);
        event Windows.Foundation.TypedEventHandler <Windows.Devices.Sms.SmsDevice2, Object>  DeviceStatusChanged;
    }




    [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
    [marshaling_behavior(agile)]
    [dualapipartition(0x6020000)]
    [deprecated("SmsReceivedEventDetails may be altered or unavailable for releases after Windows 10. Instead, use SmsMessageReceivedTriggerDetails.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
    [interface_name("Windows.Devices.Sms.ISmsReceivedEventDetails", 5bb50f15-e46d-4c82-847d-5a0304c1d53d)]
    runtimeclass SmsReceivedEventDetails
    {
        [deprecated("SmsReceivedEventDetails may be altered or unavailable for releases after Windows 10. Instead, use SmsMessageReceivedTriggerDetails.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        String DeviceId{ get; };
        [deprecated("SmsReceivedEventDetails may be altered or unavailable for releases after Windows 10. Instead, use SmsMessageReceivedTriggerDetails.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
        UInt32 MessageIndex{ get; };

        [contract(Windows.Devices.Sms.LegacySmsApiContract, 1)]
        [interface_name("Windows.Devices.Sms.ISmsReceivedEventDetails2", 40e05c86-a7b4-4771-9ae7-0b5ffb12c03a)]
        {
            [deprecated("SmsReceivedEventDetails may be altered or unavailable for releases after Windows 10. Instead, use SmsMessageReceivedTriggerDetails.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
            Windows.Devices.Sms.SmsMessageClass MessageClass{ get; };
            [deprecated("SmsReceivedEventDetails may be altered or unavailable for releases after Windows 10. Instead, use SmsMessageReceivedTriggerDetails.", deprecate, Windows.Devices.Sms.LegacySmsApiContract, 0x10000)]
            Windows.Devices.Sms.SmsBinaryMessage BinaryMessage{ get; };
        }
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [interface_name("Windows.Devices.Sms.ISmsMessageReceivedTriggerDetails", 2bcfcbd4-2657-4128-ad5f-e3877132bdb1)]
    runtimeclass SmsMessageReceivedTriggerDetails
    {
        Windows.Devices.Sms.SmsMessageType MessageType{ get; };
        Windows.Devices.Sms.SmsTextMessage2 TextMessage{ get; };
        Windows.Devices.Sms.SmsWapMessage WapMessage{ get; };
        Windows.Devices.Sms.SmsAppMessage AppMessage{ get; };
        Windows.Devices.Sms.SmsBroadcastMessage BroadcastMessage{ get; };
        Windows.Devices.Sms.SmsVoicemailMessage VoicemailMessage{ get; };
        Windows.Devices.Sms.SmsStatusMessage StatusMessage{ get; };
        void Drop();
        void Accept();
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum SmsFilterActionType
    {
        AcceptImmediately,
        Drop,
        Peek,
        Accept,
    };



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.Devices.Sms.ISmsFilterRuleFactory", 00c36508-6296-4f29-9aad-8920ceba3ce8)]
    [interface_name("Windows.Devices.Sms.ISmsFilterRule", 40e32fae-b049-4fbc-afe9-e2a610eff55c)]
    [threading(both)]
    runtimeclass SmsFilterRule
    {
        [method_name( "CreateFilterRule" )] SmsFilterRule(SmsMessageType messageType);
        Windows.Devices.Sms.SmsMessageType MessageType{ get; };
        Windows.Foundation.Collections.IVector <String>  ImsiPrefixes{ get; };
        Windows.Foundation.Collections.IVector <String>  DeviceIds{ get; };
        Windows.Foundation.Collections.IVector <String>  SenderNumbers{ get; };
        Windows.Foundation.Collections.IVector <String>  TextMessagePrefixes{ get; };
        Windows.Foundation.Collections.IVector <Int32>  PortNumbers{ get; };
        Windows.Devices.Sms.CellularClass CellularClass{ get; };
        Windows.Devices.Sms.CellularClass CellularClass{ set; };
        Windows.Foundation.Collections.IVector <Int32>  ProtocolIds{ get; };
        Windows.Foundation.Collections.IVector <Int32>  TeleserviceIds{ get; };
        Windows.Foundation.Collections.IVector <String>  WapApplicationIds{ get; };
        Windows.Foundation.Collections.IVector <String>  WapContentTypes{ get; };
        Windows.Foundation.Collections.IVector <Windows.Devices.Sms.SmsBroadcastType>  BroadcastTypes{ get; };
        Windows.Foundation.Collections.IVector <Int32>  BroadcastChannels{ get; };
    }



    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [constructor_name("Windows.Devices.Sms.ISmsFilterRulesFactory", a09924ed-6e2e-4530-9fde-465d02eed00e)]
    [interface_name("Windows.Devices.Sms.ISmsFilterRules", 4e47eafb-79cd-4881-9894-55a4135b23fa)]
    [threading(both)]
    runtimeclass SmsFilterRules
    {
        [method_name( "CreateFilterRules" )] SmsFilterRules(SmsFilterActionType actionType);
        Windows.Devices.Sms.SmsFilterActionType ActionType{ get; };
        Windows.Foundation.Collections.IVector <Windows.Devices.Sms.SmsFilterRule>  Rules{ get; };
    }


}
namespace Windows.ApplicationModel.Background
{
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [constructor_name("Windows.ApplicationModel.Background.ISmsMessageReceivedTriggerFactory", ea3ad8c8-6ba4-4ab2-8d21-bc6b09c77564)]
    [threading(both)]
    runtimeclass SmsMessageReceivedTrigger
        : [default]Windows.ApplicationModel.Background.IBackgroundTrigger
    {
        [method_name( "Create" )] SmsMessageReceivedTrigger(Windows.Devices.Sms.SmsFilterRules filterRules);
    }

}
