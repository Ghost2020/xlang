








namespace Windows.Internal.ThumbnailCache
{
    [contractversion(1)]
    [internal]
    apicontract InternalContract{};

    [flags]
    [contract(Windows.Internal.ThumbnailCache.InternalContract, 1)]
    enum ThumbnailFlags
    {
        ExtractIfNotCached,
        ReturnOnlyIfCached,
        ScaleToRequestedSize,
    };



    [marshaling_behavior(agile)]
    [contract(Windows.Internal.ThumbnailCache.InternalContract, 1)]
    [interface_name("Windows.Internal.ThumbnailCache.IThumbnailResult", 603a6214-9da4-44a6-9f96-11f73ea875d1)]
    runtimeclass ThumbnailResult
    {
        ThumbnailResult();
        Windows.Storage.Streams.IRandomAccessStream Stream{ get; };
        Windows.Foundation.Size StreamSize{ get; };
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Internal.ThumbnailCache.InternalContract, 1)]
    [interface_name("Windows.Internal.ThumbnailCache.IThumbnailCacheInternal", 6e2be37c-0df9-4b63-9108-80b1dbb51b9b)]
    runtimeclass ThumbnailCacheInternal
    {
        ThumbnailCacheInternal();
        Windows.Internal.ThumbnailCache.ThumbnailResult GetThumbnail(String path, UInt64 cacheId, ThumbnailFlags flags, Windows.Foundation.Size requestedSize);
        Windows.Storage.Streams.IRandomAccessStream GetCustomThumbnail(String path, UInt64 cacheId);
        void SetCustomThumbnail(String path, UInt64 cacheId, Windows.Storage.Streams.IRandomAccessStream value);
    }

}
namespace Windows.Internal.Storage.ThumbnailCache
{
    [flags]
    [contract(Windows.Internal.ThumbnailCache.InternalContract, 1)]
    enum ThumbnailCacheOptions
    {
        ExtractIfNotCached,
        ReturnOnlyIfCached,
        ResizeThumbnail,
        AllowSmallerSize = 4,
    };



    [contract(Windows.Internal.ThumbnailCache.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Internal.Storage.ThumbnailCache.IThumbnailResult", 277f0b63-2e83-43bd-8a09-02098e3da243)]
    runtimeclass ThumbnailResult
    {
        ThumbnailResult();
        Windows.Storage.Streams.IRandomAccessStream Stream{ get; };
        Windows.Foundation.Size Size{ get; };
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Internal.ThumbnailCache.InternalContract, 1)]
    [interface_name("Windows.Internal.Storage.ThumbnailCache.IThumbnailCache", ff41dbc3-30c7-496a-bf1b-3697b1a21f18)]
    runtimeclass ThumbnailCache
    {
        ThumbnailCache();
        Windows.Internal.Storage.ThumbnailCache.ThumbnailResult GetThumbnail(String path, UInt64 cacheId, ThumbnailCacheOptions options, Windows.Foundation.Size requestedSize);
        void SetThumbnail(String path, UInt64 cacheId, Windows.Foundation.Size size, Windows.Storage.Streams.IRandomAccessStream value);
    }

}
