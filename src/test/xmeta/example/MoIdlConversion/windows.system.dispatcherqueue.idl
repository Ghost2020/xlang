






namespace Windows.System
{
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [webhosthidden]
    enum DispatcherQueuePriority
    {
        Low = -10,
        Normal = 0,
        High = 10,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [uuid(dfa2dc9c-1a2d-4917-98f2-939af1d6e0c8)]
    delegate void DispatcherQueueHandler();


    [dualapipartition(0xa000004)]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [webhosthidden]
    [interface_name("Windows.System.IDispatcherQueueShutdownStartingEventArgs", c4724c4c-ff97-40c0-a226-cc0aaa545e89)]
    runtimeclass DispatcherQueueShutdownStartingEventArgs
    {
        Windows.Foundation.Deferral GetDeferral();
    }


    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [dualapipartition(0xa000004)]
    [interface_name("Windows.System.IDispatcherQueueTimer", 5feabb1d-a31c-4727-b1ac-37454649d56a)]
    runtimeclass DispatcherQueueTimer
    {
        Windows.Foundation.TimeSpan Interval{ get; };
        Windows.Foundation.TimeSpan Interval{ set; };
        Boolean IsRunning{ get; };
        Boolean IsRepeating{ get; };
        Boolean IsRepeating{ set; };
        void Start();
        void Stop();
        event Windows.Foundation.TypedEventHandler <Windows.System.DispatcherQueueTimer, Object>  Tick;
    }

    [dualapipartition(0xa000004)]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [static_name("Windows.System.IDispatcherQueueStatics", a96d83d7-9371-4517-9245-d0824ac12c74)]
    [interface_name("Windows.System.IDispatcherQueue", 603e88e4-a338-4ffe-a457-a5cfb9ceb899)]
    [threading(both)]
    runtimeclass DispatcherQueue
    {
        static Windows.System.DispatcherQueue GetForCurrentThread();
        Windows.System.DispatcherQueueTimer CreateTimer();
        [method_name("TryEnqueue")] Boolean TryEnqueue(DispatcherQueueHandler callback);
        [method_name("TryEnqueueWithPriority")] Boolean TryEnqueue(DispatcherQueuePriority priority, DispatcherQueueHandler callback);
        event Windows.Foundation.TypedEventHandler <Windows.System.DispatcherQueue, Windows.System.DispatcherQueueShutdownStartingEventArgs>  ShutdownStarting;
        event Windows.Foundation.TypedEventHandler <Windows.System.DispatcherQueue, Object>  ShutdownCompleted;

        [contract(Windows.Foundation.UniversalApiContract, 8)]
        [interface_name("Windows.System.IDispatcherQueue2", c822c647-30ef-506e-bd1e-a647ae6675ff)]
        {
            Boolean HasThreadAccess{ get; };
        }
    }





    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [dualapipartition(0xa000004)]
    [marshaling_behavior(agile)]
    [static_name("Windows.System.IDispatcherQueueControllerStatics", 0a6c98e0-5198-49a2-a313-3f70d1f13c27)]
    [interface_name("Windows.System.IDispatcherQueueController", 22f34e66-50db-4e36-a98d-61c01b384d20)]
    [threading(both)]
    runtimeclass DispatcherQueueController
    {
        static Windows.System.DispatcherQueueController CreateOnDedicatedThread();
        Windows.System.DispatcherQueue DispatcherQueue{ get; };
        Windows.Foundation.IAsyncAction ShutdownQueueAsync();
    }


}
