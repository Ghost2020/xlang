







namespace Windows.Media.Devices
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum AudioDeviceRole
    {
        Default,
        Communications,
    };

    [uuid(110f882f-1c05-4657-a18e-47c9b69f07ab)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface IDefaultAudioDeviceChangedEventArgs
    {
        String Id{ get; };
        Windows.Media.Devices.AudioDeviceRole Role{ get; };
    };


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    runtimeclass DefaultAudioCaptureDeviceChangedEventArgs
        : [default]Windows.Media.Devices.IDefaultAudioDeviceChangedEventArgs
    {
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    runtimeclass DefaultAudioRenderDeviceChangedEventArgs
        : [default]Windows.Media.Devices.IDefaultAudioDeviceChangedEventArgs
    {
    }

    [contract(Windows.Foundation.UniversalApiContract, 4)]
    enum SendCommandStatus
    {
        Success,
        DeviceNotAvailable,
    };


    [dualapipartition(0xa000003)]
    [contract(Windows.Foundation.UniversalApiContract, 4)]
    [marshaling_behavior(standard)]
    [interface_name("Windows.Media.Devices.IModuleCommandResult", 520d1eb4-1374-4c7d-b1e4-39dcdf3eae4e)]
    runtimeclass ModuleCommandResult
    {
        Windows.Media.Devices.SendCommandStatus Status{ get; };
        Windows.Storage.Streams.IBuffer Result{ get; };
    }



    [dualapipartition(0xa000003)]
    [contract(Windows.Foundation.UniversalApiContract, 4)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.Media.Devices.IAudioDeviceModulesManagerFactory", 8db03670-e64d-4773-96c0-bc7ebf0e063f)]
    [interface_name("Windows.Media.Devices.IAudioDeviceModulesManager", 6aa40c4d-960a-4d1c-b318-0022604547ed)]
    [threading(both)]
    runtimeclass AudioDeviceModulesManager
    {
        [method_name( "Create" )] AudioDeviceModulesManager(String deviceId);
        event Windows.Foundation.TypedEventHandler <Windows.Media.Devices.AudioDeviceModulesManager, Windows.Media.Devices.AudioDeviceModuleNotificationEventArgs>  ModuleNotificationReceived;
        Windows.Foundation.Collections.IVectorView <Windows.Media.Devices.AudioDeviceModule>  FindAllById(String moduleId);
        Windows.Foundation.Collections.IVectorView <Windows.Media.Devices.AudioDeviceModule>  FindAll();
    }

    [contract(Windows.Foundation.UniversalApiContract, 4)]
    [marshaling_behavior(agile)]
    [dualapipartition(0xa000003)]
    [interface_name("Windows.Media.Devices.IAudioDeviceModuleNotificationEventArgs", e3e3ccaf-224c-48be-956b-9a13134e96e8)]
    runtimeclass AudioDeviceModuleNotificationEventArgs
    {
        Windows.Media.Devices.AudioDeviceModule Module{ get; };
        Windows.Storage.Streams.IBuffer NotificationData{ get; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 4)]
    [interface_name("Windows.Media.Devices.IAudioDeviceModule", 86cfac36-47c1-4b33-9852-8773ec4be123)]
    runtimeclass AudioDeviceModule
    {
        String ClassId{ get; };
        String DisplayName{ get; };
        UInt32 InstanceId{ get; };
        UInt32 MajorVersion{ get; };
        UInt32 MinorVersion{ get; };
        Windows.Foundation.IAsyncOperation <Windows.Media.Devices.ModuleCommandResult>  SendCommandAsync(Windows.Storage.Streams.IBuffer Command);
    }



    [marshaling_behavior(agile)]
    [dualapipartition(0x1)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.Media.Devices.IMediaDeviceStatics", aa2d9a40-909f-4bba-bf8b-0c0d296f14f0)]
    [threading(mta)]
    runtimeclass MediaDevice
    {
        static String GetAudioCaptureSelector();
        static String GetAudioRenderSelector();
        static String GetVideoCaptureSelector();
        static String GetDefaultAudioCaptureId(AudioDeviceRole role);
        static String GetDefaultAudioRenderId(AudioDeviceRole role);
        static event Windows.Foundation.TypedEventHandler <Object, Windows.Media.Devices.DefaultAudioCaptureDeviceChangedEventArgs>  DefaultAudioCaptureDeviceChanged;
        static event Windows.Foundation.TypedEventHandler <Object, Windows.Media.Devices.DefaultAudioRenderDeviceChangedEventArgs>  DefaultAudioRenderDeviceChanged;
    }

}
