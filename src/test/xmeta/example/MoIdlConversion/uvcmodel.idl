





namespace Windows.Internal.Shell
{
    [contractversion(1)]
    [internal]
    apicontract UvcContract{};

    [contract(Windows.Internal.Shell.UvcContract, 1)]
    enum DefaultEndpointRole
    {
        Console,
        Multimedia,
        Communications,
        LAST,
    };

    [uuid(ff0ace50-320b-44c7-b6ae-6e38b8a8615e)]
    [contract(Windows.Internal.Shell.UvcContract, 1)]
    interface IUvcVolumeGroup
    {
        String VolumeGroupId{ get; };
        String VolumeGroupLabel{ get; };
        String VolumeGroupGlyph{ get; };
        String VolumeGroupMutedGlyph{ get; };
        String VolumeGroupMutedVibrateOnGlyph{ get; };
        String VolumeGroupMutedVibrateOffGlyph{ get; };
        Int32 MaximumVolumeLevel{ get; };
        Boolean IsExclusiveDisplayWhenActive{ get; };
        Boolean IsLinkedToSystemRingerToggle{ get; };
        Boolean IsDefaultMediaVolumeGroup{ get; };
        Boolean IsMuted{ get; };
        Boolean IsMuted{ set; };
        Single VolumeLevel{ get; };
        Single VolumeLevel{ set; };
        event Windows.Foundation.EventHandler <Object>  IsMutedChanged;
        event Windows.Foundation.EventHandler <Object>  VolumeLevelChanged;
    };

    [contract(Windows.Internal.Shell.UvcContract, 1)]
    [marshaling_behavior(agile)]
    runtimeclass UvcVolumeGroup
        : [default]Windows.Internal.Shell.IUvcVolumeGroup
    {
    }

    [uuid(879f673c-28c1-4eb4-8079-7acc4a5f26e2)]
    [contract(Windows.Internal.Shell.UvcContract, 1)]
    interface IUvcEndpoint
    {
        Boolean IsPeripheral{ get; };
        Boolean IsHandsFreeProfileEndpoint{ get; };
        Int32 FormFactor{ get; };
        String EndpointLabel{ get; };
        String EndpointID{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Internal.Shell.UvcVolumeGroup>  VolumeGroups{ get; };
        String PriorityVolumeGroupId{ get; };
        event Windows.Foundation.EventHandler <Object>  VolumeGroupsChanged;
    };

    [marshaling_behavior(agile)]
    [contract(Windows.Internal.Shell.UvcContract, 1)]
    runtimeclass UvcEndpoint
        : [default]Windows.Internal.Shell.IUvcEndpoint
    {
    }

    [contract(Windows.Internal.Shell.UvcContract, 1)]
    [uuid(aebfed31-1dcf-4a80-836c-45f957c99f93)]
    interface IUvcModel
    {
        Windows.Foundation.Collections.IVectorView <Windows.Internal.Shell.UvcEndpoint>  AvailableEndpoints{ get; };
        Boolean IsRingerOn{ get; };
        Boolean IsRingerOn{ set; };
        Boolean IsVibrateOn{ get; };
        Boolean IsVibrateOn{ set; };
        void SetDefaultRenderEndpointForRole(UvcEndpoint endpoint, DefaultEndpointRole role);
        void GetDefaultRenderEndpointForRole(DefaultEndpointRole role, out UvcEndpoint endpoint);
        event Windows.Foundation.EventHandler <Object>  AvailableEndpointsChanged;
        event Windows.Foundation.EventHandler <Object>  DefaultEndpointsChanged;
        event Windows.Foundation.EventHandler <Object>  RingerVibrateStateChanged;
    };

    [marshaling_behavior(agile)]
    [contract(Windows.Internal.Shell.UvcContract, 1)]
    [threading(both)]
    runtimeclass UvcModel
        : [default]Windows.Internal.Shell.IUvcModel
    {
        UvcModel();
    }

}
