










namespace Windows.Media.Protection.PlayReady
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [deprecated("NDCertificateType is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    enum NDCertificateType
    {
        Unknown,
        PC,
        Device,
        Domain,
        Issuer,
        CrlSigner,
        Service,
        Silverlight,
        Application,
        Metering,
        KeyFileSigner,
        Server,
        LicenseSigner,
    };

    [deprecated("NDCertificatePlatformID is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum NDCertificatePlatformID
    {
        Windows,
        OSX,
        WindowsOnARM,
        WindowsMobile7 = 5,
        iOSOnARM,
        XBoxOnPPC,
        WindowsPhone8OnARM,
        WindowsPhone8OnX86,
        XboxOne,
        AndroidOnARM,
        WindowsPhone81OnARM,
        WindowsPhone81OnX86,
    };

    [deprecated("NDCertificateFeature is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum NDCertificateFeature
    {
        Transmitter = 1,
        Receiver,
        SharedCertificate,
        SecureClock,
        AntiRollBackClock,
        CRLS = 9,
        PlayReady3Features = 13,
    };

    [deprecated("NDProximityDetectionType is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum NDProximityDetectionType
    {
        UDP = 1,
        TCP,
        TransportAgnostic = 4,
    };

    [deprecated("NDMediaStreamType is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum NDMediaStreamType
    {
        Audio = 1,
        Video,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [deprecated("NDContentIDType is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    enum NDContentIDType
    {
        KeyID = 1,
        PlayReadyObject,
        Custom,
    };

    [deprecated("NDClosedCaptionFormat is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum NDClosedCaptionFormat
    {
        ATSC,
        SCTE20,
        Unknown,
    };

    [deprecated("NDStartAsyncOptions is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum NDStartAsyncOptions
    {
        MutualAuthentication = 1,
        WaitForLicenseDescriptor,
    };

    [uuid(2d223d65-c4b6-4438-8d46-b96e6d0fb21f)]
    [deprecated("INDDownloadEngine is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface INDDownloadEngine
    {
        [deprecated("INDDownloadEngine is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        void Open(Windows.Foundation.Uri uri, UInt8[] sessionIDBytes);
        [deprecated("INDDownloadEngine is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        void Pause();
        [deprecated("INDDownloadEngine is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        void Resume();
        [deprecated("INDDownloadEngine is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        void Close();
        [deprecated("INDDownloadEngine is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        void Seek(Windows.Foundation.TimeSpan startPosition);
        [deprecated("INDDownloadEngine is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Boolean CanSeek{ get; };
        [deprecated("INDDownloadEngine is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        UInt32 BufferFullMinThresholdInSamples{ get; };
        [deprecated("INDDownloadEngine is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        UInt32 BufferFullMaxThresholdInSamples{ get; };
        [deprecated("INDDownloadEngine is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Media.Protection.PlayReady.NDDownloadEngineNotifier Notifier{ get; };
    };

    [deprecated("NDDownloadEngineNotifier is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    runtimeclass NDDownloadEngineNotifier
        : [default]Windows.Media.Protection.PlayReady.INDDownloadEngineNotifier
    {
        NDDownloadEngineNotifier();
    }

    [uuid(d720b4d4-f4b8-4530-a809-9193a571e7fc)]
    [deprecated("INDDownloadEngineNotifier is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface INDDownloadEngineNotifier
    {
        [deprecated("INDDownloadEngineNotifier is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        void OnStreamOpened();
        [deprecated("INDDownloadEngineNotifier is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        void OnPlayReadyObjectReceived(UInt8[] dataBytes);
        [deprecated("INDDownloadEngineNotifier is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        void OnContentIDReceived(INDLicenseFetchDescriptor licenseFetchDescriptor);
        [deprecated("INDDownloadEngineNotifier is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        void OnDataReceived(UInt8[] dataBytes, UInt32 bytesReceived);
        [deprecated("INDDownloadEngineNotifier is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        void OnEndOfStream();
        [deprecated("INDDownloadEngineNotifier is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        void OnNetworkError();
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(5498d33a-e686-4935-a567-7ca77ad20fa4)]
    [deprecated("INDLicenseFetchDescriptor is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    interface INDLicenseFetchDescriptor
    {
        [deprecated("INDLicenseFetchDescriptor is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Media.Protection.PlayReady.NDContentIDType ContentIDType{ get; };
        [deprecated("INDLicenseFetchDescriptor is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        UInt8[] ContentID{ get; };
        [deprecated("INDLicenseFetchDescriptor is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Media.Protection.PlayReady.INDCustomData LicenseFetchChallengeCustomData{ get; };
        [deprecated("INDLicenseFetchDescriptor is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Media.Protection.PlayReady.INDCustomData LicenseFetchChallengeCustomData{ set; };
    };

    [uuid(f5cb0fdc-2d09-4f19-b5e1-76a0b3ee9267)]
    [deprecated("INDCustomData is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface INDCustomData
    {
        [deprecated("INDCustomData is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        UInt8[] CustomDataTypeID{ get; };
        [deprecated("INDCustomData is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        UInt8[] CustomData{ get; };
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(e0baa198-9796-41c9-8695-59437e67e66a)]
    [deprecated("INDStreamParser is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    interface INDStreamParser
    {
        [deprecated("INDStreamParser is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        void ParseData(UInt8[] dataBytes);
        [deprecated("INDStreamParser is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        [return_name("streamID")] UInt32 GetStreamInformation(Windows.Media.Core.IMediaStreamDescriptor descriptor, out NDMediaStreamType streamType);
        [deprecated("INDStreamParser is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        void BeginOfStream();
        [deprecated("INDStreamParser is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        void EndOfStream();
        [deprecated("INDStreamParser is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Media.Protection.PlayReady.NDStreamParserNotifier Notifier{ get; };
    };

    [deprecated("NDStreamParserNotifier is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    runtimeclass NDStreamParserNotifier
        : [default]Windows.Media.Protection.PlayReady.INDStreamParserNotifier
    {
        NDStreamParserNotifier();
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(c167acd0-2ce6-426c-ace5-5e9275fea715)]
    [deprecated("INDStreamParserNotifier is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    interface INDStreamParserNotifier
    {
        [deprecated("INDStreamParserNotifier is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        void OnContentIDReceived(INDLicenseFetchDescriptor licenseFetchDescriptor);
        [deprecated("INDStreamParserNotifier is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        void OnMediaStreamDescriptorCreated(Windows.Foundation.Collections.IVector <Windows.Media.Core.AudioStreamDescriptor>  audioStreamDescriptors, Windows.Foundation.Collections.IVector <Windows.Media.Core.VideoStreamDescriptor>  videoStreamDescriptors);
        [deprecated("INDStreamParserNotifier is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        void OnSampleParsed(UInt32 streamID, NDMediaStreamType streamType, Windows.Media.Core.MediaStreamSample streamSample, Int64 pts, NDClosedCaptionFormat ccFormat, UInt8[] ccDataBytes);
        [deprecated("INDStreamParserNotifier is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        void OnBeginSetupDecryptor(Windows.Media.Core.IMediaStreamDescriptor descriptor, Guid keyID, UInt8[] proBytes);
    };

    [deprecated("INDSendResult is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [uuid(e3685517-a584-479d-90b7-d689c7bf7c80)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface INDSendResult
    {
        [deprecated("INDSendResult is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        UInt8[] Response{ get; };
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [deprecated("INDMessenger is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [uuid(d42df95d-a75b-47bf-8249-bc83820da38a)]
    interface INDMessenger
    {
        [deprecated("INDMessenger is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Foundation.IAsyncOperation <Windows.Media.Protection.PlayReady.INDSendResult>  SendRegistrationRequestAsync(UInt8[] sessionIDBytes, UInt8[] challengeDataBytes);
        [deprecated("INDMessenger is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Foundation.IAsyncOperation <Windows.Media.Protection.PlayReady.INDSendResult>  SendProximityDetectionStartAsync(NDProximityDetectionType pdType, UInt8[] transmitterChannelBytes, UInt8[] sessionIDBytes, UInt8[] challengeDataBytes);
        [deprecated("INDMessenger is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Foundation.IAsyncOperation <Windows.Media.Protection.PlayReady.INDSendResult>  SendProximityDetectionResponseAsync(NDProximityDetectionType pdType, UInt8[] transmitterChannelBytes, UInt8[] sessionIDBytes, UInt8[] responseDataBytes);
        [deprecated("INDMessenger is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Foundation.IAsyncOperation <Windows.Media.Protection.PlayReady.INDSendResult>  SendLicenseFetchRequestAsync(UInt8[] sessionIDBytes, UInt8[] challengeDataBytes);
    };


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [deprecated("NDTCPMessenger is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [constructor_name("Windows.Media.Protection.PlayReady.INDTCPMessengerFactory", 7dd85cfe-1b99-4f68-8f82-8177f7cedf2b)]
    runtimeclass NDTCPMessenger
        : [default]Windows.Media.Protection.PlayReady.INDMessenger
    {
        [deprecated("INDTCPMessengerFactory is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        [method_name( "CreateInstance" )] NDTCPMessenger(String remoteHostName, UInt32 remoteHostPort);
    }

    [deprecated("INDTransmitterProperties is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(e536af23-ac4f-4adc-8c66-4ff7c2702dd6)]
    interface INDTransmitterProperties
    {
        [deprecated("INDTransmitterProperties is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Media.Protection.PlayReady.NDCertificateType CertificateType{ get; };
        [deprecated("INDTransmitterProperties is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Media.Protection.PlayReady.NDCertificatePlatformID PlatformIdentifier{ get; };
        [deprecated("INDTransmitterProperties is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Media.Protection.PlayReady.NDCertificateFeature[] SupportedFeatures{ get; };
        [deprecated("INDTransmitterProperties is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        UInt32 SecurityLevel{ get; };
        [deprecated("INDTransmitterProperties is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        UInt32 SecurityVersion{ get; };
        [deprecated("INDTransmitterProperties is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Foundation.DateTime ExpirationDate{ get; };
        [deprecated("INDTransmitterProperties is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        UInt8[] ClientID{ get; };
        [deprecated("INDTransmitterProperties is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        UInt8[] ModelDigest{ get; };
        [deprecated("INDTransmitterProperties is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        String ModelManufacturerName{ get; };
        [deprecated("INDTransmitterProperties is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        String ModelName{ get; };
        [deprecated("INDTransmitterProperties is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        String ModelNumber{ get; };
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [deprecated("INDStartResult is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [uuid(79f6e96e-f50f-4015-8ba4-c2bc344ebd4e)]
    interface INDStartResult
    {
        [deprecated("INDStartResult is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Media.Core.MediaStreamSource MediaStreamSource{ get; };
    };

    [uuid(21d39698-aa62-45ff-a5ff-8037e5433825)]
    [deprecated("INDLicenseFetchResult is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface INDLicenseFetchResult
    {
        [deprecated("INDLicenseFetchResult is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Media.Protection.PlayReady.INDCustomData ResponseCustomData{ get; };
    };


    [deprecated("NDLicenseFetchDescriptor is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [constructor_name("Windows.Media.Protection.PlayReady.INDLicenseFetchDescriptorFactory", d0031202-cfac-4f00-ae6a-97af80b848f2)]
    runtimeclass NDLicenseFetchDescriptor
        : [default]Windows.Media.Protection.PlayReady.INDLicenseFetchDescriptor
    {
        [deprecated("INDLicenseFetchDescriptorFactory is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        [method_name( "CreateInstance" )] NDLicenseFetchDescriptor(NDContentIDType contentIDType, UInt8[] contentIDBytes, INDCustomData licenseFetchChallengeCustomData);
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [deprecated("INDRegistrationCompletedEventArgs is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [uuid(9e39b64d-ab5b-4905-acdc-787a77c6374d)]
    interface INDRegistrationCompletedEventArgs
    {
        [deprecated("INDRegistrationCompletedEventArgs is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Media.Protection.PlayReady.INDCustomData ResponseCustomData{ get; };
        [deprecated("INDRegistrationCompletedEventArgs is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Media.Protection.PlayReady.INDTransmitterProperties TransmitterProperties{ get; };
        [deprecated("INDRegistrationCompletedEventArgs is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Boolean TransmitterCertificateAccepted{ get; };
        [deprecated("INDRegistrationCompletedEventArgs is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Boolean TransmitterCertificateAccepted{ set; };
    };


    [deprecated("NDCustomData is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [constructor_name("Windows.Media.Protection.PlayReady.INDCustomDataFactory", d65405ab-3424-4833-8c9a-af5fdeb22872)]
    runtimeclass NDCustomData
        : [default]Windows.Media.Protection.PlayReady.INDCustomData
    {
        [deprecated("INDCustomDataFactory is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        [method_name( "CreateInstance" )] NDCustomData(UInt8[] customDataTypeIDBytes, UInt8[] customDataBytes);
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [deprecated("INDProximityDetectionCompletedEventArgs is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [uuid(2a706328-da25-4f8c-9eb7-5d0fc3658bca)]
    interface INDProximityDetectionCompletedEventArgs
    {
        [deprecated("INDProximityDetectionCompletedEventArgs is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        UInt32 ProximityDetectionRetryCount{ get; };
    };

    [deprecated("INDLicenseFetchCompletedEventArgs is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(1ee30a1a-11b2-4558-8865-e3a516922517)]
    interface INDLicenseFetchCompletedEventArgs
    {
        [deprecated("INDLicenseFetchCompletedEventArgs is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Media.Protection.PlayReady.INDCustomData ResponseCustomData{ get; };
    };


    [deprecated("NDClient is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [constructor_name("Windows.Media.Protection.PlayReady.INDClientFactory", 3e53dd62-fee8-451f-b0d4-f706cca3e037)]
    [interface_name("Windows.Media.Protection.PlayReady.INDClient", 3bd6781b-61b8-46e2-99a5-8abcb6b9f7d6)]
    runtimeclass NDClient
    {
        [deprecated("INDClientFactory is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        [method_name( "CreateInstance" )] NDClient(INDDownloadEngine downloadEngine, INDStreamParser streamParser, INDMessenger pMessenger);
        [deprecated("INDClient is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        event Windows.Foundation.TypedEventHandler <Windows.Media.Protection.PlayReady.NDClient, Windows.Media.Protection.PlayReady.INDRegistrationCompletedEventArgs>  RegistrationCompleted;
        [deprecated("INDClient is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        event Windows.Foundation.TypedEventHandler <Windows.Media.Protection.PlayReady.NDClient, Windows.Media.Protection.PlayReady.INDProximityDetectionCompletedEventArgs>  ProximityDetectionCompleted;
        [deprecated("INDClient is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        event Windows.Foundation.TypedEventHandler <Windows.Media.Protection.PlayReady.NDClient, Windows.Media.Protection.PlayReady.INDLicenseFetchCompletedEventArgs>  LicenseFetchCompleted;
        [deprecated("INDClient is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        event Windows.Foundation.TypedEventHandler <Windows.Media.Protection.PlayReady.NDClient, Object>  ReRegistrationNeeded;
        [deprecated("INDClient is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        event Windows.Foundation.TypedEventHandler <Windows.Media.Protection.PlayReady.NDClient, Windows.Media.Protection.PlayReady.INDClosedCaptionDataReceivedEventArgs>  ClosedCaptionDataReceived;
        [deprecated("INDClient is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Foundation.IAsyncOperation <Windows.Media.Protection.PlayReady.INDStartResult>  StartAsync(Windows.Foundation.Uri contentUrl, UInt32 startAsyncOptions, INDCustomData registrationCustomData, INDLicenseFetchDescriptor licenseFetchDescriptor);
        [deprecated("INDClient is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Foundation.IAsyncOperation <Windows.Media.Protection.PlayReady.INDLicenseFetchResult>  LicenseFetchAsync(INDLicenseFetchDescriptor licenseFetchDescriptor);
        [deprecated("INDClient is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Foundation.IAsyncAction ReRegistrationAsync(INDCustomData registrationCustomData);
        [deprecated("INDClient is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        void Close();
    }

    [uuid(4738d29f-c345-4649-8468-b8c5fc357190)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [deprecated("INDClosedCaptionDataReceivedEventArgs is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    interface INDClosedCaptionDataReceivedEventArgs
    {
        [deprecated("INDClosedCaptionDataReceivedEventArgs is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Media.Protection.PlayReady.NDClosedCaptionFormat ClosedCaptionDataFormat{ get; };
        [deprecated("INDClosedCaptionDataReceivedEventArgs is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Int64 PresentationTimestamp{ get; };
        [deprecated("INDClosedCaptionDataReceivedEventArgs is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        UInt8[] ClosedCaptionData{ get; };
    };


    [uuid(d8f0bef8-91d2-4d47-a3f9-eaff4edb729f)]
    [deprecated("INDStorageFileHelper is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface INDStorageFileHelper
    {
        [deprecated("INDStorageFileHelper is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
        Windows.Foundation.Collections.IVector <String>  GetFileURLs(Windows.Storage.IStorageFile file);
    };

    [deprecated("NDStorageFileHelper is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x30000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    runtimeclass NDStorageFileHelper
        : [default]Windows.Media.Protection.PlayReady.INDStorageFileHelper
    {
        NDStorageFileHelper();
    }

}
