









namespace WindowsInternal.Shell.UnifiedTile.CuratedTileCollections
{
    [contractversion(1)]
    [internal]
    apicontract AppInstallBrokerInternalContract{};

    [flags]
    [contract(WindowsInternal.Shell.UnifiedTile.CuratedTileCollections.AppInstallBrokerInternalContract, 1)]
    enum InstallOptions
    {
        None,
        UserInteractive,
        AllowDownloadOnAnyNetwork,
    };

    [contract(WindowsInternal.Shell.UnifiedTile.CuratedTileCollections.AppInstallBrokerInternalContract, 1)]
    [flags]
    enum EntitlementOptions
    {
        None,
        Device,
        User,
    };

    [contract(WindowsInternal.Shell.UnifiedTile.CuratedTileCollections.AppInstallBrokerInternalContract, 1)]
    [flags]
    enum AppInstallOperation
    {
        Cancel,
        Pause,
        Restart,
    };


    [marshaling_behavior(agile)]
    [contract(WindowsInternal.Shell.UnifiedTile.CuratedTileCollections.AppInstallBrokerInternalContract, 1)]
    [static_name("WindowsInternal.Shell.UnifiedTile.CuratedTileCollections.IAppInstallBroker", 42aabeab-4136-486c-a98c-2519214678f7)]
    [threading(both)]
    runtimeclass AppInstallBroker
    {
        static void DeletePlaceholderLogoFile(String path);
        static void EnsurePlaceholderLogoFolder();
        static void InstallAppWithPackageFamilyName(String packageFamilyName, String storeCampaignId, String clientId, String correlationVector, InstallOptions installOptions, EntitlementOptions entitlementOptions);
        static void InstallAppWithProductId(String productId, String skuId, String storeCampaignId, String clientId, String correlationVector, InstallOptions installOptions, EntitlementOptions entitlementOptions);
        static Windows.Foundation.Collections.IVectorView <ContentManagement.AppInstallInfoRecord>  InstallAppsInBatch(String clientId, String correlationVector, EntitlementOptions entitlementOptions, Windows.Foundation.Collections.IVector <ContentManagement.AppInstallInfoRecord>  appRecord);
        static Windows.Foundation.Collections.IVectorView <ContentManagement.AppInstallInfoRecord>  InstallAppsInBatchWithPackageFamilyName(String clientId, String correlationVector, EntitlementOptions entitlementOptions, Windows.Foundation.Collections.IVector <String>  appPFNs);
        static void UpdateAppInstallWithPackageFamilyName(String packageFamilyName, String clientId, AppInstallOperation operation);
        static void UpdateAppInstallWithProductId(String productId, String clientId, AppInstallOperation operation);
        static Windows.Foundation.Collections.IVectorView <UInt64>  GetAppsSize(Windows.Foundation.Collections.IVectorView <String>  aumids);
        static void GetDiskSpaceInBytes(out UInt64 freeDiskSpace, out UInt64 totalDiskSpace);
        static Windows.Foundation.Collections.IVectorView <Windows.ApplicationModel.Store.Preview.InstallControl.Internal.AppData>  GetAppDataFromStore(Windows.Foundation.Collections.IVectorView <String>  packageFamilyNames);
        static Boolean IsAppInInstallQueue(String productId, Boolean isProductId);
        static void MoveAppInstallToFrontOfQueue(String productId, String correlationVector);
        static String MoveFileToPlaceholderLogoFolder(String sourcePath, String destinationFileName);
        static void UninstallAppForUser(String aumid, Windows.System.User user);
        static void UninstallPackageForUser(String packageFullName, Windows.System.User user);
        static void DeletePlaceholderTileLogoFolder(String path);
    }

}
