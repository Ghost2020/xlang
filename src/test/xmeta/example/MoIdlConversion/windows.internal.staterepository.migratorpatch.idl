








namespace Windows.Internal.StateRepository
{
    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [contract(Windows.Internal.StateRepository.StateRepositoryContract, 1)]
    [static_name("Windows.Internal.StateRepository.IMigratorPatchStatics", 4b9574b1-b903-4161-ac0c-cb0d0d4b312d)]
    [interface_name("Windows.Internal.StateRepository.IMigratorPatch", b2ebd76a-5c0a-4d5e-979e-13b82da8911e)]
    [threading(both)]
    runtimeclass MigratorPatch
    {
        static Boolean Exists(Int64 migratorPatchID);
        static Boolean ExistsByPatchId(String PatchId);
        static Windows.Internal.StateRepository.MigratorPatch Get(Int64 migratorPatchID);
        static Windows.Internal.StateRepository.MigratorPatch TryGet(Int64 migratorPatchID);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.MigratorPatch>  Find();
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.MigratorPatch>  FindByPatchId(String PatchId);
        MigratorPatch();
        Int64 _MigratorPatchID{ get; };
        Int64 _MigratorPatchID{ set; };
        UInt64 _Revision{ get; };
        UInt64 _Revision{ set; };
        String PatchId{ get; };
        String PatchId{ set; };
        Int32 HResult{ get; };
        Int32 HResult{ set; };
        Int32 StateRepositoryVersion{ get; };
        Int32 StateRepositoryVersion{ set; };
        Windows.Foundation.DateTime When{ get; };
        Windows.Foundation.DateTime When{ set; };
        Boolean Is_DictionaryNull{ get; };
        void Set_DictionaryToNull();
        void Get_Dictionary(out UInt8[] value);
        void Set_Dictionary(UInt8[] value);
        Windows.Foundation.Collections.IPropertySet Get_DictionaryAsPropertySet();
    }


}
