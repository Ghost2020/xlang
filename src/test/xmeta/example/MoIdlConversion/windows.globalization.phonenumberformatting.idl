






namespace Windows.Globalization.PhoneNumberFormatting
{
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    enum PhoneNumberFormat
    {
        E164,
        International,
        National,
        Rfc3966,
    };

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    enum PredictedPhoneNumberKind
    {
        FixedLine,
        Mobile,
        FixedLineOrMobile,
        TollFree,
        PremiumRate,
        SharedCost,
        Voip,
        PersonalNumber,
        Pager,
        UniversalAccountNumber,
        Voicemail,
        Unknown,
    };

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    enum PhoneNumberParseResult
    {
        Valid,
        NotANumber,
        InvalidCountryCode,
        TooShort,
        TooLong,
    };

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    enum PhoneNumberMatchResult
    {
        NoMatch,
        ShortNationalSignificantNumberMatch,
        NationalSignificantNumberMatch,
        ExactMatch,
    };


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [static_name("Windows.Globalization.PhoneNumberFormatting.IPhoneNumberInfoStatics", 5b3f4f6a-86a9-40e9-8649-6d61161928d4)]
    [constructor_name("Windows.Globalization.PhoneNumberFormatting.IPhoneNumberInfoFactory", 8202b964-adaa-4cff-8fcf-17e7516a28ff)]
    [interface_name("Windows.Globalization.PhoneNumberFormatting.IPhoneNumberInfo", 1c7ce4dd-c8b4-4ea3-9aef-b342e2c5b417)]
    [threading(both)]
    runtimeclass PhoneNumberInfo
        : Windows.Foundation.IStringable
    {
        [method_name("TryParse")] [return_name("result")] static Windows.Globalization.PhoneNumberFormatting.PhoneNumberParseResult TryParse(String input, out PhoneNumberInfo phoneNumber);
        [method_name("TryParseWithRegion")] [return_name("result")] static Windows.Globalization.PhoneNumberFormatting.PhoneNumberParseResult TryParse(String input, String regionCode, out PhoneNumberInfo phoneNumber);
        [method_name( "Create" )] PhoneNumberInfo(String number);
        Int32 CountryCode{ get; };
        String PhoneNumber{ get; };
        Int32 GetLengthOfGeographicalAreaCode();
        String GetNationalSignificantNumber();
        Int32 GetLengthOfNationalDestinationCode();
        Windows.Globalization.PhoneNumberFormatting.PredictedPhoneNumberKind PredictNumberKind();
        String GetGeographicRegionCode();
        Windows.Globalization.PhoneNumberFormatting.PhoneNumberMatchResult CheckNumberMatch(PhoneNumberInfo otherNumber);
    }





    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [marshaling_behavior(agile)]
    [static_name("Windows.Globalization.PhoneNumberFormatting.IPhoneNumberFormatterStatics", 5ca6f931-84d9-414b-ab4e-a0552c878602)]
    [interface_name("Windows.Globalization.PhoneNumberFormatting.IPhoneNumberFormatter", 1556b49e-bad4-4b4a-900d-4407adb7c981)]
    [threading(both)]
    runtimeclass PhoneNumberFormatter
    {
        PhoneNumberFormatter();
        static void TryCreate(String regionCode, out PhoneNumberFormatter phoneNumber);
        static Int32 GetCountryCodeForRegion(String regionCode);
        static String GetNationalDirectDialingPrefixForRegion(String regionCode, Boolean stripNonDigit);
        static String WrapWithLeftToRightMarkers(String number);
        [method_name("Format")] String Format(PhoneNumberInfo number);
        [method_name("FormatWithOutputFormat")] String Format(PhoneNumberInfo number, PhoneNumberFormat numberFormat);
        String FormatPartialString(String number);
        String FormatString(String number);
        String FormatStringWithLeftToRightMarkers(String number);
    }

}
