











namespace Windows.ApplicationModel.UserActivities
{
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    enum UserActivityState
    {
        New,
        Published,
    };



    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.ApplicationModel.UserActivities.IUserActivityAttributionFactory", e62bd252-c566-4f42-9974-916c4d76377e)]
    [interface_name("Windows.ApplicationModel.UserActivities.IUserActivityAttribution", 34a5c8b5-86dd-4aec-a491-6a4faea5d22e)]
    [threading(both)]
    runtimeclass UserActivityAttribution
    {
        [method_name( "CreateWithUri" )] UserActivityAttribution(Windows.Foundation.Uri iconUri);
        UserActivityAttribution();
        Windows.Foundation.Uri IconUri{ get; };
        Windows.Foundation.Uri IconUri{ set; };
        String AlternateText{ get; };
        String AlternateText{ set; };
        Boolean AddImageQuery{ get; };
        Boolean AddImageQuery{ set; };
    }

    [uuid(b399e5ad-137f-409d-822d-e1af27ce08dc)]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    interface IUserActivityContentInfo
    {
        String ToJson();
    };


    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [marshaling_behavior(agile)]
    [static_name("Windows.ApplicationModel.UserActivities.IUserActivityContentInfoStatics", 9988c34b-0386-4bc9-968a-8200b004144f)]
    [threading(both)]
    runtimeclass UserActivityContentInfo
        : [default]Windows.ApplicationModel.UserActivities.IUserActivityContentInfo
    {
        static Windows.ApplicationModel.UserActivities.UserActivityContentInfo FromJson(String value);
    }



    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.UserActivities.IUserActivityVisualElements", 94757513-262f-49ef-bbbf-9b75d2e85250)]
    runtimeclass UserActivityVisualElements
    {
        String DisplayText{ get; };
        String DisplayText{ set; };
        String Description{ get; };
        String Description{ set; };
        Windows.UI.Color BackgroundColor{ get; };
        Windows.UI.Color BackgroundColor{ set; };
        Windows.ApplicationModel.UserActivities.UserActivityAttribution Attribution{ get; };
        Windows.ApplicationModel.UserActivities.UserActivityAttribution Attribution{ set; };
        Windows.UI.Shell.IAdaptiveCard Content{ set; };
        Windows.UI.Shell.IAdaptiveCard Content{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [interface_name("Windows.ApplicationModel.UserActivities.IUserActivityVisualElements2", caae7fc7-3eef-4359-825c-9d51b9220de3)]
        {
            String AttributionDisplayText{ get; };
            String AttributionDisplayText{ set; };
        }
    }


    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.ApplicationModel.UserActivities.IUserActivitySession", ae434d78-24fa-44a3-ad48-6eda61aa1924)]
    runtimeclass UserActivitySession
        : Windows.Foundation.IClosable
    {
        String ActivityId{ get; };
    }





    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [interface_name("Windows.ApplicationModel.UserActivities.IUserActivity", fc103e9e-2cab-4d36-aea2-b4bb556cef0f)]
    [threading(both)]
    runtimeclass UserActivity
    {

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [constructor_name("Windows.ApplicationModel.UserActivities.IUserActivityFactory", 7c385758-361d-4a67-8a3b-34ca2978f9a3)]
        {
            [method_name( "CreateWithActivityId" )] UserActivity(String activityId);
        }

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [static_name("Windows.ApplicationModel.UserActivities.IUserActivityStatics", 8c8fd333-0e09-47f6-9ac7-95cf5c39367b)]
        {
            static Windows.ApplicationModel.UserActivities.UserActivity TryParseFromJson(String json);
            static Windows.Foundation.Collections.IVector <Windows.ApplicationModel.UserActivities.UserActivity>  TryParseFromJsonArray(String json);
            static String ToJsonArray(Windows.Foundation.Collections.IIterable <Windows.ApplicationModel.UserActivities.UserActivity>  activities);
        }
        Windows.ApplicationModel.UserActivities.UserActivityState State{ get; };
        String ActivityId{ get; };
        Windows.ApplicationModel.UserActivities.UserActivityVisualElements VisualElements{ get; };
        Windows.Foundation.Uri ContentUri{ get; };
        Windows.Foundation.Uri ContentUri{ set; };
        String ContentType{ get; };
        String ContentType{ set; };
        Windows.Foundation.Uri FallbackUri{ get; };
        Windows.Foundation.Uri FallbackUri{ set; };
        Windows.Foundation.Uri ActivationUri{ get; };
        Windows.Foundation.Uri ActivationUri{ set; };
        Windows.ApplicationModel.UserActivities.IUserActivityContentInfo ContentInfo{ get; };
        Windows.ApplicationModel.UserActivities.IUserActivityContentInfo ContentInfo{ set; };
        Windows.Foundation.IAsyncAction SaveAsync();
        Windows.ApplicationModel.UserActivities.UserActivitySession CreateSession();

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [interface_name("Windows.ApplicationModel.UserActivities.IUserActivity2", 9dc40c62-08c4-47ac-aa9c-2bb2221c55fd)]
        {
            String ToJson();
        }

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [interface_name("Windows.ApplicationModel.UserActivities.IUserActivity3", e7697744-e1a2-5147-8e06-55f1eeef271c)]
        {
            Boolean IsRoamable{ get; };
            Boolean IsRoamable{ set; };
        }
    }




    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 6)]
    [interface_name("Windows.ApplicationModel.UserActivities.IUserActivitySessionHistoryItem", e8d59bd3-3e5d-49fd-98d7-6da97521e255)]
    runtimeclass UserActivitySessionHistoryItem
    {
        Windows.ApplicationModel.UserActivities.UserActivity UserActivity{ get; };
        Windows.Foundation.DateTime StartTime{ get; };
        Windows.Foundation.IReference <Windows.Foundation.DateTime>  EndTime{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [static_name("Windows.ApplicationModel.UserActivities.IUserActivityChannelStatics", c8c005ab-198d-4d80-abb2-c9775ec4a729)]
    [interface_name("Windows.ApplicationModel.UserActivities.IUserActivityChannel", bac0f8b8-a0e4-483b-b948-9cbabd06070c)]
    [threading(both)]
    runtimeclass UserActivityChannel
    {

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [static_name("Windows.ApplicationModel.UserActivities.IUserActivityChannelStatics2", 8e87de30-aa4f-4624-9ad0-d40f3ba0317c)]
        {
            static void DisableAutoSessionCreation();
            static Windows.ApplicationModel.UserActivities.UserActivityChannel TryGetForWebAccount(Windows.Security.Credentials.WebAccount account);
        }

        [contract(Windows.Foundation.UniversalApiContract, 8)]
        [feature(Velocity_AlwaysAlwaysEnabled)]
        [static_name("Windows.ApplicationModel.UserActivities.IUserActivityChannelStatics3", 53bc4ddb-bbdf-5984-802a-5305874e205c)]
        {
            static Windows.ApplicationModel.UserActivities.UserActivityChannel GetForUser(Windows.System.User user);
        }
        static Windows.ApplicationModel.UserActivities.UserActivityChannel GetDefault();
        [method_name("GetOrCreateUserActivityAsync")] Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.UserActivities.UserActivity>  GetOrCreateUserActivityAsync(String activityId);
        Windows.Foundation.IAsyncAction DeleteActivityAsync(String activityId);
        Windows.Foundation.IAsyncAction DeleteAllActivitiesAsync();

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [interface_name("Windows.ApplicationModel.UserActivities.IUserActivityChannel2", 1698e35b-eb7e-4ea0-bf17-a459e8be706c)]
        {
            Windows.Foundation.IAsyncOperation <Windows.Foundation.Collections.IVector <Windows.ApplicationModel.UserActivities.UserActivitySessionHistoryItem> >  GetRecentUserActivitiesAsync(Int32 maxUniqueActivities);
            Windows.Foundation.IAsyncOperation <Windows.Foundation.Collections.IVector <Windows.ApplicationModel.UserActivities.UserActivitySessionHistoryItem> >  GetSessionHistoryItemsForUserActivityAsync(String activityId, Windows.Foundation.DateTime startTime);
        }
    }





}
namespace Windows.ApplicationModel.UserActivities.Core
{
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [static_name("Windows.ApplicationModel.UserActivities.Core.ICoreUserActivityManagerStatics", ca3adb02-a4be-4d4d-bfa8-6795f4264efb)]
    [threading(both)]
    runtimeclass CoreUserActivityManager
    {
        static Windows.ApplicationModel.UserActivities.UserActivitySession CreateUserActivitySessionInBackground(Windows.ApplicationModel.UserActivities.UserActivity activity);
        static Windows.Foundation.IAsyncAction DeleteUserActivitySessionsInTimeRangeAsync(Windows.ApplicationModel.UserActivities.UserActivityChannel channel, Windows.Foundation.DateTime startTime, Windows.Foundation.DateTime endTime);
    }

}
