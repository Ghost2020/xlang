
namespace Windows.UI.Xaml
{
    [contractversion(1)]
    [internal]
    apicontract PrivateApiContract{};

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    enum TransitionParent
    {
        ParentToRoot,
        ParentToCommonParent,
        ParentToGrandParent,
    };

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    enum TransitionTrigger
    {
        Load,
        Layout,
        Unload,
        Reparent,
    };

}
namespace Windows.UI.Xaml.Media.Animation
{
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    enum NavigationTrigger
    {
        NavigatingAway,
        NavigatingTo,
        BackNavigatingAway,
        BackNavigatingTo,
    };

}
namespace Windows.UI.Xaml.Input
{
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    enum LastInputDeviceType
    {
        None,
        Mouse,
        Touch,
        Pen,
        Keyboard,
        GamepadOrRemote,
    };

}
namespace Windows.UI.Xaml.Controls
{
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    enum ElementType
    {
        ItemContainer,
        GroupHeader,
    };

    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    enum HandwritingViewFunctionButtonType
    {
        Commit,
        Find,
        Forward,
    };

    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    enum IndexSearchHint
    {
        NoHint,
        Exact,
        SearchBackwards,
        SearchForwards,
    };

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    enum KeyNavigationAction
    {
        Next,
        Previous,
        First,
        Last,
        Left,
        Right,
        Up,
        Down,
    };

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    enum ReferenceIdentity
    {
        Myself,
        BeforeMe,
        AfterMe,
    };

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    enum SearchBoxInvocationMethod
    {
        SuggestionChosen,
        EnterKey,
        SearchButton,
    };

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    enum TileGridElementsChange
    {
        Added,
        Removed,
        Reset,
    };

}
namespace Windows.UI.Xaml.Data
{
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    enum EffectiveSourceType
    {
        None,
        Binding_Source,
        DataContext,
        Mentor_DataContext,
        Target,
        TemplatedParent,
        Mentor_TemplatedParent,
        ElementName,
        Mentor_ElementName,
    };

}
namespace Windows.UI.Xaml
{
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    struct WindowCreationParameters
    {
        Int32 Left;
        Int32 Top;
        Int32 Width;
        Int32 Height;
        Boolean TransparentBackground;
        Boolean IsCoreNavigationClient;
    };

}
namespace Windows.UI.Xaml.Controls
{
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    struct EstimationReference
    {
        ElementType ElementType;
        Int32 ElementIndex;
        Windows.Foundation.Rect ElementBounds;
    };

    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    struct LayoutReference
    {
        ReferenceIdentity RelativeLocation;
        Windows.Foundation.Rect ReferenceBounds;
        Windows.Foundation.Rect HeaderBounds;
        Boolean ReferenceIsHeader;
    };

}
namespace Windows.UI.Xaml.Input
{
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    [uuid(42821e8f-7583-4c3a-891c-f33ae2499e22)]
    delegate void FocusedElementRemovedEventHandler(Object sender, FocusedElementRemovedEventArgs e);

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.Input.IFocusedElementRemovedEventArgs", 36f11b3b-3b25-471a-b6f7-fec993dc1b05)]
    runtimeclass FocusedElementRemovedEventArgs
    {
        Windows.UI.Xaml.DependencyObject OldFocusedElement{ get; };
        Windows.UI.Xaml.DependencyObject NewFocusedElement{ get; };
        Windows.UI.Xaml.DependencyObject NewFocusedElement{ set; };
    }

}
namespace Windows.UI.Xaml.Controls
{
    [uuid(a63f8347-bc33-40fb-a5c8-8963867ccfcb)]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    delegate void HandwritingViewCandidatesChangedEventHandler(Object sender, HandwritingViewCandidatesChangedEventArgs e);

    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [interface_name("Windows.UI.Xaml.Controls.IHandwritingViewCandidatesChangedEventArgs", de2afcc7-3dfc-5aa0-bd70-46abb39645bc)]
    runtimeclass HandwritingViewCandidatesChangedEventArgs
    {
        Windows.Foundation.Collections.IVectorView <String>  CandidatesView{ get; };
    }

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(4394cbea-a3dd-4f0f-ba36-dc59910cf624)]
    delegate void HandwritingViewContentSizeChangingEventHandler(Object sender, HandwritingViewContentSizeChangingEventArgs e);

    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [interface_name("Windows.UI.Xaml.Controls.IHandwritingViewContentSizeChangingEventArgs", dfd22039-e3fe-5527-9d70-b59ee9ef6508)]
    runtimeclass HandwritingViewContentSizeChangingEventArgs
    {
        Windows.Foundation.Size ContentSize{ get; };
    }

    [uuid(8cbff54b-f59e-4fd7-8ca8-f4722773755f)]
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    delegate void HandwritingViewFunctionButtonPressedHandler(Object sender, HandwritingViewFunctionButtonPressedArgs e);

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.Controls.IHandwritingViewFunctionButtonPressedArgs", b922ad5d-256e-586e-9ecb-8f46924acd55)]
    runtimeclass HandwritingViewFunctionButtonPressedArgs
    {
        Windows.UI.Xaml.Controls.HandwritingViewFunctionButtonType FunctionButtonType{ get; };
    }

    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(f710e17e-b463-44fa-840e-213e23263d0f)]
    [webhosthidden]
    delegate void TileGridElementAnimatingHandler(TileGrid sender, TileGridElementAnimatingEventArgs e);

    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [static_name("Windows.UI.Xaml.Controls.ITileGridStatics", c027075a-ddd3-4d14-9da9-c46f7b1c8b00)]
    [interface_name("Windows.UI.Xaml.Controls.ITileGrid", 16acef3b-b1d8-490f-891b-6d109a454ea3)]
    [threading(both)]
    runtimeclass TileGrid
        : Windows.UI.Xaml.Controls.Panel
        , [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
        Windows.UI.Xaml.Controls.ITileGridInternal
        , [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
        Windows.UI.Xaml.Controls.IItemContainerMapping
    {
        TileGrid();
        static Windows.UI.Xaml.DependencyProperty OrientationProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty CacheLengthProperty{ get; };
        Windows.UI.Xaml.Controls.Orientation Orientation{ get; };
        Windows.UI.Xaml.Controls.Orientation Orientation{ set; };
        Double CacheLength{ get; };
        Double CacheLength{ set; };
    }

    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [interface_name("Windows.UI.Xaml.Controls.ITileGridElementAnimatingEventArgs", b1be9dca-61a8-4505-b401-a36f27812a71)]
    [threading(both)]
    runtimeclass TileGridElementAnimatingEventArgs
    {
        TileGridElementAnimatingEventArgs();
        Boolean Handled{ get; };
        Boolean Handled{ set; };
        Windows.UI.Xaml.Controls.ITileGridElement Element{ get; };
    }

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(a2a44ee9-dfc9-48fc-8e92-0209534feddf)]
    delegate void TileGridElementBoundsChangedHandler(ITileGridElement sender, ITileGridElementBoundsChangedEventArgs e);

    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    [uuid(13d6fa46-4003-4fb8-b697-17c3e00561cf)]
    interface ITileGridElement
    {
        UInt64 Reserved{ get; };
        UInt64 Reserved{ set; };
        Windows.Foundation.Rect Bounds{ get; };
        event Windows.UI.Xaml.Controls.TileGridElementBoundsChangedHandler BoundsChanged;
    };

    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    [uuid(ed1bc9dd-0cc1-4b92-8bc6-e75f110767ac)]
    interface ITileGridElementBoundsChangedEventArgs
    {
        Windows.Foundation.Rect OldBounds{ get; };
        Windows.Foundation.Rect NewBounds{ get; };
    };

    [uuid(5de01161-ff31-4892-90a8-5e7f6d298805)]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    delegate void TileGridElementsChangedHandler(ITileGridCompositeElement sender, ITileGridElementsChangedEventArgs e);

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(e89a9b90-338a-419e-b7a4-830ab6230b0f)]
    interface ITileGridCompositeElement
    {
        Windows.Foundation.Collections.IVector <Windows.UI.Xaml.Controls.ITileGridElement>  Elements{ get; };
        Windows.Foundation.Point ElementsOffset{ get; };
        event Windows.UI.Xaml.Controls.TileGridElementsChangedHandler ElementsChanged;
    };

    [uuid(2c72a696-d6d8-4899-952e-62015d0a7467)]
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    interface ITileGridElementsChangedEventArgs
    {
        Windows.UI.Xaml.Controls.TileGridElementsChange Change{ get; };
        Windows.UI.Xaml.Controls.ITileGridElement Element{ get; };
    };

}
namespace Windows.UI.Xaml.Controls.Primitives
{
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(faa25f0d-49ec-461c-9f66-8b5b13f2a5c8)]
    [webhosthidden]
    delegate void FlyoutOccludedContentAreaChangedHandler(Windows.Foundation.Rect flyoutBounds, Windows.Foundation.Rect visibleBounds);

}
namespace Windows.UI.Xaml
{
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(2a6a41d6-6ded-43b3-bb58-549ff93ea590)]
    [webhosthidden]
    interface IAtlasRequestCallback
    {
        Boolean AtlasRequest(UInt32 width, UInt32 height, Windows.Graphics.DirectX.DirectXPixelFormat pixelFormat);
    };

    [webhosthidden]
    [uuid(a4d2aee7-ff23-4817-b89a-6dac2f2d2033)]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    interface IElementSoundPlayerStaticsPrivate
    {
        void RequestInteractionSoundForElement(ElementSoundKind sound, DependencyObject element);
        Windows.UI.Xaml.ElementSoundMode GetEffectiveSoundMode(DependencyObject element);
    };

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(b3ab45d8-6a4e-4e76-a00d-32d4643a9f1a)]
    interface IFrameworkApplicationPrivate
    {
        void StartOnCurrentThread(ApplicationInitializationCallback callback);
        Windows.UI.Xaml.Hosting.XamlIsland CreateIsland();
        Windows.UI.Xaml.Hosting.XamlIsland CreateIslandWithAppWindow(Object appWindow);
        Windows.UI.Xaml.Hosting.XamlIsland CreateIslandWithContentBridge(Object owner, Object contentBridge);
        void RemoveIsland(Windows.UI.Xaml.Hosting.XamlIsland island);
        void SetSynchronizationWindow(UInt64 commitResizeWindow);
    };

}
namespace Windows.UI.Xaml.Hosting
{
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Hosting.IXamlIslandStatics", 3ead2336-b073-456f-bcaf-82587eb63487)]
    [interface_name("Windows.UI.Xaml.Hosting.IXamlIsland", 412b49d7-b8b7-416a-b49b-57f9edbef991)]
    [threading(both)]
    runtimeclass XamlIsland
        : Windows.UI.Xaml.Controls.Panel
    {
        XamlIsland();
        static Windows.UI.Xaml.Hosting.XamlIsland GetIslandFromElement(Windows.UI.Xaml.DependencyObject element);
        Object AppContent{ get; };
        Windows.UI.Xaml.UIElement Content{ get; };
        Windows.UI.Xaml.UIElement Content{ set; };
        Object FocusController{ get; };
        Object MaterialProperties{ get; };
        Object MaterialProperties{ set; };
        void SetScreenOffsetOverride(Windows.Foundation.Point offsetOnScreen);
        void SetFocus();
    }

}
namespace Windows.UI.Xaml
{
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    [uuid(c45f3f8c-61e6-4f9a-be88-fe4fe6e64f5f)]
    interface IFrameworkApplicationStaticsPrivate
    {
        void StartInCoreWindowHostingMode(WindowCreationParameters initialWindowConfiguration, ApplicationInitializationCallback callback);
        void EnableFailFastOnStowedException();
    };

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(2584709a-255f-4920-9932-3ee8de14a11f)]
    interface IFrameworkTemplatePrivate
    {
        void EnableTemplateCaching(Boolean isTemplateCachingEnabled);
    };

    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(ec2259fd-4613-40a7-95de-0b9b1701bbf1)]
    [webhosthidden]
    interface IMemoryInfoPrivate
    {
        UInt64 GetCountOfDescendantUIElements();
        UInt64 GetEstimatedSizeOfDescendantImages();
    };

    [uuid(d7a65fef-6d5f-4552-aadc-ee5ec939e2de)]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    interface IRectHelperStaticsPrivate
    {
        Windows.Foundation.Rect DipsRectToPhysicalRect(Windows.Foundation.Rect dipsRect);
    };

    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(c51b7c58-5f92-4ff9-98de-a3d27703b821)]
    [webhosthidden]
    interface ISourceInfoPrivate
    {
        Int32 Line{ get; };
        Int32 Line{ set; };
        Int32 Column{ get; };
        Int32 Column{ set; };
        String ParseUri{ get; };
        String ParseUri{ set; };
        String XbfHash{ get; };
        String XbfHash{ set; };
    };

    [uuid(14f6ee08-dd5c-4715-9f33-687639c72c05)]
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    interface IUIElementHostingPreviewStaticsPrivate
    {
        void SetComponentSite(UIElement element, Object componentSite);
        void SetAutomationProperty(UIElement element, Windows.UI.Xaml.Automation.AutomationProperty property, Windows.UI.Xaml.Automation.ComponentPropertyValue value);
    };

}
namespace Windows.UI.Xaml.Automation
{
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [constructor_name("Windows.UI.Xaml.Automation.IComponentPropertyValueFactory", 98f128b3-6fca-4bcc-b252-2e4bfcbecf6f)]
    [static_name("Windows.UI.Xaml.Automation.IComponentPropertyValueStatics", 7125b70e-3f04-4bcf-b685-bbcb7e4e4e5e)]
    [interface_name("Windows.UI.Xaml.Automation.IComponentPropertyValue", 3a5c0d08-9ccc-48eb-9dd7-23cd6b0e4585)]
    [threading(both)]
    runtimeclass ComponentPropertyValue
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )] ComponentPropertyValue(Windows.UI.Xaml.UIElement site, String elementId);
        static Windows.UI.Xaml.DependencyProperty ElementIdProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty SiteProperty{ get; };
        String ElementId{ get; };
        Windows.UI.Xaml.UIElement Site{ get; };
    }

}
namespace Windows.UI.Xaml
{
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    [uuid(7cc8cb07-5a0d-46bb-8c54-9beafe63b476)]
    interface IUIElementStaticsPrivate
    {
        Boolean InternalGetIsEnabled(UIElement element);
        void InternalPutIsEnabled(UIElement element, Boolean value);
    };

    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    [uuid(06636c29-5a17-458d-8ea2-2422d997a922)]
    interface IWindowPrivate
    {
        Boolean TransparentBackground{ get; };
        Boolean TransparentBackground{ set; };
        void Show();
        void Hide();
        void MoveWindow(Int32 x, Int32 y, Int32 width, Int32 height);
        void SetAtlasSizeHint(UInt32 width, UInt32 height);
        void ReleaseGraphicsDeviceOnSuspend(Boolean enable);
        void SetAtlasRequestCallback(IAtlasRequestCallback callback);
        void SetSynchronizationInfo(UInt64 compSyncObject, UInt64 commitResizeWindow);
        Windows.Foundation.Rect GetWindowContentBoundsForElement(DependencyObject element);
        Windows.Foundation.Rect GetWindowContentLayoutBoundsForElement(DependencyObject element);
    };

    [uuid(6d6e3871-2af7-416f-b5b3-48a26bc3baf5)]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    interface IXamlRootPrivate
    {
        Object GetMaterialProperties();
    };



    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.IDxamlCoreTestHooksStatics", 91be536b-9599-428b-9a72-0618f28019e8)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.IDxamlCoreTestHooks", 3b1f9832-6a1c-4fb4-afe3-3bc92159acda)]
    [threading(both)]
    runtimeclass DxamlCoreTestHooks
    {
        DxamlCoreTestHooks();
        static Windows.UI.Xaml.DxamlCoreTestHooks GetForCurrentThread();
    }

}
namespace Windows.UI.Xaml.Media
{
    [uuid(5f71d68f-445a-49db-82a7-e0e64d81d937)]
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    interface IXamlCompositionBrushBaseOverridesPrivate
    {
        void OnElementConnected(Windows.UI.Xaml.DependencyObject element);
    };

    [uuid(6a5b89e1-7c06-4395-a894-1a486c5df8e9)]
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    interface IXamlCompositionBrushBasePrivates
    {
        void SetBrushForXamlRoot(Object xamlRoot, Windows.UI.Composition.CompositionBrush brush);
        Windows.UI.Composition.CompositionBrush GetBrushForXamlRoot(Object xamlRoot);
        void ClearBrushForXamlRoot(Object xamlRoot, Windows.UI.Composition.CompositionBrush brush);
        void ClearCompositionBrushMap();
    };

}
namespace Windows.UI.Xaml.Media.Animation
{
    [uuid(be085140-5bba-41a8-bc08-87d8314f20d0)]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    interface INavigationTransitionInfoOverridesPrivate
    {
        void CreateStoryboardsCore(Windows.UI.Xaml.UIElement element, NavigationTrigger trigger, Windows.Foundation.Collections.IVector <Windows.UI.Xaml.Media.Animation.Storyboard>  storyboards);
    };

    [uuid(1ab93e41-46d2-4a19-b20a-e8d042fe5740)]
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    interface INavigationTransitionInfoPrivate
    {
        void CreateStoryboards(Windows.UI.Xaml.UIElement element, NavigationTrigger trigger, Windows.Foundation.Collections.IVector <Windows.UI.Xaml.Media.Animation.Storyboard>  storyboards);
    };

    [webhosthidden]
    [uuid(09b8502c-91cd-47f7-8dcb-1cbd62795e94)]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    interface ITransitionFactoryPrivate
    {
        [return_name("result")] Windows.UI.Xaml.Media.Animation.Transition CreateInstance(Object outer, out Object inner);
    };

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(9aca6f05-387e-44f7-ac7c-2b1c06adc7d1)]
    interface ITransitionPrivate
    {
        void CreateStoryboard(Windows.UI.Xaml.UIElement element, Windows.Foundation.Rect start, Windows.Foundation.Rect destination, Windows.UI.Xaml.TransitionTrigger transitionTrigger, Windows.Foundation.Collections.IVector <Windows.UI.Xaml.Media.Animation.Storyboard>  storyboards, out Windows.UI.Xaml.TransitionParent parentForTransition);
        Boolean ParticipatesInTransition(Windows.UI.Xaml.UIElement element, Windows.UI.Xaml.TransitionTrigger transitonTrigger);
    };




    [marshaling_behavior(agile)]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    [constructor_name("Windows.UI.Xaml.Media.Animation.IThemeAnimationBaseFactory", 8d3ac60c-5780-4761-a153-5f20aa033a54)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Animation.IThemeAnimationBase", 3a40f426-f3d5-447d-9f54-cf4d05f551f2)]
    [threading(both)]
    unsealed runtimeclass ThemeAnimationBase
        : Windows.UI.Xaml.Media.Animation.Timeline
    {
        [method_name( "CreateInstance" )]protected ThemeAnimationBase();

        [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
        [overridable_name("Windows.UI.Xaml.Media.Animation.IThemeAnimationBaseOverrides", 4d927105-ff0c-42fb-856b-aeddce2aaa4d)]
        {
            overridable void CreateTimelinesInternal(Boolean onlyGenerateSteadyState, TimelineCollection timelineCollection);
        }
    }

}
namespace Windows.UI.Xaml.Input
{
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(13429425-41b0-4ede-a5db-3a414b2af5bd)]
    interface IFindNextElementOptionsPrivate
    {
        Boolean IgnoreOcclusivity{ get; };
        Boolean IgnoreOcclusivity{ set; };
    };

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(e224df97-aec2-4748-8491-844b510b532b)]
    interface IFocusManagerStaticsPrivate
    {
        event Windows.UI.Xaml.Input.FocusedElementRemovedEventHandler FocusedElementRemoved;
        Object FindNextFocusWithSearchRootIgnoreEngagement(FocusNavigationDirection focusNavigationDirection, Object searchRoot);
        Object FindNextFocusWithSearchRootIgnoreEngagementWithHintRect(FocusNavigationDirection focusNavigationDirection, Object searchRoot, Windows.Foundation.Rect hintRect, Windows.Foundation.Rect exclusionRect);
        Object FindNextFocusWithSearchRootIgnoreEngagementWithClip(FocusNavigationDirection focusNavigationDirection, Object searchRoot, Boolean ignoreClipping, Boolean ignoreCone);
        void SetEngagedControl(Object engagedControl);
        [method_name("SetFocusedElement")] Boolean SetFocusedElement(Windows.UI.Xaml.DependencyObject element, Windows.UI.Xaml.FocusState focusState, Boolean animateIfBringIntoView, Boolean forceBringIntoView, Boolean isProcessingTab, Boolean isShiftPressed);
        [method_name("SetFocusedElementWithDirection")] Boolean SetFocusedElement(Windows.UI.Xaml.DependencyObject element, Windows.UI.Xaml.FocusState focusState, Boolean animateIfBringIntoView, Boolean forceBringIntoView, FocusNavigationDirection focusNavigationDirection);
    };



    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Input.IInputManagerStatics", ec517715-0667-471f-b989-93fc0144e239)]
    [threading(both)]
    runtimeclass InputManager
    {
        static Windows.UI.Xaml.Input.LastInputDeviceType GetLastInputDeviceType();
    }

}
namespace Windows.UI.Xaml.Controls
{
    [uuid(437e368f-e4b8-4bd1-a9bf-b578f8d6f86b)]
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    interface ICommandBarLabeledElement
    {
        void SetDefaultLabelPosition(CommandBarDefaultLabelPosition defaultLabelPosition);
        Boolean GetHasBottomLabel();
    };

    [uuid(3fde390e-9c88-44dc-87ef-80fe0bb118f0)]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    interface ICommandBarOverflowElement
    {
        Boolean UseOverflowStyle{ get; };
        Boolean UseOverflowStyle{ set; };
    };

    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    [uuid(70a6e2d4-3ff2-4013-b430-a136943b9b51)]
    interface ICommandBarPrivate
    {
        void Register();
        void Unregister();
    };

    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(8027383b-d67f-433c-9893-3ec3af8e57a3)]
    [webhosthidden]
    interface ICommandBarStaticsPrivate
    {
        Windows.UI.Xaml.Controls.CommandBar GetCurrentBottomCommandBar();
    };

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(ca456420-7f5d-4da0-9515-1cf5a41a9e40)]
    interface IContentControlPrivate
    {
        Windows.Foundation.Rect GetGlobalBounds();
        Single GetRasterizationScale();
    };

    [uuid(94774c71-0967-4b63-b9a9-99e3d2cedb64)]
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    interface IFramePrivate
    {
        void GetNavigationTransitionInfoOverride(out Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo infoOverride, out Boolean isBackNavigation, out Boolean isInitialPage);
        void SetNavigationTransitionInfoOverride(Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo infoOverride);
    };

    [uuid(7413b95a-b30d-4788-bbd4-25d34b97cd56)]
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    interface IHandwritingViewPriv
    {
        Boolean ShowEnterButtonForSingleLineTextBox{ get; };
        Boolean ShowEnterButtonForSingleLineTextBox{ set; };
        Boolean ShowEmojiButtonInPlaceOfSwitchToKeyboard{ get; };
        Boolean ShowEmojiButtonInPlaceOfSwitchToKeyboard{ set; };
        Boolean ColorCloseThreshold{ get; };
        Boolean ColorCloseThreshold{ set; };
        Boolean ShouldInjectEnterKeyPress{ get; };
        Boolean ShouldInjectEnterKeyPress{ set; };
        Boolean PreventAutomaticDismiss{ get; };
        Boolean PreventAutomaticDismiss{ set; };
        Windows.UI.Xaml.UIElement HostElement{ get; };
        Windows.UI.Xaml.UIElement HostElement{ set; };
        Boolean ShouldConstrainToRootBounds{ get; };
        Boolean ShouldConstrainToRootBounds{ set; };
        Boolean SuspendInput{ get; };
        Boolean SuspendInput{ set; };
        event Windows.UI.Xaml.Controls.HandwritingViewContentSizeChangingEventHandler ContentSizeChanging;
        event Windows.UI.Xaml.Controls.HandwritingViewCandidatesChangedEventHandler CandidatesChanged;
        event Windows.UI.Xaml.Controls.HandwritingViewFunctionButtonPressedHandler FunctionButtonPressed;
        void PickCandidate(UInt32 desc);
    };

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(c41bac87-e8bf-4db2-a9c2-018ddcc0a454)]
    interface ILayoutDataInfoProvider
    {
        Int32 GetTotalItemCount();
        Int32 GetTotalGroupCount();
        void GetGroupInformationFromItemIndex(Int32 itemIndex, out Int32 indexOfGroup, out Int32 indexInsideGroup, out Int32 itemCountInGroup);
        void GetGroupInformationFromGroupIndex(Int32 groupIndex, out Int32 startItemIndex, out Int32 itemCountInGroup);
    };

    [uuid(332b8fd5-54e2-4786-8168-937d19733579)]
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    interface ILayoutStrategy
    {
        void SetLayoutDataInfoProvider(ILayoutDataInfoProvider provider);
        void BeginMeasure();
        void EndMeasure();
        Windows.Foundation.Size GetElementMeasureSize(ElementType elementType, Int32 elementIndex, Windows.Foundation.Rect windowConstraint);
        Windows.Foundation.Rect GetElementBounds(ElementType elementType, Int32 elementIndex, Windows.Foundation.Size containerDesiredSize, LayoutReference referenceInformation, Windows.Foundation.Rect windowConstraint);
        Windows.Foundation.Rect GetElementArrangeBounds(ElementType elementType, Int32 elementIndex, Windows.Foundation.Rect containerBounds, Windows.Foundation.Rect windowConstraint, Windows.Foundation.Size finalSize);
        Boolean ShouldContinueFillingUpSpace(ElementType elementType, Int32 elementIndex, LayoutReference referenceInformation, Windows.Foundation.Rect windowToFill);
        Windows.Foundation.Point GetPositionOfFirstElement();
        Windows.UI.Xaml.Controls.Orientation GetVirtualizationDirection();
        [return_name("result")] Int32 EstimateElementIndex(ElementType elementType, EstimationReference headerReference, EstimationReference containerReference, Windows.Foundation.Rect window, out Windows.Foundation.Rect targetRect);
        Windows.Foundation.Rect EstimateElementBounds(ElementType elementType, Int32 elementIndex, EstimationReference headerReference, EstimationReference containerReference, Windows.Foundation.Rect window);
        Windows.Foundation.Size EstimatePanelExtent(EstimationReference lastHeaderReference, EstimationReference lastContainerReference, Windows.Foundation.Rect windowConstraint);
        void EstimateIndexFromPoint(Boolean requestingInsertionIndex, Windows.Foundation.Point point, EstimationReference reference, Windows.Foundation.Rect windowConstraint, out IndexSearchHint searchHint, out ElementType elementType, out Int32 elementIndex);
        void GetTargetIndexFromNavigationAction(ElementType elementType, Int32 elementIndex, KeyNavigationAction action, Windows.Foundation.Rect windowConstraint, Int32 itemIndexHintForHeaderNavigation, out ElementType targetElementType, out Int32 targetElementIndex);
        void IsIndexLayoutBoundary(ElementType elementType, Int32 elementIndex, Windows.Foundation.Rect windowConstraint, out Boolean isLeftBoundary, out Boolean isTopBoundary, out Boolean isRightBoundary, out Boolean isBottomBoundary);
        [return_name("result")] Boolean GetRegularSnapPoints(out Single nearOffset, out Single farOffset, out Single spacing);
        Boolean HasIrregularSnapPoints(ElementType elementType);
        Boolean HasSnapPointOnElement(ElementType elementType, Int32 elementIndex);
        Boolean GetIsWrappingStrategy();
        Windows.Foundation.Rect GetElementTransitionsBounds(ElementType elementType, Int32 elementIndex, Windows.Foundation.Rect windowConstraint);
    };

    [webhosthidden]
    [uuid(43d320f9-544b-4012-8217-6f0990d4b379)]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    interface IListViewBasePrivate
    {
        void GetLastInteractionItem(out Windows.UI.Xaml.Controls.Primitives.SelectorItem lastItem);
    };

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(2d0913ba-98a0-4547-bae5-696e9457edd9)]
    interface IListViewBasePrivate2
    {
        void ScrollIntoViewWithOptionalAnimation(Object item, ScrollIntoViewAlignment alignment, Boolean disableAnimation);
    };

    [webhosthidden]
    [uuid(aae7966c-9ea3-4c47-8e23-5d8102caaaa0)]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    interface IMenu
    {
        Windows.UI.Xaml.Controls.IMenu ParentMenu{ get; };
        Windows.UI.Xaml.Controls.IMenu ParentMenu{ set; };
        void Close();
    };

    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    [uuid(133b340c-2805-4931-8fd5-8c372ed49797)]
    interface IMenuPresenter
    {
        Windows.UI.Xaml.Controls.IMenu OwningMenu{ get; };
        Windows.UI.Xaml.Controls.IMenu OwningMenu{ set; };
        Windows.UI.Xaml.Controls.ISubMenuOwner Owner{ get; };
        Windows.UI.Xaml.Controls.ISubMenuOwner Owner{ set; };
        Windows.UI.Xaml.Controls.IMenuPresenter SubPresenter{ get; };
        Windows.UI.Xaml.Controls.IMenuPresenter SubPresenter{ set; };
        void CloseSubMenu();
    };

    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    [uuid(874b3914-2cb0-44f1-9ab4-ff0d42ae0797)]
    interface ISubMenuOwner
    {
        Boolean IsSubMenuOpen{ get; };
        Boolean IsSubMenuPositionedAbsolutely{ get; };
        Windows.UI.Xaml.Controls.ISubMenuOwner ParentOwner{ get; };
        Windows.UI.Xaml.Controls.ISubMenuOwner ParentOwner{ set; };
        void PrepareSubMenu();
        void OpenSubMenu(Windows.Foundation.Point position);
        void PositionSubMenu(Windows.Foundation.Point position);
        void ClosePeerSubMenus();
        void CloseSubMenu();
        void CloseSubMenuTree();
        void DelayCloseSubMenu();
        void CancelCloseSubMenu();
        void RaiseAutomationPeerExpandCollapse(Boolean isOpen);
    };

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(19094806-e26d-445f-9bf2-273b8e96e33e)]
    interface IScrollViewerPrivate
    {
        Boolean IsInDirectManipulation{ get; };
        Boolean ArePointerWheelEventsIgnored{ get; };
        Boolean ArePointerWheelEventsIgnored{ set; };
        Boolean IsRequestBringIntoViewIgnored{ get; };
        Boolean IsRequestBringIntoViewIgnored{ set; };
        Boolean IsInActiveDirectManipulation{ get; };
        void DisableOverpan();
        void EnableOverpan();
        void SetIsNearVerticalAlignmentForced(Boolean enabled);
        void EnableLockScreenMode();
    };

    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    [uuid(a857ffca-7fde-4543-8de0-785e918fc672)]
    interface ISearchBoxPriv
    {
        void PasteFromClipBoard();
        Boolean CanPasteFromClipBoard();
    };

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(69b4f2fe-95bc-4857-94da-2bea9fe77d5b)]
    interface ISearchBoxSuggestionChosenEventArgsPriv
    {
        Object Suggestion{ get; };
        Object Suggestion{ set; };
        Windows.UI.Xaml.Controls.SearchBoxInvocationMethod InvocationMethod{ get; };
        Windows.UI.Xaml.Controls.SearchBoxInvocationMethod InvocationMethod{ set; };
    };

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(39807f2e-7cf2-4875-8371-8bb05c45f252)]
    interface ITelemetryCollectionPriv
    {
        Boolean IsTelemetryCollectionEnabled{ get; };
        Boolean IsTelemetryCollectionEnabled{ set; };
    };

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(d30b7b5f-7777-4bb8-ad1d-831b2e4a781e)]
    interface ITextBoxPriv2
    {
        Boolean IsDesktopPopupMenuEnabled{ get; };
        Boolean IsDesktopPopupMenuEnabled{ set; };
        Boolean PreventEditFocusLoss{ get; };
        Boolean PreventEditFocusLoss{ set; };
        void ForceEditFocusLoss();
    };

    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    [uuid(8ab3fe60-4fc5-4aa8-a9bf-5a73ead841ae)]
    interface ITextBoxPrivate
    {
        Boolean EnsureRectVisibleEnabled{ get; };
        Boolean EnsureRectVisibleEnabled{ set; };
    };

    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(c187f3cb-d6b4-419e-a38d-767a4475229b)]
    interface ITileGridInternal
    {
        event Windows.UI.Xaml.Controls.TileGridElementAnimatingHandler ElementAnimating;
        void ShowDragDropVisual(ITileGridElement element);
        void SetDragDropVisualPosition(Windows.Foundation.Point position);
        void HideDragDropVisual();
        void ScrollIntoView(Object item, ScrollIntoViewAlignment alignment, Boolean disableAnimation);
        void ShiftViewport(Double offset);
    };

    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    [uuid(00f4a9bb-0379-4ad5-acea-6e269cef0381)]
    interface IWebViewFactoryInternal
    {
        Windows.UI.Xaml.Controls.WebView CreateInstanceWithSettings(WebViewExecutionMode executionMode, Boolean disableSmartScreen, Boolean disableServiceWorker);
    };

    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    [uuid(fe2acc5f-0976-4554-8384-a3259210b50e)]
    interface IWebViewPostDataAccessorPrivate
    {
        UInt8[] GetNavigationPostData();
    };






    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.Controls.IIMECandidateItem", 11ef7b51-34e3-4373-9925-a341b173b07e)]
    [threading(both)]
    runtimeclass IMECandidateItem
        : Windows.UI.Xaml.DependencyObject
    {
        IMECandidateItem();
        String CandidateString{ get; };
        String CandidateString{ set; };
        String Metadata{ get; };
        String Metadata{ set; };
        String KeyboardShortcut{ get; };
        String KeyboardShortcut{ set; };
        Int32 CandidateIndex{ get; };
        Int32 CandidateIndex{ set; };
        Windows.UI.Xaml.Visibility ShortcutVisibility{ get; };
        Windows.UI.Xaml.Visibility ShortcutVisibility{ set; };
        Double ShortcutOpacity{ get; };
        Double ShortcutOpacity{ set; };
        Windows.UI.Xaml.Visibility MetadataVisibility{ get; };
        Windows.UI.Xaml.Visibility MetadataVisibility{ set; };
        Windows.UI.Xaml.Thickness CandidateMargin{ get; };
        Windows.UI.Xaml.Thickness CandidateMargin{ set; };
        Double CandidateFontSize{ get; };
        Double CandidateFontSize{ set; };
        Double SecondaryFontSize{ get; };
        Double SecondaryFontSize{ set; };
    }


    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.Controls.IIMECandidatePage", e724bc42-8f60-4fc9-bd11-a6a6079e8815)]
    [threading(both)]
    runtimeclass IMECandidatePage
        : Windows.UI.Xaml.DependencyObject
    {
        IMECandidatePage();
        Object Items{ get; };
        Object Items{ set; };
        Double Width{ get; };
        Double Width{ set; };
        Int32 PageIndex{ get; };
        Int32 PageIndex{ set; };
    }




    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Controls.ITileGridNestedPanel", 5e822da0-3863-4b03-8a1d-a6e18dabf118)]
    [threading(both)]
    runtimeclass TileGridNestedPanel
        : Windows.UI.Xaml.Controls.Panel
    {
        TileGridNestedPanel();
    }


}
namespace Windows.UI.Xaml.Internal
{
    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [static_name("Windows.UI.Xaml.Internal.ILayoutTransitionElementUtilitiesStatics", 2f1c304e-3d6f-4891-af25-0b6d9084d651)]
    [threading(both)]
    runtimeclass LayoutTransitionElementUtilities
    {
        static Windows.UI.Xaml.UIElement CreateLayoutTransitionElement(Windows.UI.Xaml.UIElement source, Windows.UI.Xaml.UIElement parent);
        static void DestroyLayoutTransitionElement(Windows.UI.Xaml.UIElement source, Windows.UI.Xaml.UIElement parent, Windows.UI.Xaml.UIElement layoutTransitionElement);
    }



    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [static_name("Windows.UI.Xaml.Internal.ISecondaryContentRelationshipStatics", 44873018-8813-4713-a926-a31a67eb2235)]
    [interface_name("Windows.UI.Xaml.Internal.ISecondaryContentRelationship", 5c062fa4-7e4b-4ab6-8f67-ed46c8e791d8)]
    [threading(both)]
    runtimeclass SecondaryContentRelationship
        : Windows.UI.Xaml.DependencyObject
    {
        static Windows.UI.Xaml.Internal.SecondaryContentRelationship CreateStickyHeaderRelationship(Windows.UI.Xaml.UIElement scrollViewer, Windows.UI.Xaml.UIElement panelObject, Windows.UI.Xaml.DependencyObject panelTransform, Windows.UI.Xaml.DependencyObject headerTransform, Double groupTopY, Double groupBottomY, Double headerHeight);
        static Windows.UI.Xaml.Internal.SecondaryContentRelationship CreateClipTransformRelationship(Windows.UI.Xaml.UIElement scrollViewer, Windows.UI.Xaml.UIElement clipOwner, Windows.UI.Xaml.DependencyObject clipTransform, Double listExtentHeight, Double listViewportHeight);
        static Windows.UI.Xaml.Internal.SecondaryContentRelationship CreateParallaxRelationship(Windows.UI.Xaml.UIElement scrollViewer, Windows.UI.Xaml.UIElement headerObject, Windows.UI.Xaml.DependencyObject headerTransform, Double[] primaryOffsets, Double[] secondaryOffsets);
        static Windows.UI.Xaml.Internal.SecondaryContentRelationship CreateStaticElementRelationship(Windows.UI.Xaml.UIElement scrollViewer, Windows.UI.Xaml.UIElement staticElement, Windows.UI.Xaml.DependencyObject elementTransform, Boolean isHorizontallyStatic, Boolean isInverted);
        void SetAuxiliaryDependencyPropertyHolder(Windows.UI.Xaml.DependencyObject auxiliaryDependencyPropertyHolder);
        void PrepareForCurveUpdate();
        void Apply();
        void Remove();
        void UpdateDependencyProperties();
    }

}
namespace Windows.UI.Xaml.Media.Imaging
{
    [uuid(31fd8761-17ec-4fa2-a3f6-73c46eb2fc5e)]
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    interface IXamlRenderingBackgroundTaskStaticsPrivate
    {
        Windows.UI.Xaml.ResourceDictionary Resources{ get; };
        void EnableStandaloneHosting();
        void SetScalePercentage(UInt32 percentage);
    };

}
namespace Windows.UI.Xaml.Controls.Primitives
{
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(a2dc75de-be1a-486c-bec1-8ce58cd5457a)]
    interface IFlyoutBasePrivate
    {
        Windows.UI.Xaml.Controls.Primitives.FlyoutOccludedContentAreaChangedHandler OccludedContentAreaChangedHandler{ get; };
        Windows.UI.Xaml.Controls.Primitives.FlyoutOccludedContentAreaChangedHandler OccludedContentAreaChangedHandler{ set; };
        Boolean UsePickerFlyoutTheme{ get; };
        Boolean UsePickerFlyoutTheme{ set; };
        Boolean IsLightDismissOverlayEnabled{ get; };
        Boolean IsLightDismissOverlayEnabled{ set; };
        void PlaceFlyoutForDateTimePicker(Windows.Foundation.Point point);
    };




}
namespace Windows.UI.Xaml.Automation.Peers
{
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(74014876-6869-4bf5-94a4-8fe2473d853f)]
    interface FrameworkElementAutomationPeerPrivate
    {
        Windows.Foundation.Collections.IVector <Windows.UI.Xaml.Automation.Peers.AutomationPeer>  GetAutomationPeersForChildrenOfElement(Windows.UI.Xaml.UIElement element);
    };

    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    [uuid(ac681580-4e86-4838-99fe-80229e7e9353)]
    interface IAutomationPeerPrivate
    {
        void SetAutomationFocus();
    };

}
namespace Windows.UI.Xaml.Automation.Provider
{
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [uuid(347b5fe2-3145-4ee6-9f6a-3e560f2590ae)]
    interface ISeeitSayitProvider
    {
        void SetActiveListeningState(String activeText);
        void SetDisambiguationState(String disambigText);
        void ClearSpeechState();
    };

}
namespace Windows.UI.Xaml.Hosting
{
    [uuid(62d7b5f2-2eaf-4ccd-bb91-87ad6e01c92d)]
    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    interface IXamlPresenterPrivate
    {
        void SetViewActivityState(Boolean active, Boolean allowDWMSnapshot);
    };

    [webhosthidden]
    [uuid(1c35e215-859e-41a3-922b-303b8699a29d)]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [internal]
    interface IXamlRuntimeSite
    {
    };





    [webhosthidden]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Hosting.IXamlPresenterStatics3", a49dea01-9e75-49f0-beee-ef1592fbc82b)]
    [interface_name("Windows.UI.Xaml.Hosting.IXamlPresenter", 8438b07a-9ce8-4e22-ab5d-811d84699566)]
    [threading(both)]
    runtimeclass XamlPresenter
        : [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
        Windows.UI.Xaml.Hosting.IXamlPresenterPrivate
    {
        static Windows.UI.Xaml.Hosting.XamlPresenter CreateFromCoreWindow(Windows.UI.Core.CoreWindow coreWindow);

        [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
        [static_name("Windows.UI.Xaml.Hosting.IXamlPresenterStatics2", d0c1e6c3-1d35-4770-9c3b-e3ff2eefcc25)]
        {
            static Windows.UI.Xaml.Hosting.XamlPresenter Current{ get; };
        }

        [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
        [static_name("Windows.UI.Xaml.Hosting.IXamlPresenterStatics", 5c6ef05e-f60d-4433-8bc6-40586456afeb)]
        {
            static Windows.UI.Xaml.Hosting.XamlPresenter CreateFromHwnd(Int32 hwnd);
        }
        Windows.UI.Xaml.UIElement Content{ get; };
        Windows.UI.Xaml.UIElement Content{ set; };
        void SetAtlasSizeHint(UInt32 width, UInt32 height);
        void InitializePresenter();

        [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
        [interface_name("Windows.UI.Xaml.Hosting.IXamlPresenter2", 1114f710-6d30-4572-b24e-c81cf25f0fa5)]
        {
            Windows.UI.Xaml.ResourceDictionary Resources{ get; };
            Windows.UI.Xaml.ResourceDictionary Resources{ set; };
            Windows.Foundation.Rect Bounds{ get; };
            Windows.UI.Xaml.ApplicationTheme RequestedTheme{ get; };
            Windows.UI.Xaml.ApplicationTheme RequestedTheme{ set; };
            Boolean TransparentBackground{ get; };
            Boolean TransparentBackground{ set; };
            void InitializePresenterWithTheme(Windows.UI.Xaml.ApplicationTheme requestedTheme);
            void SetCaretWidth(Int32 width);
        }

        [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
        [interface_name("Windows.UI.Xaml.Hosting.IXamlPresenter4", 59bfb2b6-68a6-515f-9ae8-3bf645f123e7)]
        {
            void SetFontScale(Single fontScale);
        }
    }




    [marshaling_behavior(agile)]
    [contract(Windows.UI.Xaml.PrivateApiContract, 1)]
    [webhosthidden]
    [static_name("Windows.UI.Xaml.Hosting.IXamlRuntimeStatics", c805b0c0-6210-4e4f-b76a-e894e8b1a4ad)]
    [threading(both)]
    runtimeclass XamlRuntime
    {
        static Boolean EnableImmersiveColors{ get; };
        static Boolean EnableImmersiveColors{ set; };
        static Boolean EnableWebView{ get; };
        static Boolean EnableWebView{ set; };
        static void SetSite(IXamlRuntimeSite site);
    }



}
