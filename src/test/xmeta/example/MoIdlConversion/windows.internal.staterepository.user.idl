








namespace Windows.Internal.StateRepository
{
    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [contract(Windows.Internal.StateRepository.StateRepositoryContract, 1)]
    [static_name("Windows.Internal.StateRepository.IUserStatics", b07904dd-31f6-452c-a738-fa5a2fda337b)]
    [interface_name("Windows.Internal.StateRepository.IUser", 5232f8ea-49c7-4840-bfbb-66e785689e88)]
    [threading(both)]
    runtimeclass User
    {
        static Boolean Exists(Int64 userID);
        static Boolean ExistsByUserSid(String UserSid);
        static Windows.Internal.StateRepository.User Get(Int64 userID);
        static Windows.Internal.StateRepository.User TryGet(Int64 userID);
        static Windows.Internal.StateRepository.User GetByUserSid(String UserSid);
        static Windows.Internal.StateRepository.User TryGetByUserSid(String UserSid);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.User>  Find();
        static Windows.Internal.StateRepository.User GetCurrent();
        static Windows.Internal.StateRepository.User GetEveryone();
        static Windows.Internal.StateRepository.User GetDefaultAccount();
        static Windows.Internal.StateRepository.User TryGetDefaultAccount();
        static Boolean ExistsByUserSecurityIdentifier(UInt8[] userSecurityIdentifier);
        static Windows.Internal.StateRepository.User GetByUserSecurityIdentifier(UInt8[] userSecurityIdentifier);
        static Windows.Internal.StateRepository.User TryGetByUserSecurityIdentifier(UInt8[] userSecurityIdentifier);
        User();
        Int64 _UserID{ get; };
        Int64 _UserID{ set; };
        UInt64 _Revision{ get; };
        UInt64 _Revision{ set; };
        String UserSid{ get; };
        String UserSid{ set; };
        Boolean Is_DictionaryNull{ get; };
        void Set_DictionaryToNull();
        void Get_Dictionary(out UInt8[] value);
        void Set_Dictionary(UInt8[] value);
        Windows.Foundation.Collections.IPropertySet Get_DictionaryAsPropertySet();
        void GetUserSidAsSecurityIdentifier(out UInt8[] value);
        void SetUserSidAsSecurityIdentifier(UInt8[] value);
    }


}
