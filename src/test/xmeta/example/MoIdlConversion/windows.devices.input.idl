






namespace Windows.Devices.Input
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum PointerDeviceType
    {
        Touch,
        Pen,
        Mouse,
        [feature(Velocity_AlwaysAlwaysDisabled)]
        [contract(Windows.Foundation.UniversalApiContract, 8)]
        Touchpad,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    struct PointerDeviceUsage
    {
        UInt32 UsagePage;
        UInt32 Usage;
        Int32 MinLogical;
        Int32 MaxLogical;
        Int32 MinPhysical;
        Int32 MaxPhysical;
        UInt32 Unit;
        Single PhysicalMultiplier;
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    struct MouseDelta
    {
        Int32 X;
        Int32 Y;
    };





    [muse(0x6030000)]
    [marshaling_behavior(none)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.Devices.Input.IPointerDeviceStatics", d8b89aa1-d1c6-416e-bd8d-5790914dc563)]
    [interface_name("Windows.Devices.Input.IPointerDevice", 93c9bafc-ebcb-467e-82c6-276feae36b5a)]
    runtimeclass PointerDevice
    {
        static Windows.Devices.Input.PointerDevice GetPointerDevice(UInt32 pointerId);
        static Windows.Foundation.Collections.IVectorView <Windows.Devices.Input.PointerDevice>  GetPointerDevices();
        Windows.Devices.Input.PointerDeviceType PointerDeviceType{ get; };
        Boolean IsIntegrated{ get; };
        UInt32 MaxContacts{ get; };
        Windows.Foundation.Rect PhysicalDeviceRect{ get; };
        Windows.Foundation.Rect ScreenRect{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Devices.Input.PointerDeviceUsage>  SupportedUsages{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.Devices.Input.IPointerDevice2", f8a6d2a0-c484-489f-ae3e-30d2ee1ffd3e)]
        {
            UInt32 MaxPointersWithZDistance{ get; };
        }
    }





    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(standard)]
    [static_name("Windows.Devices.Input.IMouseDeviceStatics", 484a9045-6d70-49db-8e68-46ffbd17d38d)]
    [interface_name("Windows.Devices.Input.IMouseDevice", 88edf458-f2c8-49f4-be1f-c256b388bc11)]
    runtimeclass MouseDevice
    {
        static Windows.Devices.Input.MouseDevice GetForCurrentView();
        event Windows.Foundation.TypedEventHandler <Windows.Devices.Input.MouseDevice, Windows.Devices.Input.MouseEventArgs>  MouseMoved;
    }

    [marshaling_behavior(standard)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Devices.Input.IMouseEventArgs", f625aa5d-2354-4cc7-9230-96941c969fde)]
    runtimeclass MouseEventArgs
    {
        Windows.Devices.Input.MouseDelta MouseDelta{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Devices.Input.IMouseCapabilities", bca5e023-7dd9-4b6b-9a92-55d43cb38f73)]
    runtimeclass MouseCapabilities
    {
        MouseCapabilities();
        Int32 MousePresent{ get; };
        Int32 VerticalWheelPresent{ get; };
        Int32 HorizontalWheelPresent{ get; };
        Int32 SwapButtons{ get; };
        UInt32 NumberOfButtons{ get; };
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Devices.Input.IKeyboardCapabilities", 3a3f9b56-6798-4bbc-833e-0f34b17c65ff)]
    runtimeclass KeyboardCapabilities
    {
        KeyboardCapabilities();
        Int32 KeyboardPresent{ get; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Devices.Input.ITouchCapabilities", 20dd55f9-13f1-46c8-9285-2c05fa3eda6f)]
    runtimeclass TouchCapabilities
    {
        TouchCapabilities();
        Int32 TouchPresent{ get; };
        UInt32 Contacts{ get; };
    }

}
