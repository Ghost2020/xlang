






namespace Windows.Internal.Input.MPCManager
{
    [contractversion(1)]
    [internal]
    apicontract InternalContract{};

    [contract(Windows.Internal.Input.MPCManager.InternalContract, 1)]
    enum InputType
    {
        Unknown,
        Pointer,
        Mouse,
        Keyboard = 4,
        Touch = 8,
        Pen = 16,
        PrecisionTouchpad = 32,
        GameController = 64,
        Button = 128,
        HID = 256,
        MPC_Hand = 512,
        MPC_Controller = 1024,
        Heat = 2048,
        RawMouse = 4096,
        MPC_SpatialController = 8192,
        Gaze = 16384,
        DInput_Controller = 32768,
        XInput_Controller = 65536,
        MPC_Head = 131072,
        MPC_Voice = 262144,
        LampArray = 524288,
        CameraAccess = 1048576,
        MPC_EyeGaze = 2097152,
        MPC_HomeGesture = 4194304,
        QMsg = 8388608,
        MouseEnterLeave = 16777216,
    };


    [marshaling_behavior(agile)]
    [contract(Windows.Internal.Input.MPCManager.InternalContract, 1)]
    [interface_name("Windows.Internal.Input.MPCManager.IConstantChangedEventArgs", d488261e-da5e-4bdf-9803-8544af140412)]
    runtimeclass ConstantChangedEventArgs
    {
        Windows.Internal.Input.MPCManager.InputType InputType{ get; };
        String ConstantName{ get; };
        Windows.Foundation.IPropertyValue Value{ get; };
        Windows.Foundation.IPropertyValue DefaultValue{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Internal.Input.MPCManager.InternalContract, 1)]
    [interface_name("Windows.Internal.Input.MPCManager.IHomeGestureEventArgs", 58f47bae-f250-48ad-9806-5e9f1a6c07d9)]
    runtimeclass HomeGestureEventArgs
    {
        UInt64 QPCTime{ get; };
        UInt32 InputType{ get; };
        UInt32 DeviceId{ get; };
        UInt32 ButtonState{ get; };
        UInt32 MirageId{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Internal.Input.MPCManager.InternalContract, 1)]
    [interface_name("Windows.Internal.Input.MPCManager.IHomeGestureReadyChangedEventArgs", bdcfcf8e-77ea-47f8-84c6-a7960853116f)]
    runtimeclass HomeGestureReadyChangedEventArgs
    {
        Boolean IsReady{ get; };
        UInt64 QPCTime{ get; };
        UInt32 InputType{ get; };
        UInt32 DeviceId{ get; };
        UInt32 MirageId{ get; };
        UInt32 GestureStage{ get; };
    }


    [contract(Windows.Internal.Input.MPCManager.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Internal.Input.MPCManager.IServerConnectionArgs", 33f79fe3-b25b-4574-bf15-1eab4ba22888)]
    runtimeclass ServerConnectionArgs
    {
        Boolean IsServerConnected{ get; };
    }

    [contract(Windows.Internal.Input.MPCManager.InternalContract, 1)]
    [uuid(27b0ba57-321e-45a0-888d-225457a9cfe5)]
    interface IMPCManagerConnection
    {
        Boolean IsServerConnected{ get; };
        event Windows.Foundation.TypedEventHandler <Windows.Internal.Input.MPCManager.MPCManagerClient, Windows.Internal.Input.MPCManager.ServerConnectionArgs>  ServerConnectionChanged;
    };

    [contract(Windows.Internal.Input.MPCManager.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.Internal.Input.MPCManager.IMPCManagerClientStatics", 69eae266-3319-5a9c-992e-0b1b4ad9ecaf)]
    [interface_name("Windows.Internal.Input.MPCManager.IMPCManagerClient", 0020db1e-b549-408b-a7d5-fd458a887746)]
    [threading(both)]
    runtimeclass MPCManagerClient
    {
        static Windows.Internal.Input.MPCManager.MPCManagerClient GetForCurrentThread();
        static Windows.Internal.Input.MPCManager.MPCManagerClient CreateOnDedicatedThread();
        void SetOnlyMixedWorldRouting(Boolean isOnlyMixedWorldRouting);
        void ForcePrimaryInputType(InputType newPrimaryType);
        event Windows.Foundation.TypedEventHandler <Windows.Internal.Input.MPCManager.MPCManagerClient, Windows.Internal.Input.MPCManager.HomeGestureReadyChangedEventArgs>  HomeGestureReadyChanged;
        event Windows.Foundation.TypedEventHandler <Windows.Internal.Input.MPCManager.MPCManagerClient, Windows.Internal.Input.MPCManager.HomeGestureEventArgs>  OnHomeGestureDetected;
        event Windows.Foundation.TypedEventHandler <Windows.Internal.Input.MPCManager.MPCManagerClient, Windows.Internal.Input.MPCManager.HomeGestureEventArgs>  InteractiveIntentGesture;
        event Windows.Foundation.TypedEventHandler <Windows.Internal.Input.MPCManager.MPCManagerClient, Windows.Internal.Input.MPCManager.HomeGestureEventArgs>  ButtonsChangedDuringHomeGesture;
        Windows.Internal.Input.MPCManager.MPCConstantManagerClient MPCConstantManagerClient{ get; };
    }


    [contract(Windows.Internal.Input.MPCManager.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Internal.Input.MPCManager.IMPCConstantManagerClient", 4e663a2d-1db5-4a2f-98d7-4ba9bf42d201)]
    runtimeclass MPCConstantManagerClient
    {
        Windows.Foundation.IAsyncAction SetConstantAsync(InputType inputType, String propertyName, Windows.Foundation.IPropertyValue value);
        Windows.Foundation.IAsyncAction SetAllConstantsForInputTypeToDefaultAsync(InputType inputType);
        Windows.Foundation.IAsyncAction SetConstantToDefaultAsync(InputType inputType, String propertyName);
        Windows.Foundation.IAsyncOperation <Windows.Foundation.Collections.IVector <String> >  GetActiveInputTypeListAsync();
        Windows.Foundation.IAsyncOperation <Windows.Foundation.Collections.IVector <String> >  GetConstantsForInputTypeAsync(InputType inputType);
        Windows.Foundation.IAsyncOperation <Windows.Foundation.IPropertyValue>  GetConstantAsync(InputType inputType, String propertyName);
        event Windows.Foundation.TypedEventHandler <Windows.Internal.Input.MPCManager.MPCConstantManagerClient, Windows.Internal.Input.MPCManager.ConstantChangedEventArgs>  ConstantChanged;
    }



}
