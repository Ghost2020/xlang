








namespace Windows.Devices.SerialCommunication
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum SerialParity
    {
        None,
        Odd,
        Even,
        Mark,
        Space,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum SerialHandshake
    {
        None,
        RequestToSend,
        XOnXOff,
        RequestToSendXOnXOff,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum SerialStopBitCount
    {
        One,
        OnePointFive,
        Two,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum SerialError
    {
        Frame,
        BufferOverrun,
        ReceiveFull,
        ReceiveParity,
        TransmitFull,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum SerialPinChange
    {
        BreakSignal,
        CarrierDetect,
        ClearToSend,
        DataSetReady,
        RingIndicator,
    };


    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.Devices.SerialCommunication.ISerialDeviceStatics", 058c4a70-0836-4993-ae1a-b61ae3be056b)]
    [interface_name("Windows.Devices.SerialCommunication.ISerialDevice", e187ccc6-2210-414f-b65a-f5553a03372a)]
    runtimeclass SerialDevice
        : Windows.Foundation.IClosable
    {
        [method_name("GetDeviceSelector")] static String GetDeviceSelector();
        [method_name("GetDeviceSelectorFromPortName")] static String GetDeviceSelector(String portName);
        static String GetDeviceSelectorFromUsbVidPid(UInt16 vendorId, UInt16 productId);
        static Windows.Foundation.IAsyncOperation <Windows.Devices.SerialCommunication.SerialDevice>  FromIdAsync(String deviceId);
        UInt32 BaudRate{ get; };
        UInt32 BaudRate{ set; };
        Boolean BreakSignalState{ get; };
        Boolean BreakSignalState{ set; };
        UInt32 BytesReceived{ get; };
        Boolean CarrierDetectState{ get; };
        Boolean ClearToSendState{ get; };
        UInt16 DataBits{ get; };
        UInt16 DataBits{ set; };
        Boolean DataSetReadyState{ get; };
        Windows.Devices.SerialCommunication.SerialHandshake Handshake{ get; };
        Windows.Devices.SerialCommunication.SerialHandshake Handshake{ set; };
        Boolean IsDataTerminalReadyEnabled{ get; };
        Boolean IsDataTerminalReadyEnabled{ set; };
        Boolean IsRequestToSendEnabled{ get; };
        Boolean IsRequestToSendEnabled{ set; };
        Windows.Devices.SerialCommunication.SerialParity Parity{ get; };
        Windows.Devices.SerialCommunication.SerialParity Parity{ set; };
        String PortName{ get; };
        Windows.Foundation.TimeSpan ReadTimeout{ get; };
        Windows.Foundation.TimeSpan ReadTimeout{ set; };
        Windows.Devices.SerialCommunication.SerialStopBitCount StopBits{ get; };
        Windows.Devices.SerialCommunication.SerialStopBitCount StopBits{ set; };
        UInt16 UsbVendorId{ get; };
        UInt16 UsbProductId{ get; };
        Windows.Foundation.TimeSpan WriteTimeout{ get; };
        Windows.Foundation.TimeSpan WriteTimeout{ set; };
        Windows.Storage.Streams.IInputStream InputStream{ get; };
        Windows.Storage.Streams.IOutputStream OutputStream{ get; };
        event Windows.Foundation.TypedEventHandler <Windows.Devices.SerialCommunication.SerialDevice, Windows.Devices.SerialCommunication.ErrorReceivedEventArgs>  ErrorReceived;
        event Windows.Foundation.TypedEventHandler <Windows.Devices.SerialCommunication.SerialDevice, Windows.Devices.SerialCommunication.PinChangedEventArgs>  PinChanged;
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [dualapipartition(0xa000000)]
    [interface_name("Windows.Devices.SerialCommunication.IErrorReceivedEventArgs", fcc6bf59-1283-4d8a-bfdf-566b33ddb28f)]
    runtimeclass ErrorReceivedEventArgs
    {
        Windows.Devices.SerialCommunication.SerialError Error{ get; };
    }

    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Devices.SerialCommunication.IPinChangedEventArgs", a2bf1db0-fc9c-4607-93d0-fa5e8343ee22)]
    runtimeclass PinChangedEventArgs
    {
        Windows.Devices.SerialCommunication.SerialPinChange PinChange{ get; };
    }



}
