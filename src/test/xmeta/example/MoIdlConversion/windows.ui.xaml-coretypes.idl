






















namespace Windows.UI.Text
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum FontStretch
    {
        Undefined,
        UltraCondensed,
        ExtraCondensed,
        Condensed,
        SemiCondensed,
        Normal,
        SemiExpanded,
        Expanded,
        ExtraExpanded,
        UltraExpanded,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum FontStyle
    {
        Normal,
        Oblique,
        Italic,
    };

}
namespace Windows.UI.Xaml
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum DurationType
    {
        Automatic,
        TimeSpan,
        Forever,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 4)]
    [flags]
    enum ElementHighContrastAdjustment
    {
        None,
        Application = 0x80000000,
        Auto = -1,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    enum ElementSoundKind
    {
        Focus,
        Invoke,
        Show,
        Hide,
        MovePrevious,
        MoveNext,
        GoBack,
    };

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [webhosthidden]
    enum ElementSoundMode
    {
        Default,
        FocusOnly,
        Off,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum ElementTheme
    {
        Default,
        Light,
        Dark,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum FlowDirection
    {
        LeftToRight,
        RightToLeft,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum FocusState
    {
        Unfocused,
        Pointer,
        Keyboard,
        Programmatic,
    };

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [webhosthidden]
    enum FocusVisualKind
    {
        DottedLine,
        HighVisibility,
        [contract(Windows.Foundation.UniversalApiContract, 6)]
        Reveal,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum HorizontalAlignment
    {
        Left,
        Center,
        Right,
        Stretch,
    };

    [contract(Windows.Foundation.UniversalApiContract, 7)]
    [flags]
    [webhosthidden]
    enum Vector3TransitionComponents
    {
        X = 1,
        Y,
        Z = 4,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum VerticalAlignment
    {
        Top,
        Center,
        Bottom,
        Stretch,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum Visibility
    {
        Visible,
        Collapsed,
    };

}
namespace Windows.UI.Xaml.Media
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum AudioCategory
    {
        Other,
        [deprecated("ForegroundOnlyMedia is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x10000)]
        ForegroundOnlyMedia,
        [deprecated("BackgroundCapableMedia is deprecated and might not work on all platforms. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x10000)]
        BackgroundCapableMedia,
        Communications,
        Alerts,
        SoundEffects,
        GameEffects,
        GameMedia,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        GameChat,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Speech,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Movie,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Media,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum AudioDeviceType
    {
        Console,
        Multimedia,
        Communications,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum BrushMappingMode
    {
        Absolute,
        RelativeToBoundingBox,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum ColorInterpolationMode
    {
        ScRgbLinearInterpolation,
        SRgbLinearInterpolation,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum ElementCompositeMode
    {
        Inherit,
        SourceOver,
        MinBlend,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    enum FastPlayFallbackBehaviour
    {
        Skip,
        Hide,
        Disable,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum FillRule
    {
        EvenOdd,
        Nonzero,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum GradientSpreadMethod
    {
        Pad,
        Reflect,
        Repeat,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum MediaCanPlayResponse
    {
        NotSupported,
        Maybe,
        Probably,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum PenLineCap
    {
        Flat,
        Square,
        Round,
        Triangle,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum PenLineJoin
    {
        Miter,
        Bevel,
        Round,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum Stereo3DVideoPackingMode
    {
        None,
        SideBySide,
        TopBottom,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum Stereo3DVideoRenderMode
    {
        Mono,
        Stereo,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum Stretch
    {
        None,
        Fill,
        Uniform,
        UniformToFill,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum StyleSimulations
    {
        None,
        BoldSimulation,
        ItalicSimulation,
        BoldItalicSimulation,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum SweepDirection
    {
        Counterclockwise,
        Clockwise,
    };

}
namespace Windows.UI.Xaml.Media.Animation
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum ClockState
    {
        Active,
        Filling,
        Stopped,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum EasingMode
    {
        EaseOut,
        EaseIn,
        EaseInOut,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum FillBehavior
    {
        HoldEnd,
        Stop,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum RepeatBehaviorType
    {
        Count,
        Duration,
        Forever,
    };

}
namespace Windows.UI.Xaml.Input
{
    [contract(Windows.Foundation.UniversalApiContract, 4)]
    [webhosthidden]
    enum FocusInputDeviceKind
    {
        None,
        Mouse,
        Touch,
        Pen,
        Keyboard,
        GameController,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum FocusNavigationDirection
    {
        Next,
        Previous,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Up,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Down,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Left,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Right,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        None,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum InputScopeNameValue
    {
        Default,
        Url,
        EmailSmtpAddress = 5,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        PersonalFullName = 7,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        CurrencyAmountAndSymbol = 20,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        CurrencyAmount,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        DateMonthNumber = 23,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        DateDayNumber,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        DateYear,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Digits = 28,
        Number,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Password = 31,
        TelephoneNumber,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        TelephoneCountryCode,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        TelephoneAreaCode,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        TelephoneLocalNumber,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        TimeHour = 37,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        TimeMinutesOrSeconds,
        NumberFullWidth,
        AlphanumericHalfWidth,
        AlphanumericFullWidth,
        Hiragana = 44,
        KatakanaHalfWidth,
        KatakanaFullWidth,
        Hanja,
        HangulHalfWidth,
        HangulFullWidth,
        Search,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Formula,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        SearchIncremental,
        ChineseHalfWidth,
        ChineseFullWidth,
        NativeScript,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Text = 57,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Chat,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        NameOrPhoneNumber,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        EmailNameOrAddress,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Maps = 62,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        NumericPassword,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        NumericPin,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        AlphanumericPin,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        FormulaNumber = 67,
        [contract(Windows.Foundation.UniversalApiContract, 3)]
        ChatWithoutEmoji,
    };

    [contract(Windows.Foundation.UniversalApiContract, 6)]
    [webhosthidden]
    enum KeyboardAcceleratorPlacementMode
    {
        Auto,
        Hidden,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum KeyboardNavigationMode
    {
        Local,
        Cycle,
        Once,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 4)]
    enum KeyTipPlacementMode
    {
        Auto,
        Bottom,
        Top,
        Left,
        Right,
        Center,
        Hidden,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [flags]
    [webhosthidden]
    enum ManipulationModes
    {
        None,
        TranslateX,
        TranslateY,
        TranslateRailsX = 4,
        TranslateRailsY = 8,
        Rotate = 16,
        Scale = 32,
        TranslateInertia = 64,
        RotateInertia = 128,
        ScaleInertia = 256,
        All = 65535,
        System,
    };

    [contract(Windows.Foundation.UniversalApiContract, 7)]
    [webhosthidden]
    enum StandardUICommandKind
    {
        None,
        Cut,
        Copy,
        Paste,
        SelectAll,
        Delete,
        Share,
        Save,
        Open,
        Close,
        Pause,
        Play,
        Stop,
        Forward,
        Backward,
        Undo,
        Redo,
    };

    [contract(Windows.Foundation.UniversalApiContract, 4)]
    [webhosthidden]
    enum XYFocusKeyboardNavigationMode
    {
        Auto,
        Enabled,
        Disabled,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 4)]
    enum XYFocusNavigationStrategy
    {
        Auto,
        Projection,
        NavigationDirectionDistance,
        RectilinearDistance,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 4)]
    enum XYFocusNavigationStrategyOverride
    {
        None,
        Auto,
        Projection,
        NavigationDirectionDistance,
        RectilinearDistance,
    };

}
namespace Windows.UI.Xaml.Controls
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 7)]
    enum BackgroundSizing
    {
        InnerBorderEdge,
        OuterBorderEdge,
    };

    [feature(Velocity_AlwaysAlwaysDisabled)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 7)]
    enum ControlHeaderPlacement
    {
        Top,
        Left,
    };

    [feature(Velocity_SometimesAlwaysDisabled)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 7)]
    enum InputValidationErrorEventAction
    {
        Added,
        Removed,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    enum LightDismissOverlayMode
    {
        Auto,
        On,
        Off,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    enum RequiresPointer
    {
        Never,
        WhenEngaged,
        WhenFocused,
    };

}
namespace Windows.UI.Xaml.Media.Imaging
{
    [webhosthidden]
    [flags]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum BitmapCreateOptions
    {
        None,
        IgnoreImageCache = 8,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum DecodePixelType
    {
        Physical,
        Logical,
    };

}
namespace Windows.UI.Xaml.Controls.Primitives
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum AnimationDirection
    {
        Left,
        Top,
        Right,
        Bottom,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum ComponentResourceLocation
    {
        Application,
        Nested,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum EdgeTransitionLocation
    {
        Left,
        Top,
        Right,
        Bottom,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum FlyoutPlacementMode
    {
        Top,
        Bottom,
        Left,
        Right,
        Full,
        [contract(Windows.Foundation.UniversalApiContract, 7)]
        TopEdgeAlignedLeft,
        [contract(Windows.Foundation.UniversalApiContract, 7)]
        TopEdgeAlignedRight,
        [contract(Windows.Foundation.UniversalApiContract, 7)]
        BottomEdgeAlignedLeft,
        [contract(Windows.Foundation.UniversalApiContract, 7)]
        BottomEdgeAlignedRight,
        [contract(Windows.Foundation.UniversalApiContract, 7)]
        LeftEdgeAlignedTop,
        [contract(Windows.Foundation.UniversalApiContract, 7)]
        LeftEdgeAlignedBottom,
        [contract(Windows.Foundation.UniversalApiContract, 7)]
        RightEdgeAlignedTop,
        [contract(Windows.Foundation.UniversalApiContract, 7)]
        RightEdgeAlignedBottom,
        [contract(Windows.Foundation.UniversalApiContract, 7)]
        Auto,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 7)]
    enum FlyoutShowMode
    {
        Auto,
        Standard,
        Transient,
        TransientWithDismissOnPointerMoveAway,
    };

}
namespace Windows.UI.Xaml.Automation
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum AnnotationType
    {
        Unknown = 60000,
        SpellingError,
        GrammarError,
        Comment,
        FormulaError,
        TrackChanges,
        Header,
        Footer,
        Highlighted,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Endnote,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Footnote,
        [contract(Windows.Foundation.UniversalApiContract, 3)]
        InsertionChange,
        [contract(Windows.Foundation.UniversalApiContract, 3)]
        DeletionChange,
        [contract(Windows.Foundation.UniversalApiContract, 3)]
        MoveChange,
        [contract(Windows.Foundation.UniversalApiContract, 3)]
        FormatChange,
        [contract(Windows.Foundation.UniversalApiContract, 3)]
        UnsyncedChange,
        [contract(Windows.Foundation.UniversalApiContract, 3)]
        EditingLockedChange,
        [contract(Windows.Foundation.UniversalApiContract, 3)]
        ExternalChange,
        [contract(Windows.Foundation.UniversalApiContract, 3)]
        ConflictingChange,
        [contract(Windows.Foundation.UniversalApiContract, 3)]
        Author,
        [contract(Windows.Foundation.UniversalApiContract, 3)]
        AdvancedProofingIssue,
        [contract(Windows.Foundation.UniversalApiContract, 3)]
        DataValidationError,
        [contract(Windows.Foundation.UniversalApiContract, 3)]
        CircularReferenceError,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum AutomationTextEditChangeType
    {
        None,
        AutoCorrect,
        Composition,
        CompositionFinalized,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum DockPosition
    {
        Top,
        Left,
        Bottom,
        Right,
        Fill,
        None,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum ExpandCollapseState
    {
        Collapsed,
        Expanded,
        PartiallyExpanded,
        LeafNode,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum RowOrColumnMajor
    {
        RowMajor,
        ColumnMajor,
        Indeterminate,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum ScrollAmount
    {
        LargeDecrement,
        SmallDecrement,
        NoAmount,
        LargeIncrement,
        SmallIncrement,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum SupportedTextSelection
    {
        None,
        Single,
        Multiple,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum SynchronizedInputType
    {
        KeyUp = 1,
        KeyDown,
        LeftMouseUp = 4,
        LeftMouseDown = 8,
        RightMouseUp = 16,
        RightMouseDown = 32,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum ToggleState
    {
        Off,
        On,
        Indeterminate,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum WindowInteractionState
    {
        Running,
        Closing,
        ReadyForUserInteraction,
        BlockedByModalWindow,
        NotResponding,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum WindowVisualState
    {
        Normal,
        Maximized,
        Minimized,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum ZoomUnit
    {
        NoAmount,
        LargeDecrement,
        SmallDecrement,
        LargeIncrement,
        SmallIncrement,
    };

}
namespace Windows.UI.Xaml.Automation.Peers
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum AccessibilityView
    {
        Raw,
        Control,
        Content,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum AutomationControlType
    {
        Button,
        Calendar,
        CheckBox,
        ComboBox,
        Edit,
        Hyperlink,
        Image,
        ListItem,
        List,
        Menu,
        MenuBar,
        MenuItem,
        ProgressBar,
        RadioButton,
        ScrollBar,
        Slider,
        Spinner,
        StatusBar,
        Tab,
        TabItem,
        Text,
        ToolBar,
        ToolTip,
        Tree,
        TreeItem,
        Custom,
        Group,
        Thumb,
        DataGrid,
        DataItem,
        Document,
        SplitButton,
        Window,
        Pane,
        Header,
        HeaderItem,
        Table,
        TitleBar,
        Separator,
        SemanticZoom,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        AppBar,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum AutomationEvents
    {
        ToolTipOpened,
        ToolTipClosed,
        MenuOpened,
        MenuClosed,
        AutomationFocusChanged,
        InvokePatternOnInvoked,
        SelectionItemPatternOnElementAddedToSelection,
        SelectionItemPatternOnElementRemovedFromSelection,
        SelectionItemPatternOnElementSelected,
        SelectionPatternOnInvalidated,
        TextPatternOnTextSelectionChanged,
        TextPatternOnTextChanged,
        AsyncContentLoaded,
        PropertyChanged,
        StructureChanged,
        DragStart,
        DragCancel,
        DragComplete,
        DragEnter,
        DragLeave,
        Dropped,
        LiveRegionChanged,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        InputReachedTarget,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        InputReachedOtherElement,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        InputDiscarded,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        WindowClosed,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        WindowOpened,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        ConversionTargetChanged,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        TextEditTextChanged,
        [contract(Windows.Foundation.UniversalApiContract, 3)]
        LayoutInvalidated,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 6)]
    enum AutomationHeadingLevel
    {
        None,
        Level1,
        Level2,
        Level3,
        Level4,
        Level5,
        Level6,
        Level7,
        Level8,
        Level9,
    };

    [contract(Windows.Foundation.UniversalApiContract, 2)]
    [webhosthidden]
    enum AutomationLandmarkType
    {
        None,
        Custom,
        Form,
        Main,
        Navigation,
        Search,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum AutomationLiveSetting
    {
        Off,
        Polite,
        Assertive,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum AutomationNavigationDirection
    {
        Parent,
        NextSibling,
        PreviousSibling,
        FirstChild,
        LastChild,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    enum AutomationNotificationKind
    {
        ItemAdded,
        ItemRemoved,
        ActionCompleted,
        ActionAborted,
        Other,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    enum AutomationNotificationProcessing
    {
        ImportantAll,
        ImportantMostRecent,
        All,
        MostRecent,
        CurrentThenMostRecent,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum AutomationOrientation
    {
        None,
        Horizontal,
        Vertical,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum AutomationStructureChangeType
    {
        ChildAdded,
        ChildRemoved,
        ChildrenInvalidated,
        ChildrenBulkAdded,
        ChildrenBulkRemoved,
        ChildrenReordered,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum PatternInterface
    {
        Invoke,
        Selection,
        Value,
        RangeValue,
        Scroll,
        ScrollItem,
        ExpandCollapse,
        Grid,
        GridItem,
        MultipleView,
        Window,
        SelectionItem,
        Dock,
        Table,
        TableItem,
        Toggle,
        Transform,
        Text,
        ItemContainer,
        VirtualizedItem,
        Text2,
        TextChild,
        TextRange,
        Annotation,
        Drag,
        DropTarget,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        ObjectModel,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Spreadsheet,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        SpreadsheetItem,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Styles,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        Transform2,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        SynchronizedInput,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        TextEdit,
        [contract(Windows.Foundation.UniversalApiContract, 1)]
        CustomNavigation,
    };

}
namespace Windows.UI.Xaml.Automation.Text
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum TextPatternRangeEndpoint
    {
        Start,
        End,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum TextUnit
    {
        Character,
        Format,
        Word,
        Line,
        Paragraph,
        Page,
        Document,
    };

}
namespace Windows.UI.Xaml.Data
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum BindingMode
    {
        OneWay = 1,
        OneTime,
        TwoWay,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum RelativeSourceMode
    {
        None,
        TemplatedParent,
        Self,
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum UpdateSourceTrigger
    {
        Default,
        PropertyChanged,
        Explicit,
        [contract(Windows.Foundation.UniversalApiContract, 5)]
        LostFocus,
    };

}
namespace Windows.UI.Xaml.Interop
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    enum TypeKind
    {
        Primitive,
        Metadata,
        Custom,
    };

}
namespace Windows.UI.Text
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    struct FontWeight
    {
        UInt16 Weight;
    };

}
namespace Windows.UI.Xaml
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    struct CornerRadius
    {
        Double TopLeft;
        Double TopRight;
        Double BottomRight;
        Double BottomLeft;
    };



    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [static_name("Windows.UI.Xaml.ICornerRadiusHelperStatics", f4a1f659-d4d4-451f-a387-d6bf4b2451d4)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.ICornerRadiusHelper", fd7be182-1cdb-4288-b8c8-85ee79297bfc)]
    [threading(both)]
    runtimeclass CornerRadiusHelper
    {
        static Windows.UI.Xaml.CornerRadius FromRadii(Double topLeft, Double topRight, Double bottomRight, Double bottomLeft);
        static Windows.UI.Xaml.CornerRadius FromUniformRadius(Double uniformRadius);
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    struct Duration
    {
        Windows.Foundation.TimeSpan TimeSpan;
        DurationType Type;
    };



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [static_name("Windows.UI.Xaml.IDurationHelperStatics", bc88093e-3547-4ec0-b519-ffa8f9c4838c)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.IDurationHelper", 25c1659f-4497-4135-940f-ee96f4d6e934)]
    [threading(both)]
    runtimeclass DurationHelper
    {
        static Windows.UI.Xaml.Duration Automatic{ get; };
        static Windows.UI.Xaml.Duration Forever{ get; };
        static Int32 Compare(Duration duration1, Duration duration2);
        static Windows.UI.Xaml.Duration FromTimeSpan(Windows.Foundation.TimeSpan timeSpan);
        static Boolean GetHasTimeSpan(Duration target);
        static Windows.UI.Xaml.Duration Add(Duration target, Duration duration);
        static Boolean Equals(Duration target, Duration value);
        static Windows.UI.Xaml.Duration Subtract(Duration target, Duration duration);
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    struct Thickness
    {
        Double Left;
        Double Top;
        Double Right;
        Double Bottom;
    };



    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.IThicknessHelperStatics", c0991a7c-070c-4da6-8784-01ca800eb73a)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.IThicknessHelper", a86bae4b-1e8f-4eeb-9013-0b2838a97b34)]
    [threading(both)]
    runtimeclass ThicknessHelper
    {
        static Windows.UI.Xaml.Thickness FromLengths(Double left, Double top, Double right, Double bottom);
        static Windows.UI.Xaml.Thickness FromUniformLength(Double uniformLength);
    }

}
namespace Windows.UI.Xaml.Media
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    struct Matrix
    {
        Double M11;
        Double M12;
        Double M21;
        Double M22;
        Double OffsetX;
        Double OffsetY;
    };



    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Media.IMatrixHelperStatics", c18606a6-39f4-4b8a-8403-28e5e5f033b4)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.IMatrixHelper", f3cf4882-06b5-48c8-9eb2-1763e9364038)]
    [threading(both)]
    runtimeclass MatrixHelper
    {
        static Windows.UI.Xaml.Media.Matrix Identity{ get; };
        static Windows.UI.Xaml.Media.Matrix FromElements(Double m11, Double m12, Double m21, Double m22, Double offsetX, Double offsetY);
        static Boolean GetIsIdentity(Matrix target);
        static Windows.Foundation.Point Transform(Matrix target, Windows.Foundation.Point point);
    }

}
namespace Windows.UI.Xaml.Media.Animation
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    struct KeyTime
    {
        Windows.Foundation.TimeSpan TimeSpan;
    };



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Media.Animation.IKeyTimeHelperStatics", 7fa2612c-22a9-45e9-9af7-c7416efff7a5)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Animation.IKeyTimeHelper", 3643e480-4823-466a-abe5-5e79c8ed77ed)]
    [threading(both)]
    runtimeclass KeyTimeHelper
    {
        static Windows.UI.Xaml.Media.Animation.KeyTime FromTimeSpan(Windows.Foundation.TimeSpan timeSpan);
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    struct RepeatBehavior
    {
        Double Count;
        Windows.Foundation.TimeSpan Duration;
        RepeatBehaviorType Type;
    };



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Media.Animation.IRepeatBehaviorHelperStatics", 7a795033-79f3-4dd9-b267-9cf50fb51f84)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Animation.IRepeatBehaviorHelper", 6863ab72-4997-47f9-87ad-37efb75993ea)]
    [threading(both)]
    runtimeclass RepeatBehaviorHelper
    {
        static Windows.UI.Xaml.Media.Animation.RepeatBehavior Forever{ get; };
        static Windows.UI.Xaml.Media.Animation.RepeatBehavior FromCount(Double count);
        static Windows.UI.Xaml.Media.Animation.RepeatBehavior FromDuration(Windows.Foundation.TimeSpan duration);
        static Boolean GetHasCount(RepeatBehavior target);
        static Boolean GetHasDuration(RepeatBehavior target);
        static Boolean Equals(RepeatBehavior target, RepeatBehavior value);
    }

}
namespace Windows.UI.Xaml.Controls.Primitives
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    struct GeneratorPosition
    {
        Int32 Index;
        Int32 Offset;
    };



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Controls.Primitives.IGeneratorPositionHelperStatics", ad4095cd-60ec-4588-8d60-39d29097a4df)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Controls.Primitives.IGeneratorPositionHelper", cd40318d-7745-40d9-ab9d-abbda4a7ffea)]
    [threading(both)]
    runtimeclass GeneratorPositionHelper
    {
        static Windows.UI.Xaml.Controls.Primitives.GeneratorPosition FromIndexAndOffset(Int32 index, Int32 offset);
    }

}
namespace Windows.UI.Xaml.Automation.Peers
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    struct RawElementProviderRuntimeId
    {
        UInt32 Part1;
        UInt32 Part2;
    };

}
namespace Windows.UI.Xaml.Data
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    struct LoadMoreItemsResult
    {
        UInt32 Count;
    };

}
namespace Windows.UI.Xaml.Media.Media3D
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    struct Matrix3D
    {
        Double M11;
        Double M12;
        Double M13;
        Double M14;
        Double M21;
        Double M22;
        Double M23;
        Double M24;
        Double M31;
        Double M32;
        Double M33;
        Double M34;
        Double OffsetX;
        Double OffsetY;
        Double OffsetZ;
        Double M44;
    };



    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [static_name("Windows.UI.Xaml.Media.Media3D.IMatrix3DHelperStatics", 9264545e-e158-4e74-8899-689160bd2f8c)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Media3D.IMatrix3DHelper", e48c10ef-9927-4c9b-8213-07775512ba04)]
    [threading(both)]
    runtimeclass Matrix3DHelper
    {
        static Windows.UI.Xaml.Media.Media3D.Matrix3D Identity{ get; };
        static Windows.UI.Xaml.Media.Media3D.Matrix3D Multiply(Matrix3D matrix1, Matrix3D matrix2);
        static Windows.UI.Xaml.Media.Media3D.Matrix3D FromElements(Double m11, Double m12, Double m13, Double m14, Double m21, Double m22, Double m23, Double m24, Double m31, Double m32, Double m33, Double m34, Double offsetX, Double offsetY, Double offsetZ, Double m44);
        static Boolean GetHasInverse(Matrix3D target);
        static Boolean GetIsIdentity(Matrix3D target);
        static Windows.UI.Xaml.Media.Media3D.Matrix3D Invert(Matrix3D target);
    }

}
namespace Windows.UI.Xaml.Interop
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    struct TypeName
    {
        String Name;
        TypeKind Kind;
    };

}
namespace Windows.UI.Xaml
{
    [attributename("templatepart")]
    [attributeusage(target_runtimeclass)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [allowmultiple]
    attribute TemplatePartAttribute
    {
        String Name;
        type Type;
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [uuid(b6351c55-c284-46e4-8310-fb0967fab76f)]
    delegate void ApplicationInitializationCallback(ApplicationInitializationCallbackParams p);

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [default_interface]
    [interface_name("Windows.UI.Xaml.IApplicationInitializationCallbackParams", 751b792e-5772-4488-8b87-f547faa64474)]
    runtimeclass ApplicationInitializationCallbackParams
    {
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(d6ecb12c-15b5-4ec8-b95c-cdd208f08153)]
    [webhosthidden]
    delegate Object CreateDefaultValueCallback();

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(45883d16-27bf-4bc1-ac26-94c1601f3a49)]
    [webhosthidden]
    delegate void DependencyPropertyChangedCallback(DependencyObject sender, DependencyProperty dp);

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.IDependencyObjectFactory", 9a03af92-7d8a-4937-884f-ecf34fe02acb)]
    [interface_name("Windows.UI.Xaml.IDependencyObject", 5c526665-f60e-4912-af59-5fe0680f089d)]
    [threading(both)]
    unsealed runtimeclass DependencyObject
    {
        [method_name( "CreateInstance" )]protected DependencyObject();
        Object GetValue(DependencyProperty dp);
        void SetValue(DependencyProperty dp, Object value);
        void ClearValue(DependencyProperty dp);
        Object ReadLocalValue(DependencyProperty dp);
        Object GetAnimationBaseValue(DependencyProperty dp);
        Windows.UI.Core.CoreDispatcher Dispatcher{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.UI.Xaml.IDependencyObject2", 29fed85d-3d22-43a1-add0-17027c08b212)]
        {
            Int64 RegisterPropertyChangedCallback(DependencyProperty dp, DependencyPropertyChangedCallback callback);
            void UnregisterPropertyChangedCallback(DependencyProperty dp, Int64 token);
        }
    }

    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.IDependencyPropertyStatics", 49e5f28f-8259-4d5c-aae0-83d56dbb68d9)]
    [interface_name("Windows.UI.Xaml.IDependencyProperty", 85b13970-9bc4-4e96-acf1-30c8fd3d55c8)]
    [threading(both)]
    runtimeclass DependencyProperty
    {
        static Object UnsetValue{ get; };
        static Windows.UI.Xaml.DependencyProperty Register(String name, Windows.UI.Xaml.Interop.TypeName propertyType, Windows.UI.Xaml.Interop.TypeName ownerType, PropertyMetadata typeMetadata);
        static Windows.UI.Xaml.DependencyProperty RegisterAttached(String name, Windows.UI.Xaml.Interop.TypeName propertyType, Windows.UI.Xaml.Interop.TypeName ownerType, PropertyMetadata defaultMetadata);
        Windows.UI.Xaml.PropertyMetadata GetMetadata(Windows.UI.Xaml.Interop.TypeName forType);
    }

    [webhosthidden]
    [uuid(09223e5a-75be-4499-8180-1ddc005421c0)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    delegate void DependencyPropertyChangedEventHandler(Object sender, DependencyPropertyChangedEventArgs e);

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.IDependencyPropertyChangedEventArgs", 81212c2b-24d0-4957-abc3-224470a93a4e)]
    runtimeclass DependencyPropertyChangedEventArgs
    {
        Windows.UI.Xaml.DependencyProperty Property{ get; };
        Object OldValue{ get; };
        Object NewValue{ get; };
    }

    [uuid(2ab1a205-1e73-4bcf-aabc-57b97e21961d)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    delegate void DragEventHandler(Object sender, DragEventArgs e);

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.IDragEventArgs", b440c7c3-02b4-4980-9342-25dae1c0f188)]
    runtimeclass DragEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        Boolean Handled{ get; };
        Boolean Handled{ set; };
        Windows.ApplicationModel.DataTransfer.DataPackage Data{ get; };
        Windows.ApplicationModel.DataTransfer.DataPackage Data{ set; };
        Windows.Foundation.Point GetPosition(UIElement relativeTo);

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.UI.Xaml.IDragEventArgs2", 26336658-2917-411d-bfc3-2f22471cbbe7)]
        {
            Windows.ApplicationModel.DataTransfer.DataPackageView DataView{ get; };
            Windows.UI.Xaml.DragUIOverride DragUIOverride{ get; };
            Windows.ApplicationModel.DataTransfer.DragDrop.DragDropModifiers Modifiers{ get; };
            Windows.ApplicationModel.DataTransfer.DataPackageOperation AcceptedOperation{ get; };
            Windows.ApplicationModel.DataTransfer.DataPackageOperation AcceptedOperation{ set; };
            Windows.UI.Xaml.DragOperationDeferral GetDeferral();
        }

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [interface_name("Windows.UI.Xaml.IDragEventArgs3", d04fc3c6-8119-427a-8152-5f9550cc0416)]
        {
            Windows.ApplicationModel.DataTransfer.DataPackageOperation AllowedOperations{ get; };
        }
    }

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [uuid(93a956ae-1d7f-438b-b7b8-227d96b609c0)]
    delegate void EnteredBackgroundEventHandler(Object sender, Windows.ApplicationModel.EnteredBackgroundEventArgs e);

    [uuid(68e0e810-f6ea-42bc-855b-5d9b67e6a262)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    delegate void ExceptionRoutedEventHandler(Object sender, ExceptionRoutedEventArgs e);

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.IExceptionRoutedEventArgsFactory", bba9826d-5d7a-44e7-b893-b2ae0dd24273)]
    [interface_name("Windows.UI.Xaml.IExceptionRoutedEventArgs", dd9ff16a-4b62-4a6c-a49d-0671ef6136be)]
    [threading(both)]
    unsealed runtimeclass ExceptionRoutedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        String ErrorMessage{ get; };
    }

    [uuid(aaad5dad-4fc6-4aa4-b7cf-877e36ada4f6)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [webhosthidden]
    delegate void LeavingBackgroundEventHandler(Object sender, Windows.ApplicationModel.LeavingBackgroundEventArgs e);

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [uuid(5a9f8a25-d142-44a4-8231-fd676724f29b)]
    delegate void PropertyChangedCallback(DependencyObject d, DependencyPropertyChangedEventArgs e);

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(a856e674-b0b6-4bc3-bba8-1ba06e40d4b5)]
    delegate void RoutedEventHandler(Object sender, RoutedEventArgs e);

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [constructor_name("Windows.UI.Xaml.IRoutedEventArgsFactory", b61c4d87-70e5-412e-b520-1a41ee76bbf4)]
    [interface_name("Windows.UI.Xaml.IRoutedEventArgs", 5c985ac6-d802-4b38-a223-bf070c43fedf)]
    [threading(both)]
    unsealed runtimeclass RoutedEventArgs
    {
        [method_name( "CreateInstance" )] RoutedEventArgs();
        Object OriginalSource{ get; };
    }

    [uuid(1115b13c-25d2-480b-89dc-eb3dcbd6b7fa)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    delegate void SizeChangedEventHandler(Object sender, SizeChangedEventArgs e);

    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.UI.Xaml.ISizeChangedEventArgs", d5312e60-5cc1-42a1-920c-1af46be2f986)]
    runtimeclass SizeChangedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        Windows.Foundation.Size PreviousSize{ get; };
        Windows.Foundation.Size NewSize{ get; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [uuid(23429465-e36a-40e2-b139-a4704602a6e1)]
    delegate void SuspendingEventHandler(Object sender, Windows.ApplicationModel.SuspendingEventArgs e);

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(9274e6bd-49a1-4958-beee-d0e19587b6e3)]
    [webhosthidden]
    delegate void UnhandledExceptionEventHandler(Object sender, UnhandledExceptionEventArgs e);

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.IUnhandledExceptionEventArgs", 7230269c-054e-4cf3-86c5-be90eb6863d5)]
    runtimeclass UnhandledExceptionEventArgs
    {
        HRESULT Exception{ get; };
        String Message{ get; };
        Boolean Handled{ get; };
        Boolean Handled{ set; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [uuid(e6d5bbd5-e029-43a6-b36d-84a81042d774)]
    delegate void VisualStateChangedEventHandler(Object sender, VisualStateChangedEventArgs e);

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [interface_name("Windows.UI.Xaml.IVisualStateChangedEventArgs", fe216ab1-f31f-4791-8989-c70e1d9b59ff)]
    [threading(both)]
    runtimeclass VisualStateChangedEventArgs
    {
        VisualStateChangedEventArgs();
        Windows.UI.Xaml.VisualState OldState{ get; };
        Windows.UI.Xaml.VisualState OldState{ set; };
        Windows.UI.Xaml.VisualState NewState{ get; };
        Windows.UI.Xaml.VisualState NewState{ set; };
        Windows.UI.Xaml.Controls.Control Control{ get; };
        Windows.UI.Xaml.Controls.Control Control{ set; };
    }

    [uuid(18026348-8619-4c7b-b534-ced45d9de219)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    delegate void WindowActivatedEventHandler(Object sender, Windows.UI.Core.WindowActivatedEventArgs e);

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [uuid(0db89161-20d7-45df-9122-ba89576703ba)]
    delegate void WindowClosedEventHandler(Object sender, Windows.UI.Core.CoreWindowEventArgs e);

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(5c21c742-2ced-4fd9-ba38-7118d40e966b)]
    delegate void WindowSizeChangedEventHandler(Object sender, Windows.UI.Core.WindowSizeChangedEventArgs e);

    [webhosthidden]
    [uuid(10406ad6-b090-4a4a-b2ad-d682df27130f)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    delegate void WindowVisibilityChangedEventHandler(Object sender, Windows.UI.Core.VisibilityChangedEventArgs e);

}
namespace Windows.UI.Xaml.Media
{
    [uuid(08e9a257-ae05-489b-8839-28c6225d2349)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    delegate void RateChangedRoutedEventHandler(Object sender, RateChangedRoutedEventArgs e);

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.IRateChangedRoutedEventArgs", 9016aa6f-3ca8-4c80-8e2f-8851a68f131f)]
    [threading(both)]
    runtimeclass RateChangedRoutedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        RateChangedRoutedEventArgs();
    }

    [webhosthidden]
    [uuid(72e2fa9c-6dea-4cbe-a159-06ce95fbeced)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    delegate void TimelineMarkerRoutedEventHandler(Object sender, TimelineMarkerRoutedEventArgs e);

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.Media.ITimelineMarkerRoutedEventArgs", 7c3b3ef3-2c88-4d9c-99b6-46cdbd48d4c1)]
    [threading(both)]
    runtimeclass TimelineMarkerRoutedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        TimelineMarkerRoutedEventArgs();
        Windows.UI.Xaml.Media.TimelineMarker Marker{ get; };
        Windows.UI.Xaml.Media.TimelineMarker Marker{ set; };
    }

}
namespace Windows.UI.Xaml.Media.Animation
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [attributename("conditionallyindependentlyanimatable")]
    [attributeusage(target_property)]
    attribute ConditionallyIndependentlyAnimatableAttribute
    {
    };

    [attributename("independentlyanimatable")]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [attributeusage(target_property)]
    attribute IndependentlyAnimatableAttribute
    {
    };

}
namespace Windows.UI.Xaml.Input
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(3124d025-04a7-4d45-825e-8204a624dbf4)]
    delegate void DoubleTappedEventHandler(Object sender, DoubleTappedRoutedEventArgs e);

    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs", af404424-26df-44f4-8714-9359249b62d3)]
    [threading(both)]
    runtimeclass DoubleTappedRoutedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        DoubleTappedRoutedEventArgs();
        Windows.Devices.Input.PointerDeviceType PointerDeviceType{ get; };
        Boolean Handled{ get; };
        Boolean Handled{ set; };
        Windows.Foundation.Point GetPosition(Windows.UI.Xaml.UIElement relativeTo);
    }

    [uuid(ecae8ccd-8e5e-4fbe-9846-30a6370afcdf)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    delegate void HoldingEventHandler(Object sender, HoldingRoutedEventArgs e);

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [interface_name("Windows.UI.Xaml.Input.IHoldingRoutedEventArgs", c246ff23-d80d-44de-8db9-0d815e269ac0)]
    [threading(both)]
    runtimeclass HoldingRoutedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        HoldingRoutedEventArgs();
        Windows.Devices.Input.PointerDeviceType PointerDeviceType{ get; };
        Windows.UI.Input.HoldingState HoldingState{ get; };
        Boolean Handled{ get; };
        Boolean Handled{ set; };
        Windows.Foundation.Point GetPosition(Windows.UI.Xaml.UIElement relativeTo);
    }

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(7c63d2e5-7a0e-4e12-b96a-7715aa6ff1c8)]
    delegate void KeyEventHandler(Object sender, KeyRoutedEventArgs e);

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [interface_name("Windows.UI.Xaml.Input.IKeyRoutedEventArgs", d4cd3dfe-4079-42e9-a39a-3095d3f049c6)]
    runtimeclass KeyRoutedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        Windows.System.VirtualKey Key{ get; };
        Windows.UI.Core.CorePhysicalKeyStatus KeyStatus{ get; };
        Boolean Handled{ get; };
        Boolean Handled{ set; };

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.UI.Xaml.Input.IKeyRoutedEventArgs2", 1b02d57a-9634-4f14-91b2-133e42fdb3cd)]
        {
            Windows.System.VirtualKey OriginalKey{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [interface_name("Windows.UI.Xaml.Input.IKeyRoutedEventArgs3", 2779f5b4-ca41-411b-a8ef-f4fc78e78057)]
        {
            String DeviceId{ get; };
        }
    }

    [webhosthidden]
    [uuid(38ef4b0f-14f8-42df-9a1e-a4bcc4af77f4)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    delegate void ManipulationCompletedEventHandler(Object sender, ManipulationCompletedRoutedEventArgs e);

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [interface_name("Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs", b5ad9b23-2f41-498e-8319-015ee8a75346)]
    [threading(both)]
    runtimeclass ManipulationCompletedRoutedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        ManipulationCompletedRoutedEventArgs();
        Windows.UI.Xaml.UIElement Container{ get; };
        Windows.Foundation.Point Position{ get; };
        Boolean IsInertial{ get; };
        Windows.UI.Input.ManipulationDelta Cumulative{ get; };
        Windows.UI.Input.ManipulationVelocities Velocities{ get; };
        Boolean Handled{ get; };
        Boolean Handled{ set; };
        Windows.Devices.Input.PointerDeviceType PointerDeviceType{ get; };
    }

    [webhosthidden]
    [uuid(aa1160cb-dfb9-4c56-abdc-711b63c8eb94)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    delegate void ManipulationDeltaEventHandler(Object sender, ManipulationDeltaRoutedEventArgs e);

    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs", 400d5794-4c6f-491d-82d6-3517109399c6)]
    [threading(both)]
    runtimeclass ManipulationDeltaRoutedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        ManipulationDeltaRoutedEventArgs();
        Windows.UI.Xaml.UIElement Container{ get; };
        Windows.Foundation.Point Position{ get; };
        Boolean IsInertial{ get; };
        Windows.UI.Input.ManipulationDelta Delta{ get; };
        Windows.UI.Input.ManipulationDelta Cumulative{ get; };
        Windows.UI.Input.ManipulationVelocities Velocities{ get; };
        Boolean Handled{ get; };
        Boolean Handled{ set; };
        Windows.Devices.Input.PointerDeviceType PointerDeviceType{ get; };
        void Complete();
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(d39d6322-7c9c-481b-827b-c8b2d9bb6fc7)]
    [webhosthidden]
    delegate void ManipulationInertiaStartingEventHandler(Object sender, ManipulationInertiaStartingRoutedEventArgs e);

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [interface_name("Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs", 246a91a9-ca43-4c0b-acef-81e8b8147520)]
    [threading(both)]
    runtimeclass ManipulationInertiaStartingRoutedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        ManipulationInertiaStartingRoutedEventArgs();
        Windows.UI.Xaml.UIElement Container{ get; };
        Windows.UI.Xaml.Input.InertiaExpansionBehavior ExpansionBehavior{ get; };
        Windows.UI.Xaml.Input.InertiaExpansionBehavior ExpansionBehavior{ set; };
        Windows.UI.Xaml.Input.InertiaRotationBehavior RotationBehavior{ get; };
        Windows.UI.Xaml.Input.InertiaRotationBehavior RotationBehavior{ set; };
        Windows.UI.Xaml.Input.InertiaTranslationBehavior TranslationBehavior{ get; };
        Windows.UI.Xaml.Input.InertiaTranslationBehavior TranslationBehavior{ set; };
        Boolean Handled{ get; };
        Boolean Handled{ set; };
        Windows.Devices.Input.PointerDeviceType PointerDeviceType{ get; };
        Windows.UI.Input.ManipulationDelta Delta{ get; };
        Windows.UI.Input.ManipulationDelta Cumulative{ get; };
        Windows.UI.Input.ManipulationVelocities Velocities{ get; };
    }

    [uuid(f88345f8-e0a3-4be2-b90c-dc20e6d8beb0)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    delegate void ManipulationStartedEventHandler(Object sender, ManipulationStartedRoutedEventArgs e);

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgsFactory", 84c1daa7-7272-4463-b6c3-a40b9ba151fc)]
    [interface_name("Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs", 5db1aa05-9f80-48b6-ae6c-4f119de8ff13)]
    [threading(both)]
    unsealed runtimeclass ManipulationStartedRoutedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        [method_name( "CreateInstance" )] ManipulationStartedRoutedEventArgs();
        Windows.UI.Xaml.UIElement Container{ get; };
        Windows.Foundation.Point Position{ get; };
        Boolean Handled{ get; };
        Boolean Handled{ set; };
        Windows.Devices.Input.PointerDeviceType PointerDeviceType{ get; };
        Windows.UI.Input.ManipulationDelta Cumulative{ get; };
        void Complete();
    }

    [uuid(10d0b04e-bfe4-42cb-823c-3fecd8770ef8)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    delegate void ManipulationStartingEventHandler(Object sender, ManipulationStartingRoutedEventArgs e);

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [interface_name("Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs", 18d636b7-53a4-4c15-a498-f3a9ca212a42)]
    [threading(both)]
    runtimeclass ManipulationStartingRoutedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        ManipulationStartingRoutedEventArgs();
        Windows.UI.Xaml.Input.ManipulationModes Mode{ get; };
        Windows.UI.Xaml.Input.ManipulationModes Mode{ set; };
        Windows.UI.Xaml.UIElement Container{ get; };
        Windows.UI.Xaml.UIElement Container{ set; };
        Windows.UI.Xaml.Input.ManipulationPivot Pivot{ get; };
        Windows.UI.Xaml.Input.ManipulationPivot Pivot{ set; };
        Boolean Handled{ get; };
        Boolean Handled{ set; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [uuid(e4385929-c004-4bcf-8970-359486e39f88)]
    delegate void PointerEventHandler(Object sender, PointerRoutedEventArgs e);

    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.UI.Xaml.Input.IPointerRoutedEventArgs", da628f0a-9752-49e2-bde2-49eccab9194d)]
    runtimeclass PointerRoutedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        Windows.UI.Xaml.Input.Pointer Pointer{ get; };
        Windows.System.VirtualKeyModifiers KeyModifiers{ get; };
        Boolean Handled{ get; };
        Boolean Handled{ set; };
        Windows.UI.Input.PointerPoint GetCurrentPoint(Windows.UI.Xaml.UIElement relativeTo);
        Windows.Foundation.Collections.IVector <Windows.UI.Input.PointerPoint>  GetIntermediatePoints(Windows.UI.Xaml.UIElement relativeTo);

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [interface_name("Windows.UI.Xaml.Input.IPointerRoutedEventArgs2", 0821f294-1de6-4711-ba7c-8d4b8b0911d0)]
        {
            Boolean IsGenerated{ get; };
        }
    }

    [webhosthidden]
    [uuid(2532a062-f447-4950-9c46-f1e34a2c2238)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    delegate void RightTappedEventHandler(Object sender, RightTappedRoutedEventArgs e);

    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs", 6834869d-7bd5-4033-b237-172f79abe393)]
    [threading(both)]
    runtimeclass RightTappedRoutedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        RightTappedRoutedEventArgs();
        Windows.Devices.Input.PointerDeviceType PointerDeviceType{ get; };
        Boolean Handled{ get; };
        Boolean Handled{ set; };
        Windows.Foundation.Point GetPosition(Windows.UI.Xaml.UIElement relativeTo);
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(68d940cc-9ff0-49ce-b141-3f07ec477b97)]
    [webhosthidden]
    delegate void TappedEventHandler(Object sender, TappedRoutedEventArgs e);

    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.UI.Xaml.Input.ITappedRoutedEventArgs", a099e6be-e624-459a-bb1d-e05c73e2cc66)]
    [threading(both)]
    runtimeclass TappedRoutedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        TappedRoutedEventArgs();
        Windows.Devices.Input.PointerDeviceType PointerDeviceType{ get; };
        Boolean Handled{ get; };
        Boolean Handled{ set; };
        Windows.Foundation.Point GetPosition(Windows.UI.Xaml.UIElement relativeTo);
    }

}
namespace Windows.UI.Xaml.Media.Imaging
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(1abaee23-74ee-4cc7-99ba-b171e3cda61e)]
    [webhosthidden]
    delegate void DownloadProgressEventHandler(Object sender, DownloadProgressEventArgs e);

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.Media.Imaging.IDownloadProgressEventArgs", 7311e0d4-fe94-4e70-9b90-cdd47ac23afb)]
    runtimeclass DownloadProgressEventArgs
    {
        Int32 Progress{ get; };
        Int32 Progress{ set; };
    }

}
namespace Windows.UI.Xaml.Data
{
    [attributeusage(target_runtimeclass)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [attributename("bindable")]
    attribute BindableAttribute
    {
    };

    [webhosthidden]
    [uuid(f3888db8-139f-4dce-8dc9-f7f1444d1185)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    delegate void CurrentChangingEventHandler(Object sender, CurrentChangingEventArgs e);

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [constructor_name("Windows.UI.Xaml.Data.ICurrentChangingEventArgsFactory", 153bbeee-62f3-48cf-8183-8be26de3a66e)]
    [interface_name("Windows.UI.Xaml.Data.ICurrentChangingEventArgs", f9891e29-51cc-47dd-a5b9-35dc4914af69)]
    [threading(both)]
    unsealed runtimeclass CurrentChangingEventArgs
    {
        [method_name( "CreateInstance" )] CurrentChangingEventArgs();
        [method_name( "CreateWithCancelableParameter" )] CurrentChangingEventArgs(Boolean isCancelable);
        Boolean Cancel{ get; };
        Boolean Cancel{ set; };
        Boolean IsCancelable{ get; };
    }

    [webhosthidden]
    [uuid(50f19c16-0a22-4d8e-a089-1ea9951657d2)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    delegate void PropertyChangedEventHandler(Object sender, PropertyChangedEventArgs e);

    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [constructor_name("Windows.UI.Xaml.Data.IPropertyChangedEventArgsFactory", 6dcc9c03-e0c7-4eee-8ea9-37e3406eeb1c)]
    [interface_name("Windows.UI.Xaml.Data.IPropertyChangedEventArgs", 4f33a9a0-5cf4-47a4-b16f-d7faaf17457e)]
    [threading(both)]
    unsealed runtimeclass PropertyChangedEventArgs
    {
        [method_name( "CreateInstance" )] PropertyChangedEventArgs(String name);
        String PropertyName{ get; };
    }

}
namespace Windows.UI.Xaml.Markup
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [attributename("contentproperty")]
    [attributeusage(target_runtimeclass)]
    attribute ContentPropertyAttribute
    {
        String Name;
    };

}
namespace Windows.Foundation.Metadata
{
    [attributeusage(target_runtimeclass, target_struct)]
    [attributename("createfromstring")]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [webhosthidden]
    attribute CreateFromStringAttribute
    {
        String MethodName;
    };



}
namespace Windows.UI.Text
{
    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Text.IFontWeightsStatics", b3b579d5-1ba9-48eb-9dad-c095e8c23ba3)]
    [default_interface]
    [interface_name("Windows.UI.Text.IFontWeights", 7880a444-01ab-4997-8517-df822a0c45f1)]
    [threading(both)]
    runtimeclass FontWeights
    {
        static Windows.UI.Text.FontWeight Black{ get; };
        static Windows.UI.Text.FontWeight Bold{ get; };
        static Windows.UI.Text.FontWeight ExtraBlack{ get; };
        static Windows.UI.Text.FontWeight ExtraBold{ get; };
        static Windows.UI.Text.FontWeight ExtraLight{ get; };
        static Windows.UI.Text.FontWeight Light{ get; };
        static Windows.UI.Text.FontWeight Medium{ get; };
        static Windows.UI.Text.FontWeight Normal{ get; };
        static Windows.UI.Text.FontWeight SemiBold{ get; };
        static Windows.UI.Text.FontWeight SemiLight{ get; };
        static Windows.UI.Text.FontWeight Thin{ get; };
    }

}
namespace Windows.UI.Xaml
{
    [contract(Windows.Foundation.UniversalApiContract, 7)]
    [webhosthidden]
    [uuid(17d2ad90-1370-55c8-80e1-78b49004a9e1)]
    interface IElementFactory
    {
        Windows.UI.Xaml.UIElement GetElement(ElementFactoryGetArgs args);
        void RecycleElement(ElementFactoryRecycleArgs args);
    };

    [contract(Windows.Foundation.UniversalApiContract, 7)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.IElementFactoryGetArgsFactory", c3b6dae7-883b-5fd7-be80-2059d877e783)]
    [interface_name("Windows.UI.Xaml.IElementFactoryGetArgs", fb508774-41a3-5829-9255-cf452d041df4)]
    [threading(both)]
    unsealed runtimeclass ElementFactoryGetArgs
    {
        [method_name( "CreateInstance" )] ElementFactoryGetArgs();
        Object Data{ get; };
        Object Data{ set; };
        Windows.UI.Xaml.UIElement Parent{ get; };
        Windows.UI.Xaml.UIElement Parent{ set; };
    }

    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.IUIElementStatics3", d1f87ade-eca1-4561-a32b-64601b4e0597)]
    [constructor_name("Windows.UI.Xaml.IUIElementFactory", b9ee93fe-a338-419f-ac32-91dcaadf5d08)]
    [interface_name("Windows.UI.Xaml.IUIElement", 676d0be9-b65c-41c6-ba40-58cf87f201c1)]
    [threading(both)]
    unsealed runtimeclass UIElement
        : Windows.UI.Xaml.DependencyObject
        , [contract(Windows.Foundation.UniversalApiContract, 7)]
        Windows.UI.Composition.IAnimationObject
        , [contract(Windows.Foundation.UniversalApiContract, 8)]
        Windows.UI.Composition.IVisualElement
    {

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [static_name("Windows.UI.Xaml.IUIElementStatics5", 59bd7d91-8fa3-4c65-ba1b-40df38556cbb)]
        {
            static Windows.UI.Xaml.DependencyProperty LightsProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty KeyTipPlacementModeProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty KeyTipHorizontalOffsetProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty KeyTipVerticalOffsetProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty XYFocusKeyboardNavigationProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty XYFocusUpNavigationStrategyProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty XYFocusDownNavigationStrategyProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty XYFocusLeftNavigationStrategyProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty XYFocusRightNavigationStrategyProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty HighContrastAdjustmentProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty TabFocusNavigationProperty{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [static_name("Windows.UI.Xaml.IUIElementStatics4", 1d157d61-16af-411f-b774-272375a4ac2c)]
        {
            static Windows.UI.Xaml.DependencyProperty ContextFlyoutProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty ExitDisplayModeOnAccessKeyInvokedProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty IsAccessKeyScopeProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty AccessKeyScopeOwnerProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty AccessKeyProperty{ get; };
        }
        [independentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty Transform3DProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty CanDragProperty{ get; };
        static Boolean TryStartDirectManipulation(Windows.UI.Xaml.Input.Pointer value);

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [static_name("Windows.UI.Xaml.IUIElementStatics2", 58d3574b-f53c-45be-989b-a5869564874c)]
        {
            static Windows.UI.Xaml.DependencyProperty CompositeModeProperty{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [static_name("Windows.UI.Xaml.IUIElementStatics", 58d3573b-f52c-45be-988b-a5869564873c)]
        {
            static Windows.UI.Xaml.RoutedEvent KeyDownEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent KeyUpEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent PointerEnteredEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent PointerPressedEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent PointerMovedEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent PointerReleasedEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent PointerExitedEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent PointerCaptureLostEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent PointerCanceledEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent PointerWheelChangedEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent TappedEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent DoubleTappedEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent HoldingEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent RightTappedEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent ManipulationStartingEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent ManipulationInertiaStartingEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent ManipulationStartedEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent ManipulationDeltaEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent ManipulationCompletedEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent DragEnterEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent DragLeaveEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent DragOverEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent DropEvent{ get; };
            static Windows.UI.Xaml.DependencyProperty AllowDropProperty{ get; };
            [independentlyanimatable]
            static Windows.UI.Xaml.DependencyProperty OpacityProperty{ get; };
            [independentlyanimatable]
            static Windows.UI.Xaml.DependencyProperty ClipProperty{ get; };
            [independentlyanimatable]
            static Windows.UI.Xaml.DependencyProperty RenderTransformProperty{ get; };
            [independentlyanimatable]
            static Windows.UI.Xaml.DependencyProperty ProjectionProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty RenderTransformOriginProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty IsHitTestVisibleProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty VisibilityProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty UseLayoutRoundingProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty TransitionsProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty CacheModeProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty IsTapEnabledProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty IsDoubleTapEnabledProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty IsRightTapEnabledProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty IsHoldingEnabledProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty ManipulationModeProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty PointerCapturesProperty{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [static_name("Windows.UI.Xaml.IUIElementStatics9", 71467e77-8ca3-5ed7-95db-d51cdad77f81)]
        {
            static Windows.UI.Xaml.DependencyProperty CanBeScrollAnchorProperty{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [static_name("Windows.UI.Xaml.IUIElementStatics6", 647e03b7-036a-4dea-9540-1dd7fd1266f1)]
        {
            static Windows.UI.Xaml.RoutedEvent GettingFocusEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent LosingFocusEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent NoFocusCandidateFoundEvent{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 8)]
        [static_name("Windows.UI.Xaml.IUIElementStatics10", 60d25362-4b3e-53da-8b78-38db94ae8f26)]
        {
            static Windows.UI.Xaml.DependencyProperty ShadowProperty{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [static_name("Windows.UI.Xaml.IUIElementStatics8", 17be3487-4875-4915-b0b1-a4c0f851df3f)]
        {
            static Windows.UI.Xaml.RoutedEvent BringIntoViewRequestedEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent ContextRequestedEvent{ get; };
            static Windows.UI.Xaml.DependencyProperty KeyTipTargetProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty KeyboardAcceleratorPlacementTargetProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty KeyboardAcceleratorPlacementModeProperty{ get; };
            static void RegisterAsScrollPort(UIElement element);
        }

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [static_name("Windows.UI.Xaml.IUIElementStatics7", da9b4493-a695-4145-ae93-888024396a0f)]
        {
            static Windows.UI.Xaml.RoutedEvent PreviewKeyDownEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent CharacterReceivedEvent{ get; };
            static Windows.UI.Xaml.RoutedEvent PreviewKeyUpEvent{ get; };
        }
        Windows.Foundation.Size DesiredSize{ get; };
        Boolean AllowDrop{ get; };
        Boolean AllowDrop{ set; };
        Double Opacity{ get; };
        Double Opacity{ set; };
        Windows.UI.Xaml.Media.RectangleGeometry Clip{ get; };
        Windows.UI.Xaml.Media.RectangleGeometry Clip{ set; };
        Windows.UI.Xaml.Media.Transform RenderTransform{ get; };
        Windows.UI.Xaml.Media.Transform RenderTransform{ set; };
        Windows.UI.Xaml.Media.Projection Projection{ get; };
        Windows.UI.Xaml.Media.Projection Projection{ set; };
        Windows.Foundation.Point RenderTransformOrigin{ get; };
        Windows.Foundation.Point RenderTransformOrigin{ set; };
        Boolean IsHitTestVisible{ get; };
        Boolean IsHitTestVisible{ set; };
        Windows.UI.Xaml.Visibility Visibility{ get; };
        Windows.UI.Xaml.Visibility Visibility{ set; };
        Windows.Foundation.Size RenderSize{ get; };
        Boolean UseLayoutRounding{ get; };
        Boolean UseLayoutRounding{ set; };
        Windows.UI.Xaml.Media.Animation.TransitionCollection Transitions{ get; };
        Windows.UI.Xaml.Media.Animation.TransitionCollection Transitions{ set; };
        Windows.UI.Xaml.Media.CacheMode CacheMode{ get; };
        Windows.UI.Xaml.Media.CacheMode CacheMode{ set; };
        Boolean IsTapEnabled{ get; };
        Boolean IsTapEnabled{ set; };
        Boolean IsDoubleTapEnabled{ get; };
        Boolean IsDoubleTapEnabled{ set; };
        Boolean IsRightTapEnabled{ get; };
        Boolean IsRightTapEnabled{ set; };
        Boolean IsHoldingEnabled{ get; };
        Boolean IsHoldingEnabled{ set; };
        Windows.UI.Xaml.Input.ManipulationModes ManipulationMode{ get; };
        Windows.UI.Xaml.Input.ManipulationModes ManipulationMode{ set; };
        Windows.Foundation.Collections.IVectorView <Windows.UI.Xaml.Input.Pointer>  PointerCaptures{ get; };
        event Windows.UI.Xaml.Input.KeyEventHandler KeyUp;
        event Windows.UI.Xaml.Input.KeyEventHandler KeyDown;
        event Windows.UI.Xaml.RoutedEventHandler GotFocus;
        event Windows.UI.Xaml.RoutedEventHandler LostFocus;
        event Windows.UI.Xaml.DragEventHandler DragEnter;
        event Windows.UI.Xaml.DragEventHandler DragLeave;
        event Windows.UI.Xaml.DragEventHandler DragOver;
        event Windows.UI.Xaml.DragEventHandler Drop;
        event Windows.UI.Xaml.Input.PointerEventHandler PointerPressed;
        event Windows.UI.Xaml.Input.PointerEventHandler PointerMoved;
        event Windows.UI.Xaml.Input.PointerEventHandler PointerReleased;
        event Windows.UI.Xaml.Input.PointerEventHandler PointerEntered;
        event Windows.UI.Xaml.Input.PointerEventHandler PointerExited;
        event Windows.UI.Xaml.Input.PointerEventHandler PointerCaptureLost;
        event Windows.UI.Xaml.Input.PointerEventHandler PointerCanceled;
        event Windows.UI.Xaml.Input.PointerEventHandler PointerWheelChanged;
        event Windows.UI.Xaml.Input.TappedEventHandler Tapped;
        event Windows.UI.Xaml.Input.DoubleTappedEventHandler DoubleTapped;
        event Windows.UI.Xaml.Input.HoldingEventHandler Holding;
        event Windows.UI.Xaml.Input.RightTappedEventHandler RightTapped;
        event Windows.UI.Xaml.Input.ManipulationStartingEventHandler ManipulationStarting;
        event Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler ManipulationInertiaStarting;
        event Windows.UI.Xaml.Input.ManipulationStartedEventHandler ManipulationStarted;
        event Windows.UI.Xaml.Input.ManipulationDeltaEventHandler ManipulationDelta;
        event Windows.UI.Xaml.Input.ManipulationCompletedEventHandler ManipulationCompleted;
        void Measure(Windows.Foundation.Size availableSize);
        void Arrange(Windows.Foundation.Rect finalRect);
        Boolean CapturePointer(Windows.UI.Xaml.Input.Pointer value);
        void ReleasePointerCapture(Windows.UI.Xaml.Input.Pointer value);
        void ReleasePointerCaptures();
        void AddHandler(RoutedEvent routedEvent, Object handler, Boolean handledEventsToo);
        void RemoveHandler(RoutedEvent routedEvent, Object handler);
        Windows.UI.Xaml.Media.GeneralTransform TransformToVisual(UIElement visual);
        void InvalidateMeasure();
        void InvalidateArrange();
        void UpdateLayout();

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.UI.Xaml.IUIElement2", 676d0bf9-b66c-41d6-ba50-58cf87f201d1)]
        {
            Windows.UI.Xaml.Media.ElementCompositeMode CompositeMode{ get; };
            Windows.UI.Xaml.Media.ElementCompositeMode CompositeMode{ set; };
            Boolean CancelDirectManipulations();
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.UI.Xaml.IUIElement3", bc2b28f1-26f2-4aab-b256-3b5350881e37)]
        {
            Windows.UI.Xaml.Media.Media3D.Transform3D Transform3D{ get; };
            Windows.UI.Xaml.Media.Media3D.Transform3D Transform3D{ set; };
            Boolean CanDrag{ get; };
            Boolean CanDrag{ set; };
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.UIElement, Windows.UI.Xaml.DragStartingEventArgs>  DragStarting;
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.UIElement, Windows.UI.Xaml.DropCompletedEventArgs>  DropCompleted;
            Windows.Foundation.IAsyncOperation <Windows.ApplicationModel.DataTransfer.DataPackageOperation>  StartDragAsync(Windows.UI.Input.PointerPoint pointerPoint);
        }

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [interface_name("Windows.UI.Xaml.IUIElement4", 69145cd4-199a-4657-9e57-e99e8f136712)]
        {
            Windows.UI.Xaml.Controls.Primitives.FlyoutBase ContextFlyout{ get; };
            Windows.UI.Xaml.Controls.Primitives.FlyoutBase ContextFlyout{ set; };
            Boolean ExitDisplayModeOnAccessKeyInvoked{ get; };
            Boolean ExitDisplayModeOnAccessKeyInvoked{ set; };
            Boolean IsAccessKeyScope{ get; };
            Boolean IsAccessKeyScope{ set; };
            Windows.UI.Xaml.DependencyObject AccessKeyScopeOwner{ get; };
            Windows.UI.Xaml.DependencyObject AccessKeyScopeOwner{ set; };
            String AccessKey{ get; };
            String AccessKey{ set; };
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.UIElement, Windows.UI.Xaml.Input.ContextRequestedEventArgs>  ContextRequested;
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.UIElement, Windows.UI.Xaml.RoutedEventArgs>  ContextCanceled;
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.UIElement, Windows.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs>  AccessKeyDisplayRequested;
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.UIElement, Windows.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs>  AccessKeyDisplayDismissed;
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.UIElement, Windows.UI.Xaml.Input.AccessKeyInvokedEventArgs>  AccessKeyInvoked;
        }

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [interface_name("Windows.UI.Xaml.IUIElement5", 8eed9bc2-a58c-4453-af0f-a92ee06d0317)]
        {
            Windows.Foundation.Collections.IVector <Windows.UI.Xaml.Media.XamlLight>  Lights{ get; };
            Windows.UI.Xaml.Input.KeyTipPlacementMode KeyTipPlacementMode{ get; };
            Windows.UI.Xaml.Input.KeyTipPlacementMode KeyTipPlacementMode{ set; };
            Double KeyTipHorizontalOffset{ get; };
            Double KeyTipHorizontalOffset{ set; };
            Double KeyTipVerticalOffset{ get; };
            Double KeyTipVerticalOffset{ set; };
            Windows.UI.Xaml.Input.XYFocusKeyboardNavigationMode XYFocusKeyboardNavigation{ get; };
            Windows.UI.Xaml.Input.XYFocusKeyboardNavigationMode XYFocusKeyboardNavigation{ set; };
            Windows.UI.Xaml.Input.XYFocusNavigationStrategy XYFocusUpNavigationStrategy{ get; };
            Windows.UI.Xaml.Input.XYFocusNavigationStrategy XYFocusUpNavigationStrategy{ set; };
            Windows.UI.Xaml.Input.XYFocusNavigationStrategy XYFocusDownNavigationStrategy{ get; };
            Windows.UI.Xaml.Input.XYFocusNavigationStrategy XYFocusDownNavigationStrategy{ set; };
            Windows.UI.Xaml.Input.XYFocusNavigationStrategy XYFocusLeftNavigationStrategy{ get; };
            Windows.UI.Xaml.Input.XYFocusNavigationStrategy XYFocusLeftNavigationStrategy{ set; };
            Windows.UI.Xaml.Input.XYFocusNavigationStrategy XYFocusRightNavigationStrategy{ get; };
            Windows.UI.Xaml.Input.XYFocusNavigationStrategy XYFocusRightNavigationStrategy{ set; };
            Windows.UI.Xaml.ElementHighContrastAdjustment HighContrastAdjustment{ get; };
            Windows.UI.Xaml.ElementHighContrastAdjustment HighContrastAdjustment{ set; };
            Windows.UI.Xaml.Input.KeyboardNavigationMode TabFocusNavigation{ get; };
            Windows.UI.Xaml.Input.KeyboardNavigationMode TabFocusNavigation{ set; };
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.UIElement, Windows.UI.Xaml.Input.GettingFocusEventArgs>  GettingFocus;
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.UIElement, Windows.UI.Xaml.Input.LosingFocusEventArgs>  LosingFocus;
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.UIElement, Windows.UI.Xaml.Input.NoFocusCandidateFoundEventArgs>  NoFocusCandidateFound;
            [method_name("StartBringIntoView")] void StartBringIntoView();
            [method_name("StartBringIntoViewWithOptions")] void StartBringIntoView(BringIntoViewOptions options);
        }

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [interface_name("Windows.UI.Xaml.IUIElement7", cafc4968-6369-4249-80f9-3d656319e811)]
        {
            Windows.Foundation.Collections.IVector <Windows.UI.Xaml.Input.KeyboardAccelerator>  KeyboardAccelerators{ get; };
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.UIElement, Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs>  CharacterReceived;
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.UIElement, Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs>  ProcessKeyboardAccelerators;
            event Windows.UI.Xaml.Input.KeyEventHandler PreviewKeyDown;
            event Windows.UI.Xaml.Input.KeyEventHandler PreviewKeyUp;
            void TryInvokeKeyboardAccelerator(Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args);
        }

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [interface_name("Windows.UI.Xaml.IUIElement8", 3ab70e85-d508-4477-b6f8-0e435701c836)]
        {
            Windows.UI.Xaml.DependencyObject KeyTipTarget{ get; };
            Windows.UI.Xaml.DependencyObject KeyTipTarget{ set; };
            Windows.UI.Xaml.DependencyObject KeyboardAcceleratorPlacementTarget{ get; };
            Windows.UI.Xaml.DependencyObject KeyboardAcceleratorPlacementTarget{ set; };
            Windows.UI.Xaml.Input.KeyboardAcceleratorPlacementMode KeyboardAcceleratorPlacementMode{ get; };
            Windows.UI.Xaml.Input.KeyboardAcceleratorPlacementMode KeyboardAcceleratorPlacementMode{ set; };
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.UIElement, Windows.UI.Xaml.BringIntoViewRequestedEventArgs>  BringIntoViewRequested;
        }

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [feature(Velocity_SometimesAlwaysDisabled)]
        [interface_name("Windows.UI.Xaml.IUIElementFeature_Xaml2018", 848124d1-aef6-4d13-a744-1456fef2599e)]
        {
            Windows.Foundation.Collections.IVector <Windows.UI.Xaml.InteractionBase>  Interactions{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [interface_name("Windows.UI.Xaml.IUIElement9", b4a04776-4e88-50ca-8f2b-08940d6c5f94)]
        {
            Boolean CanBeScrollAnchor{ get; };
            Boolean CanBeScrollAnchor{ set; };
            Windows.UI.Xaml.ScalarTransition OpacityTransition{ get; };
            Windows.UI.Xaml.ScalarTransition OpacityTransition{ set; };
            Windows.Foundation.Numerics.Vector3 Translation{ get; };
            Windows.Foundation.Numerics.Vector3 Translation{ set; };
            Windows.UI.Xaml.Vector3Transition TranslationTransition{ get; };
            Windows.UI.Xaml.Vector3Transition TranslationTransition{ set; };
            Single Rotation{ get; };
            Single Rotation{ set; };
            Windows.UI.Xaml.ScalarTransition RotationTransition{ get; };
            Windows.UI.Xaml.ScalarTransition RotationTransition{ set; };
            Windows.Foundation.Numerics.Vector3 Scale{ get; };
            Windows.Foundation.Numerics.Vector3 Scale{ set; };
            Windows.UI.Xaml.Vector3Transition ScaleTransition{ get; };
            Windows.UI.Xaml.Vector3Transition ScaleTransition{ set; };
            Windows.Foundation.Numerics.Matrix4x4 TransformMatrix{ get; };
            Windows.Foundation.Numerics.Matrix4x4 TransformMatrix{ set; };
            Windows.Foundation.Numerics.Vector3 CenterPoint{ get; };
            Windows.Foundation.Numerics.Vector3 CenterPoint{ set; };
            Windows.Foundation.Numerics.Vector3 RotationAxis{ get; };
            Windows.Foundation.Numerics.Vector3 RotationAxis{ set; };
            void StartAnimation(Windows.UI.Composition.ICompositionAnimationBase animation);
            void StopAnimation(Windows.UI.Composition.ICompositionAnimationBase animation);
        }

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [feature(Velocity_SometimesAlwaysDisabled)]
        [interface_name("Windows.UI.Xaml.IUIElementFeature_XamlMotionSystemHoldbacks", e5c7ce60-bb0f-5bd7-ac72-0c7360b6bc30)]
        {
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.UIElement, Object>  TranslationChanged;
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.UIElement, Object>  RotationChanged;
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.UIElement, Object>  ScaleChanged;
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.UIElement, Object>  TransformMatrixChanged;
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.UIElement, Object>  CenterPointChanged;
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.UIElement, Object>  RotationAxisChanged;
            event Windows.Foundation.EventHandler <Object>  Shown;
            event Windows.Foundation.EventHandler <Object>  Hidden;
        }

        [contract(Windows.Foundation.UniversalApiContract, 8)]
        [interface_name("Windows.UI.Xaml.IUIElement10", d531c629-ad2c-5f6b-adcf-fb87287d18d7)]
        {
            Windows.Foundation.Numerics.Vector3 ActualOffset{ get; };
            Windows.Foundation.Numerics.Vector2 ActualSize{ get; };
            Windows.UI.Xaml.XamlRoot XamlRoot{ get; };
            Windows.UI.Xaml.XamlRoot XamlRoot{ set; };
            Windows.UI.UIContext UIContext{ get; };
            Windows.UI.Xaml.Media.Shadow Shadow{ get; };
            Windows.UI.Xaml.Media.Shadow Shadow{ set; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [overridable_name("Windows.UI.Xaml.IUIElementOverrides", 608d2f1d-7858-4aeb-89e4-b54e2c7ed3d3)]
        {
            overridable Windows.UI.Xaml.Automation.Peers.AutomationPeer OnCreateAutomationPeer();
            overridable void OnDisconnectVisualChildren();
            overridable Windows.Foundation.Collections.IIterable <Windows.Foundation.Collections.IIterable <Windows.Foundation.Point> >  FindSubElementsForTouchTargeting(Windows.Foundation.Point point, Windows.Foundation.Rect boundingRect);
        }

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [overridable_name("Windows.UI.Xaml.IUIElementOverrides7", b97f7f68-c29b-4c99-a1c3-952619d6e720)]
        {
            overridable Windows.Foundation.Collections.IIterable <Windows.UI.Xaml.DependencyObject>  GetChildrenInTabFocusOrder();
            overridable void OnProcessKeyboardAccelerators(Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args);
        }

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [overridable_name("Windows.UI.Xaml.IUIElementOverrides8", 4a5a645c-548d-48cf-b998-7844d6e235a1)]
        {
            overridable void OnKeyboardAcceleratorInvoked(Windows.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs args);
            overridable void OnBringIntoViewRequested(BringIntoViewRequestedEventArgs e);
        }

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [overridable_name("Windows.UI.Xaml.IUIElementOverrides9", 9a6e5973-6d63-54f2-90fa-62813b20b7b9)]
        {
            overridable void PopulatePropertyInfoOverride(String propertyName, Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo);
        }
    }

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 7)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.IElementFactoryRecycleArgsFactory", 8d926509-ea0d-541b-8271-f9e9118f5e7c)]
    [interface_name("Windows.UI.Xaml.IElementFactoryRecycleArgs", 86f16b14-37e8-5dd8-a90c-25d3710318b0)]
    [threading(both)]
    unsealed runtimeclass ElementFactoryRecycleArgs
    {
        [method_name( "CreateInstance" )] ElementFactoryRecycleArgs();
        Windows.UI.Xaml.UIElement Element{ get; };
        Windows.UI.Xaml.UIElement Element{ set; };
        Windows.UI.Xaml.UIElement Parent{ get; };
        Windows.UI.Xaml.UIElement Parent{ set; };
    }




    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 4)]
    [interface_name("Windows.UI.Xaml.IBringIntoViewOptions", 19bdd1b5-c7cb-46d9-a4dd-a1bbe83ef2fb)]
    [threading(both)]
    runtimeclass BringIntoViewOptions
    {
        BringIntoViewOptions();
        Boolean AnimationDesired{ get; };
        Boolean AnimationDesired{ set; };
        Windows.Foundation.IReference <Windows.Foundation.Rect>  TargetRect{ get; };
        Windows.Foundation.IReference <Windows.Foundation.Rect>  TargetRect{ set; };

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [interface_name("Windows.UI.Xaml.IBringIntoViewOptions2", e855e08e-64b6-1211-bddb-1fddbb6e8231)]
        {
            Double HorizontalAlignmentRatio{ get; };
            Double HorizontalAlignmentRatio{ set; };
            Double VerticalAlignmentRatio{ get; };
            Double VerticalAlignmentRatio{ set; };
            Double HorizontalOffset{ get; };
            Double HorizontalOffset{ set; };
            Double VerticalOffset{ get; };
            Double VerticalOffset{ set; };
        }
    }



    [contract(Windows.Foundation.UniversalApiContract, 7)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.IBrushTransitionFactory", 3dbe7368-13d4-510c-a215-7539f4787b52)]
    [interface_name("Windows.UI.Xaml.IBrushTransition", 1116972c-9dad-5429-a7dd-b2b7d061ab8e)]
    [threading(both)]
    unsealed runtimeclass BrushTransition
    {
        [method_name( "CreateInstance" )] BrushTransition();
        Windows.Foundation.TimeSpan Duration{ get; };
        Windows.Foundation.TimeSpan Duration{ set; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [interface_name("Windows.UI.Xaml.IDataContextChangedEventArgs", 7da68e21-0b8f-4f9f-a143-f8e7780136a2)]
    runtimeclass DataContextChangedEventArgs
    {
        Object NewValue{ get; };
        Boolean Handled{ get; };
        Boolean Handled{ set; };
    }



    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [constructor_name("Windows.UI.Xaml.IDataTemplateKeyFactory", e96b2959-d982-4152-91cb-de0e4dfd7693)]
    [interface_name("Windows.UI.Xaml.IDataTemplateKey", 873b6c28-cceb-4b61-86fa-b2cec39cc2fa)]
    [threading(both)]
    unsealed runtimeclass DataTemplateKey
    {
        [method_name( "CreateInstance" )] DataTemplateKey();
        [method_name( "CreateInstanceWithType" )] DataTemplateKey(Object dataType);
        Object DataType{ get; };
        Object DataType{ set; };
    }





    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.IPropertyMetadataFactory", c1b81cc0-57cd-4f2f-b0a9-e1801b28f76b)]
    [static_name("Windows.UI.Xaml.IPropertyMetadataStatics", 3b01077a-6e06-45e9-8b5c-af243458c062)]
    [interface_name("Windows.UI.Xaml.IPropertyMetadata", 814ef30d-8d18-448a-8644-f2cb51e70380)]
    [threading(both)]
    unsealed runtimeclass PropertyMetadata
    {
        [method_name( "CreateInstanceWithDefaultValue" )] PropertyMetadata(Object defaultValue);
        [method_name( "CreateInstanceWithDefaultValueAndCallback" )] PropertyMetadata(Object defaultValue, PropertyChangedCallback propertyChangedCallback);
        [default_overload]
        [method_name("CreateWithDefaultValue")] static Windows.UI.Xaml.PropertyMetadata Create(Object defaultValue);
        [default_overload]
        [method_name("CreateWithDefaultValueAndCallback")] static Windows.UI.Xaml.PropertyMetadata Create(Object defaultValue, PropertyChangedCallback propertyChangedCallback);
        [method_name("CreateWithFactory")] static Windows.UI.Xaml.PropertyMetadata Create(CreateDefaultValueCallback createDefaultValueCallback);
        [method_name("CreateWithFactoryAndCallback")] static Windows.UI.Xaml.PropertyMetadata Create(CreateDefaultValueCallback createDefaultValueCallback, PropertyChangedCallback propertyChangedCallback);
        Object DefaultValue{ get; };
        Windows.UI.Xaml.CreateDefaultValueCallback CreateDefaultValueCallback{ get; };
    }




    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.IDragOperationDeferral", ba73ecba-1b73-4086-b3d3-c223beea1633)]
    runtimeclass DragOperationDeferral
    {
        void Complete();
    }


}
namespace Windows.UI.Xaml.Media.Imaging
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Media.Imaging.IBitmapImageStatics", 9e282143-70e8-437c-9fa4-2cbf295cff84)]
    [constructor_name("Windows.UI.Xaml.Media.Imaging.IBitmapImageFactory", c9132978-4810-4e5e-8087-03671ee60d85)]
    [interface_name("Windows.UI.Xaml.Media.Imaging.IBitmapImage", 31af3271-e3b4-442d-a341-4c0226b2725b)]
    [threading(both)]
    runtimeclass BitmapImage
        : Windows.UI.Xaml.Media.Imaging.BitmapSource
    {
        static Windows.UI.Xaml.DependencyProperty CreateOptionsProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty UriSourceProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty DecodePixelWidthProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty DecodePixelHeightProperty{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [static_name("Windows.UI.Xaml.Media.Imaging.IBitmapImageStatics2", c5f5576a-75af-41a4-b893-8fe91fee2882)]
        {
            static Windows.UI.Xaml.DependencyProperty DecodePixelTypeProperty{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [static_name("Windows.UI.Xaml.Media.Imaging.IBitmapImageStatics3", 2b44e30d-f6d5-4411-a8cd-bf7603c4faa0)]
        {
            static Windows.UI.Xaml.DependencyProperty IsAnimatedBitmapProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty IsPlayingProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty AutoPlayProperty{ get; };
        }
        [method_name( "CreateInstanceWithUriSource" )] BitmapImage(Windows.Foundation.Uri uriSource);
        BitmapImage();
        Windows.UI.Xaml.Media.Imaging.BitmapCreateOptions CreateOptions{ get; };
        Windows.UI.Xaml.Media.Imaging.BitmapCreateOptions CreateOptions{ set; };
        Windows.Foundation.Uri UriSource{ get; };
        Windows.Foundation.Uri UriSource{ set; };
        Int32 DecodePixelWidth{ get; };
        Int32 DecodePixelWidth{ set; };
        Int32 DecodePixelHeight{ get; };
        Int32 DecodePixelHeight{ set; };
        event Windows.UI.Xaml.Media.Imaging.DownloadProgressEventHandler DownloadProgress;
        event Windows.UI.Xaml.RoutedEventHandler ImageOpened;
        event Windows.UI.Xaml.ExceptionRoutedEventHandler ImageFailed;

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.UI.Xaml.Media.Imaging.IBitmapImage2", 1069c1b6-8c9b-4762-be3d-759f5698f2b3)]
        {
            Windows.UI.Xaml.Media.Imaging.DecodePixelType DecodePixelType{ get; };
            Windows.UI.Xaml.Media.Imaging.DecodePixelType DecodePixelType{ set; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [interface_name("Windows.UI.Xaml.Media.Imaging.IBitmapImage3", f1de6f26-3c73-453f-a7ba-9b85c18b3733)]
        {
            Boolean IsAnimatedBitmap{ get; };
            Boolean IsPlaying{ get; };
            Boolean AutoPlay{ get; };
            Boolean AutoPlay{ set; };
            void Play();
            void Stop();
        }
    }

}
namespace Windows.UI.Xaml
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.IDragUI", 2d9bd838-7c60-4842-9170-346fe10a226a)]
    runtimeclass DragUI
    {
        [method_name("SetContentFromBitmapImage")] void SetContentFromBitmapImage(Windows.UI.Xaml.Media.Imaging.BitmapImage bitmapImage);
        [method_name("SetContentFromBitmapImageWithAnchorPoint")] void SetContentFromBitmapImage(Windows.UI.Xaml.Media.Imaging.BitmapImage bitmapImage, Windows.Foundation.Point anchorPoint);
        [method_name("SetContentFromSoftwareBitmap")] void SetContentFromSoftwareBitmap(Windows.Graphics.Imaging.SoftwareBitmap softwareBitmap);
        [method_name("SetContentFromSoftwareBitmapWithAnchorPoint")] void SetContentFromSoftwareBitmap(Windows.Graphics.Imaging.SoftwareBitmap softwareBitmap, Windows.Foundation.Point anchorPoint);
        void SetContentFromDataPackage();
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.IDragUIOverride", bd6c9dfa-c961-4861-b7a5-bf4fe4a8a6ef)]
    runtimeclass DragUIOverride
    {
        String Caption{ get; };
        String Caption{ set; };
        Boolean IsContentVisible{ get; };
        Boolean IsContentVisible{ set; };
        Boolean IsCaptionVisible{ get; };
        Boolean IsCaptionVisible{ set; };
        Boolean IsGlyphVisible{ get; };
        Boolean IsGlyphVisible{ set; };
        void Clear();
        [method_name("SetContentFromBitmapImage")] void SetContentFromBitmapImage(Windows.UI.Xaml.Media.Imaging.BitmapImage bitmapImage);
        [method_name("SetContentFromBitmapImageWithAnchorPoint")] void SetContentFromBitmapImage(Windows.UI.Xaml.Media.Imaging.BitmapImage bitmapImage, Windows.Foundation.Point anchorPoint);
        [method_name("SetContentFromSoftwareBitmap")] void SetContentFromSoftwareBitmap(Windows.Graphics.Imaging.SoftwareBitmap softwareBitmap);
        [method_name("SetContentFromSoftwareBitmapWithAnchorPoint")] void SetContentFromSoftwareBitmap(Windows.Graphics.Imaging.SoftwareBitmap softwareBitmap, Windows.Foundation.Point anchorPoint);
    }


    [contract(Windows.Foundation.UniversalApiContract, 7)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [interface_name("Windows.UI.Xaml.IEffectiveViewportChangedEventArgs", 55ee2e81-1c18-59ed-bd3d-c4ca8fa7d190)]
    runtimeclass EffectiveViewportChangedEventArgs
    {
        Windows.Foundation.Rect EffectiveViewport{ get; };
        Windows.Foundation.Rect MaxViewport{ get; };
        Double BringIntoViewDistanceX{ get; };
        Double BringIntoViewDistanceY{ get; };
    }






    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.IFrameworkView", ddba664b-b603-47aa-942d-3833174f0d80)]
    [threading(both)]
    runtimeclass FrameworkView
        : [contract(Windows.Foundation.UniversalApiContract, 1)]
        Windows.ApplicationModel.Core.IFrameworkView
    {
        FrameworkView();
    }


    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.IRoutedEvent", a6b25818-43c1-4c70-865c-7bdd5a32e327)]
    runtimeclass RoutedEvent
    {
    }



    [contract(Windows.Foundation.UniversalApiContract, 6)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [feature(Velocity_SometimesAlwaysDisabled)]
    [constructor_name("Windows.UI.Xaml.IInteractionBaseFactory", 70bd8d3c-c392-41ed-a1ce-b8a1b008bb15)]
    [interface_name("Windows.UI.Xaml.IInteractionBase", 6ede60c7-9e2e-4661-9c20-f69c5051ce93)]
    [threading(both)]
    unsealed runtimeclass InteractionBase
    {
        [method_name( "CreateInstance" )]protected InteractionBase();
        Windows.Foundation.Collections.IVectorView <Windows.UI.Xaml.RoutedEvent>  GetSupportedEvents();

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [feature(Velocity_SometimesAlwaysDisabled)]
        [overridable_name("Windows.UI.Xaml.IInteractionBaseOverrides", 27e46d7d-296c-422f-ae30-3530b09cecbd)]
        {
            overridable Windows.Foundation.Collections.IVectorView <Windows.UI.Xaml.RoutedEvent>  GetSupportedEventsCore();
            overridable void OnKeyDown(UIElement sender, Windows.UI.Xaml.Input.KeyRoutedEventArgs args);
            overridable void OnKeyUp(UIElement sender, Windows.UI.Xaml.Input.KeyRoutedEventArgs args);
            overridable void OnPointerEntered(UIElement sender, Windows.UI.Xaml.Input.PointerRoutedEventArgs args);
            overridable void OnPointerExited(UIElement sender, Windows.UI.Xaml.Input.PointerRoutedEventArgs args);
            overridable void OnPointerMoved(UIElement sender, Windows.UI.Xaml.Input.PointerRoutedEventArgs args);
            overridable void OnPointerPressed(UIElement sender, Windows.UI.Xaml.Input.PointerRoutedEventArgs args);
            overridable void OnPointerReleased(UIElement sender, Windows.UI.Xaml.Input.PointerRoutedEventArgs args);
            overridable void OnPointerCaptureLost(UIElement sender, Windows.UI.Xaml.Input.PointerRoutedEventArgs args);
            overridable void OnPointerCanceled(UIElement sender, Windows.UI.Xaml.Input.PointerRoutedEventArgs args);
            overridable void OnPointerWheelChanged(UIElement sender, Windows.UI.Xaml.Input.PointerRoutedEventArgs args);
            overridable void OnTapped(UIElement sender, Windows.UI.Xaml.Input.TappedRoutedEventArgs args);
            overridable void OnDoubleTapped(UIElement sender, Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs args);
            overridable void OnHolding(UIElement sender, Windows.UI.Xaml.Input.HoldingRoutedEventArgs args);
            overridable void OnRightTapped(UIElement sender, Windows.UI.Xaml.Input.RightTappedRoutedEventArgs args);
            overridable void OnDragEnter(UIElement sender, DragEventArgs args);
            overridable void OnDragLeave(UIElement sender, DragEventArgs args);
            overridable void OnDragOver(UIElement sender, DragEventArgs args);
            overridable void OnDrop(UIElement sender, DragEventArgs args);
        }
    }









    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 7)]
    [constructor_name("Windows.UI.Xaml.IScalarTransitionFactory", c9b1e9ee-90da-5ddd-be64-3e47977ea280)]
    [interface_name("Windows.UI.Xaml.IScalarTransition", 4cb68238-e15d-524e-a73c-9d4dcfbea226)]
    [threading(both)]
    unsealed runtimeclass ScalarTransition
    {
        [method_name( "CreateInstance" )] ScalarTransition();
        Windows.Foundation.TimeSpan Duration{ get; };
        Windows.Foundation.TimeSpan Duration{ set; };
    }


    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.ISetterBaseCollection", 03c40ca8-909e-4117-811c-a4529496bdf1)]
    [threading(both)]
    runtimeclass SetterBaseCollection
        : [contract(Windows.Foundation.UniversalApiContract, 1)]
        Windows.Foundation.Collections.IVector<Windows.UI.Xaml.SetterBase>
        , [contract(Windows.Foundation.UniversalApiContract, 1)]
        Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.SetterBase>
    {
        SetterBaseCollection();
        Boolean IsSealed{ get; };
    }


    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [constructor_name("Windows.UI.Xaml.IPropertyPathFactory", 4e4cdf99-9826-4e56-847c-ca055f162905)]
    [interface_name("Windows.UI.Xaml.IPropertyPath", 300e5d8a-1ff3-4d2c-95ec-27f81debacb8)]
    [threading(both)]
    runtimeclass PropertyPath
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )] PropertyPath(String path);
        String Path{ get; };
    }


    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.ITargetPropertyPath", 40740f8e-085f-4ced-be70-6f47acf15ad0)]
    [threading(both)]
    runtimeclass TargetPropertyPath
    {
        TargetPropertyPath();

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [constructor_name("Windows.UI.Xaml.ITargetPropertyPathFactory", 88eeccc8-99e2-4a44-9907-b44bc86e2bbe)]
        {
            [method_name( "CreateInstance" )] TargetPropertyPath(DependencyProperty targetProperty);
        }
        Windows.UI.Xaml.PropertyPath Path{ get; };
        Windows.UI.Xaml.PropertyPath Path{ set; };
        Object Target{ get; };
        Object Target{ set; };
    }

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [threading(both)]
    runtimeclass TriggerActionCollection
        : [default]Windows.Foundation.Collections.IVector<Windows.UI.Xaml.TriggerAction>
        , Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.TriggerAction>
    {
        TriggerActionCollection();
    }

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    runtimeclass TriggerCollection
        : [default]Windows.Foundation.Collections.IVector<Windows.UI.Xaml.TriggerBase>
        , Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.TriggerBase>
    {
    }



    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [constructor_name("Windows.UI.Xaml.IUIElementWeakCollectionFactory", 57242561-188a-5304-8792-a43f35d90f99)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.IUIElementWeakCollection", 10341223-e66d-519e-acf8-556bd244eac3)]
    [threading(both)]
    unsealed runtimeclass UIElementWeakCollection
        : [contract(Windows.Foundation.UniversalApiContract, 8)]
        Windows.Foundation.Collections.IVector<Windows.UI.Xaml.UIElement>
        , [contract(Windows.Foundation.UniversalApiContract, 8)]
        Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.UIElement>
    {
        [method_name( "CreateInstance" )] UIElementWeakCollection();
    }




    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 7)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.IVector3TransitionFactory", c3706699-ee9b-50dc-8807-f51d5a759495)]
    [interface_name("Windows.UI.Xaml.IVector3Transition", d2e209dc-c4a2-5101-9a68-fa0150505589)]
    [threading(both)]
    unsealed runtimeclass Vector3Transition
    {
        [method_name( "CreateInstance" )] Vector3Transition();
        Windows.Foundation.TimeSpan Duration{ get; };
        Windows.Foundation.TimeSpan Duration{ set; };
        Windows.UI.Xaml.Vector3TransitionComponents Components{ get; };
        Windows.UI.Xaml.Vector3TransitionComponents Components{ set; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [contentproperty("Storyboard")]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.IVisualState", 6320affc-c31a-4450-afde-f6ea7bd1f586)]
    [threading(both)]
    runtimeclass VisualState
        : Windows.UI.Xaml.DependencyObject
    {
        VisualState();
        String Name{ get; };
        Windows.UI.Xaml.Media.Animation.Storyboard Storyboard{ get; };
        Windows.UI.Xaml.Media.Animation.Storyboard Storyboard{ set; };

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.UI.Xaml.IVisualState2", 0fa0f896-64c0-45fb-8d24-fb83298c0d93)]
        {
            Windows.UI.Xaml.SetterBaseCollection Setters{ get; };
            Windows.Foundation.Collections.IVector <Windows.UI.Xaml.StateTriggerBase>  StateTriggers{ get; };
        }
    }

}
namespace Windows.UI.Xaml.Controls
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [static_name("Windows.UI.Xaml.Controls.IControlStatics", 473b305b-877d-4c35-8fca-46a05f96607a)]
    [constructor_name("Windows.UI.Xaml.Controls.IControlFactory", b12b1d5a-6419-4e16-b212-a45336b75778)]
    [interface_name("Windows.UI.Xaml.Controls.IControl", a8912263-2951-4f58-a9c5-5a134eaa7f07)]
    [threading(both)]
    unsealed runtimeclass Control
        : Windows.UI.Xaml.FrameworkElement
    {
        static Windows.UI.Xaml.DependencyProperty FontSizeProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty FontFamilyProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty FontWeightProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty FontStyleProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty FontStretchProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty CharacterSpacingProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty ForegroundProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty IsTabStopProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty IsEnabledProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty TabIndexProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty TabNavigationProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty TemplateProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty PaddingProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty HorizontalContentAlignmentProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty VerticalContentAlignmentProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty BackgroundProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty BorderThicknessProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty BorderBrushProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty DefaultStyleKeyProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty FocusStateProperty{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [static_name("Windows.UI.Xaml.Controls.IControlStatics2", 32233e36-ab74-4a25-a556-45293135b2c5)]
        {
            static Windows.UI.Xaml.DependencyProperty IsTextScaleFactorEnabledProperty{ get; };
        }
        [method_name( "CreateInstance" )]protected Control();

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [static_name("Windows.UI.Xaml.Controls.IControlStatics7", aee1ca45-c910-5dab-a266-fdf50c0bedd2)]
        {
            static Windows.UI.Xaml.DependencyProperty BackgroundSizingProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty CornerRadiusProperty{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [static_name("Windows.UI.Xaml.Controls.IControlStatics5", f635b5a3-ef8e-404f-877b-5580473710a6)]
        {
            static Windows.UI.Xaml.DependencyProperty DefaultStyleResourceUriProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty IsTemplateKeyTipTargetProperty{ get; };
            static Boolean GetIsTemplateKeyTipTarget(Windows.UI.Xaml.DependencyObject element);
            static void SetIsTemplateKeyTipTarget(Windows.UI.Xaml.DependencyObject element, Boolean value);
        }

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [static_name("Windows.UI.Xaml.Controls.IControlStatics4", 59fda728-c05a-4ec2-8a4b-06ad69b66e15)]
        {
            static Windows.UI.Xaml.DependencyProperty IsFocusEngagementEnabledProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty IsFocusEngagedProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty RequiresPointerProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty XYFocusLeftProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty XYFocusRightProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty XYFocusUpProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty XYFocusDownProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty ElementSoundModeProperty{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [static_name("Windows.UI.Xaml.Controls.IControlStatics3", aad15e61-e4b9-4d72-b653-934149aa5003)]
        {
            static Windows.UI.Xaml.DependencyProperty UseSystemFocusVisualsProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty IsTemplateFocusTargetProperty{ get; };
            static Boolean GetIsTemplateFocusTarget(Windows.UI.Xaml.FrameworkElement element);
            static void SetIsTemplateFocusTarget(Windows.UI.Xaml.FrameworkElement element, Boolean value);
        }
        Double FontSize{ get; };
        Double FontSize{ set; };
        Windows.UI.Xaml.Media.FontFamily FontFamily{ get; };
        Windows.UI.Xaml.Media.FontFamily FontFamily{ set; };
        Windows.UI.Text.FontWeight FontWeight{ get; };
        Windows.UI.Text.FontWeight FontWeight{ set; };
        Windows.UI.Text.FontStyle FontStyle{ get; };
        Windows.UI.Text.FontStyle FontStyle{ set; };
        Windows.UI.Text.FontStretch FontStretch{ get; };
        Windows.UI.Text.FontStretch FontStretch{ set; };
        Int32 CharacterSpacing{ get; };
        Int32 CharacterSpacing{ set; };
        Windows.UI.Xaml.Media.Brush Foreground{ get; };
        Windows.UI.Xaml.Media.Brush Foreground{ set; };
        Boolean IsTabStop{ get; };
        Boolean IsTabStop{ set; };
        Boolean IsEnabled{ get; };
        Boolean IsEnabled{ set; };
        Int32 TabIndex{ get; };
        Int32 TabIndex{ set; };
        Windows.UI.Xaml.Input.KeyboardNavigationMode TabNavigation{ get; };
        Windows.UI.Xaml.Input.KeyboardNavigationMode TabNavigation{ set; };
        Windows.UI.Xaml.Controls.ControlTemplate Template{ get; };
        Windows.UI.Xaml.Controls.ControlTemplate Template{ set; };
        Windows.UI.Xaml.Thickness Padding{ get; };
        Windows.UI.Xaml.Thickness Padding{ set; };
        Windows.UI.Xaml.HorizontalAlignment HorizontalContentAlignment{ get; };
        Windows.UI.Xaml.HorizontalAlignment HorizontalContentAlignment{ set; };
        Windows.UI.Xaml.VerticalAlignment VerticalContentAlignment{ get; };
        Windows.UI.Xaml.VerticalAlignment VerticalContentAlignment{ set; };
        Windows.UI.Xaml.Media.Brush Background{ get; };
        Windows.UI.Xaml.Media.Brush Background{ set; };
        Windows.UI.Xaml.Thickness BorderThickness{ get; };
        Windows.UI.Xaml.Thickness BorderThickness{ set; };
        Windows.UI.Xaml.Media.Brush BorderBrush{ get; };
        Windows.UI.Xaml.Media.Brush BorderBrush{ set; };
        Windows.UI.Xaml.FocusState FocusState{ get; };
        event Windows.UI.Xaml.DependencyPropertyChangedEventHandler IsEnabledChanged;
        Boolean ApplyTemplate();
        Boolean Focus(Windows.UI.Xaml.FocusState value);

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.UI.Xaml.Controls.IControl2", 43e0fe10-14ec-427e-8c57-dee60df60aa8)]
        {
            Boolean IsTextScaleFactorEnabled{ get; };
            Boolean IsTextScaleFactorEnabled{ set; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.UI.Xaml.Controls.IControl3", 077b29e4-dade-4f55-9b96-09e21b28eb1c)]
        {
            Boolean UseSystemFocusVisuals{ get; };
            Boolean UseSystemFocusVisuals{ set; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [interface_name("Windows.UI.Xaml.Controls.IControl4", 0e18aeee-5f2e-44ea-8513-d3875c0a7513)]
        {
            Boolean IsFocusEngagementEnabled{ get; };
            Boolean IsFocusEngagementEnabled{ set; };
            Boolean IsFocusEngaged{ get; };
            Boolean IsFocusEngaged{ set; };
            Windows.UI.Xaml.Controls.RequiresPointer RequiresPointer{ get; };
            Windows.UI.Xaml.Controls.RequiresPointer RequiresPointer{ set; };
            Windows.UI.Xaml.DependencyObject XYFocusLeft{ get; };
            Windows.UI.Xaml.DependencyObject XYFocusLeft{ set; };
            Windows.UI.Xaml.DependencyObject XYFocusRight{ get; };
            Windows.UI.Xaml.DependencyObject XYFocusRight{ set; };
            Windows.UI.Xaml.DependencyObject XYFocusUp{ get; };
            Windows.UI.Xaml.DependencyObject XYFocusUp{ set; };
            Windows.UI.Xaml.DependencyObject XYFocusDown{ get; };
            Windows.UI.Xaml.DependencyObject XYFocusDown{ set; };
            Windows.UI.Xaml.ElementSoundMode ElementSoundMode{ get; };
            Windows.UI.Xaml.ElementSoundMode ElementSoundMode{ set; };
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.Controls.Control, Windows.UI.Xaml.Controls.FocusEngagedEventArgs>  FocusEngaged;
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.Controls.Control, Windows.UI.Xaml.Controls.FocusDisengagedEventArgs>  FocusDisengaged;
            void RemoveFocusEngagement();
        }

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [interface_name("Windows.UI.Xaml.Controls.IControl5", 5ebb51d5-9e58-49b7-bc2d-0155ff118664)]
        {
            Windows.Foundation.Uri DefaultStyleResourceUri{ get; };
            Windows.Foundation.Uri DefaultStyleResourceUri{ set; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [interface_name("Windows.UI.Xaml.Controls.IControl7", 3550dbe1-e561-5934-a3ef-7db8bf6e3b45)]
        {
            Windows.UI.Xaml.Controls.BackgroundSizing BackgroundSizing{ get; };
            Windows.UI.Xaml.Controls.BackgroundSizing BackgroundSizing{ set; };
            Windows.UI.Xaml.CornerRadius CornerRadius{ get; };
            Windows.UI.Xaml.CornerRadius CornerRadius{ set; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [protected_name("Windows.UI.Xaml.Controls.IControlProtected", 1791587a-2a7c-4981-a2d8-ab99fffc65b9)]
        {
            protected Object DefaultStyleKey{ get; };
            protected Object DefaultStyleKey{ set; };
            protected Windows.UI.Xaml.DependencyObject GetTemplateChild(String childName);
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [overridable_name("Windows.UI.Xaml.Controls.IControlOverrides", a09691df-9824-41fe-b530-b0d8990e64c1)]
        {
            overridable void OnPointerEntered(Windows.UI.Xaml.Input.PointerRoutedEventArgs e);
            overridable void OnPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs e);
            overridable void OnPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs e);
            overridable void OnPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs e);
            overridable void OnPointerExited(Windows.UI.Xaml.Input.PointerRoutedEventArgs e);
            overridable void OnPointerCaptureLost(Windows.UI.Xaml.Input.PointerRoutedEventArgs e);
            overridable void OnPointerCanceled(Windows.UI.Xaml.Input.PointerRoutedEventArgs e);
            overridable void OnPointerWheelChanged(Windows.UI.Xaml.Input.PointerRoutedEventArgs e);
            overridable void OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs e);
            overridable void OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e);
            overridable void OnHolding(Windows.UI.Xaml.Input.HoldingRoutedEventArgs e);
            overridable void OnRightTapped(Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e);
            overridable void OnManipulationStarting(Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e);
            overridable void OnManipulationInertiaStarting(Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e);
            overridable void OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e);
            overridable void OnManipulationDelta(Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e);
            overridable void OnManipulationCompleted(Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e);
            overridable void OnKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs e);
            overridable void OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs e);
            overridable void OnGotFocus(Windows.UI.Xaml.RoutedEventArgs e);
            overridable void OnLostFocus(Windows.UI.Xaml.RoutedEventArgs e);
            overridable void OnDragEnter(Windows.UI.Xaml.DragEventArgs e);
            overridable void OnDragLeave(Windows.UI.Xaml.DragEventArgs e);
            overridable void OnDragOver(Windows.UI.Xaml.DragEventArgs e);
            overridable void OnDrop(Windows.UI.Xaml.DragEventArgs e);
        }

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [overridable_name("Windows.UI.Xaml.Controls.IControlOverrides6", e194c96a-d8cc-4339-a0e1-2e9c420879ec)]
        {
            overridable void OnPreviewKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs e);
            overridable void OnPreviewKeyUp(Windows.UI.Xaml.Input.KeyRoutedEventArgs e);
            overridable void OnCharacterReceived(Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs e);
        }
    }


}
namespace Windows.UI.Xaml
{
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [webhosthidden]
    [interface_name("Windows.UI.Xaml.IXamlRoot", 34b50756-1696-5b6d-8e9b-c71464ccad5a)]
    runtimeclass XamlRoot
    {
        Windows.UI.Xaml.UIElement Content{ get; };
        Windows.Foundation.Size Size{ get; };
        Double RasterizationScale{ get; };
        Boolean IsHostVisible{ get; };
        Windows.UI.UIContext UIContext{ get; };
        event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.XamlRoot, Windows.UI.Xaml.XamlRootChangedEventArgs>  Changed;
    }

    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [default_interface]
    [interface_name("Windows.UI.Xaml.IXamlRootChangedEventArgs", 92d71c21-d23c-5a17-bcb8-001504b6bb19)]
    runtimeclass XamlRootChangedEventArgs
    {
    }



    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 6)]
    [interface_name("Windows.UI.Xaml.IBringIntoViewRequestedEventArgs", 0e629ec4-2206-4c8b-94ae-bdb66a4ebfd1)]
    runtimeclass BringIntoViewRequestedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        Windows.UI.Xaml.UIElement TargetElement{ get; };
        Windows.UI.Xaml.UIElement TargetElement{ set; };
        Boolean AnimationDesired{ get; };
        Boolean AnimationDesired{ set; };
        Windows.Foundation.Rect TargetRect{ get; };
        Windows.Foundation.Rect TargetRect{ set; };
        Double HorizontalAlignmentRatio{ get; };
        Double VerticalAlignmentRatio{ get; };
        Double HorizontalOffset{ get; };
        Double HorizontalOffset{ set; };
        Double VerticalOffset{ get; };
        Double VerticalOffset{ set; };
        Boolean Handled{ get; };
        Boolean Handled{ set; };
    }


    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.IDependencyObjectCollectionFactory", 051e79ff-b3a8-49ee-b5af-ac8f68b649e4)]
    [threading(both)]
    unsealed runtimeclass DependencyObjectCollection
        : Windows.UI.Xaml.DependencyObject
        , [default]Windows.Foundation.Collections.IObservableVector<Windows.UI.Xaml.DependencyObject>
        , Windows.Foundation.Collections.IVector<Windows.UI.Xaml.DependencyObject>
        , Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.DependencyObject>
    {
        [method_name( "CreateInstance" )] DependencyObjectCollection();
    }






    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.UI.Xaml.IDragStartingEventArgs", 6800d3fa-90b8-46f9-8e30-5ac25f73f0f9)]
    runtimeclass DragStartingEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        Boolean Cancel{ get; };
        Boolean Cancel{ set; };
        Windows.ApplicationModel.DataTransfer.DataPackage Data{ get; };
        Windows.UI.Xaml.DragUI DragUI{ get; };
        Windows.UI.Xaml.DragOperationDeferral GetDeferral();
        Windows.Foundation.Point GetPosition(UIElement relativeTo);

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [interface_name("Windows.UI.Xaml.IDragStartingEventArgs2", d855e08e-44b6-4211-bd0b-7fddbb6e8231)]
        {
            Windows.ApplicationModel.DataTransfer.DataPackageOperation AllowedOperations{ get; };
            Windows.ApplicationModel.DataTransfer.DataPackageOperation AllowedOperations{ set; };
        }
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [interface_name("Windows.UI.Xaml.IDropCompletedEventArgs", 6c4fc188-95bc-4261-9ec5-21cab677b734)]
    runtimeclass DropCompletedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        Windows.ApplicationModel.DataTransfer.DataPackageOperation DropResult{ get; };
    }





    [contentproperty("Template")]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [constructor_name("Windows.UI.Xaml.IFrameworkTemplateFactory", 1a78a0a5-937d-46d4-832b-94ff14dab061)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.IFrameworkTemplate", a1e254d8-a446-4a27-9a9d-a0f59e1258a5)]
    [threading(both)]
    unsealed runtimeclass FrameworkTemplate
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )]protected FrameworkTemplate();
    }




    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [constructor_name("Windows.UI.Xaml.IResourceDictionaryFactory", ea3639b5-31b7-4271-92c9-7c9584a91c22)]
    [interface_name("Windows.UI.Xaml.IResourceDictionary", c1ea4f24-d6de-4191-8e3a-f48601f7489c)]
    [threading(both)]
    unsealed runtimeclass ResourceDictionary
        : Windows.UI.Xaml.DependencyObject
        , [contract(Windows.Foundation.UniversalApiContract, 1)]
        Windows.Foundation.Collections.IMap<Object, Object>
        , [contract(Windows.Foundation.UniversalApiContract, 1)]
        Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<Object, Object> >
    {
        [method_name( "CreateInstance" )] ResourceDictionary();
        Windows.Foundation.Uri Source{ get; };
        Windows.Foundation.Uri Source{ set; };
        Windows.Foundation.Collections.IVector <Windows.UI.Xaml.ResourceDictionary>  MergedDictionaries{ get; };
        Windows.Foundation.Collections.IMap <Object, Object>  ThemeDictionaries{ get; };
    }




    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.ISetterBaseFactory", 81f8ad60-1ce8-469d-a667-16e37cef8ba9)]
    [interface_name("Windows.UI.Xaml.ISetterBase", 418be27c-2ac4-4f22-8097-dea3aeeb2fb3)]
    [threading(both)]
    unsealed runtimeclass SetterBase
        : Windows.UI.Xaml.DependencyObject
    {
        Boolean IsSealed{ get; };
    }





    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [constructor_name("Windows.UI.Xaml.IStateTriggerBaseFactory", 970e2c4b-bfaf-47b0-be42-c1d711bb2e9f)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.IStateTriggerBase", 48b20698-af06-466c-8052-93666dde0e49)]
    [threading(both)]
    unsealed runtimeclass StateTriggerBase
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )]protected StateTriggerBase();

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [protected_name("Windows.UI.Xaml.IStateTriggerBaseProtected", 3c41e253-8d14-4216-994c-f9930429f6e5)]
        {
            protected void SetActive(Boolean IsActive);
        }
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [contentproperty("Setters")]
    [constructor_name("Windows.UI.Xaml.IStyleFactory", a36824e3-3d81-4ce5-aa51-8b410f602fcd)]
    [interface_name("Windows.UI.Xaml.IStyle", c4a9f225-9db7-4a7d-b6d1-f74edb9293c2)]
    [threading(both)]
    runtimeclass Style
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )] Style(Windows.UI.Xaml.Interop.TypeName targetType);
        Style();
        Boolean IsSealed{ get; };
        Windows.UI.Xaml.SetterBaseCollection Setters{ get; };
        Windows.UI.Xaml.Interop.TypeName TargetType{ get; };
        Windows.UI.Xaml.Interop.TypeName TargetType{ set; };
        Windows.UI.Xaml.Style BasedOn{ get; };
        Windows.UI.Xaml.Style BasedOn{ set; };
        void Seal();
    }




    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.ITriggerActionFactory", 68d2c0b9-3289-414f-8f6e-c6b97aedda03)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.ITriggerAction", a2c0df02-63d5-4b46-9b83-0868d3079621)]
    [threading(both)]
    unsealed runtimeclass TriggerAction
        : Windows.UI.Xaml.DependencyObject
    {
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [constructor_name("Windows.UI.Xaml.ITriggerBaseFactory", 6a3b9e57-fc5d-42d0-8cb9-ca50667af746)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.ITriggerBase", e7ea222f-dee6-4393-a8b2-8923d641f395)]
    [threading(both)]
    unsealed runtimeclass TriggerBase
        : Windows.UI.Xaml.DependencyObject
    {
    }


}
namespace Windows.UI.Xaml.Media
{
    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Media.IRectangleGeometryStatics", 377f8dba-7902-48e3-83be-7c8002a6653c)]
    [interface_name("Windows.UI.Xaml.Media.IRectangleGeometry", a25a1f58-c575-4196-91cf-9fdfb10445c3)]
    [threading(both)]
    runtimeclass RectangleGeometry
        : Windows.UI.Xaml.Media.Geometry
    {
        RectangleGeometry();
        static Windows.UI.Xaml.DependencyProperty RectProperty{ get; };
        Windows.Foundation.Rect Rect{ get; };
        Windows.Foundation.Rect Rect{ set; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [constructor_name("Windows.UI.Xaml.Media.ITransformFactory", 1a955a66-7cf4-4320-b416-6181192fcc6d)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.ITransform", 4df74078-bfd6-4ed1-9682-d2fd8bf2fe6f)]
    [threading(both)]
    unsealed runtimeclass Transform
        : Windows.UI.Xaml.Media.GeneralTransform
    {
    }

    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [constructor_name("Windows.UI.Xaml.Media.IProjectionFactory", c4f29cab-60ad-4f24-bd27-9d69c3127c9a)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.IProjection", b3443557-7f39-4d04-a89c-844338cac897)]
    [threading(both)]
    unsealed runtimeclass Projection
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )]protected Projection();
    }

}
namespace Windows.UI.Xaml.Media.Animation
{
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [threading(both)]
    runtimeclass TransitionCollection
        : [default]Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.Animation.Transition>
        , Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Media.Animation.Transition>
    {
        TransitionCollection();
    }

}
namespace Windows.UI.Xaml.Media
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.Media.ICacheModeFactory", eb1f8c5b-0abb-4e70-b8a8-620d0d953ab2)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.ICacheMode", 98dc8b11-c6f9-4dab-b838-5fd5ec8c7350)]
    [threading(both)]
    unsealed runtimeclass CacheMode
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )]protected CacheMode();
    }

}
namespace Windows.UI.Xaml.Input
{
    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.UI.Xaml.Input.IPointer", 5ee8f39f-747d-4171-90e6-cd37a9dffb11)]
    runtimeclass Pointer
    {
        UInt32 PointerId{ get; };
        Windows.Devices.Input.PointerDeviceType PointerDeviceType{ get; };
        Boolean IsInContact{ get; };
        Boolean IsInRange{ get; };
    }

}
namespace Windows.UI.Xaml.Media
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.Media.IGeneralTransformFactory", 7a25c930-29c4-4e31-b6f9-dedd52e4df1b)]
    [interface_name("Windows.UI.Xaml.Media.IGeneralTransform", a06798b7-a2ec-415f-ade2-eade9333f2c7)]
    [threading(both)]
    unsealed runtimeclass GeneralTransform
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )]protected GeneralTransform();
        Windows.UI.Xaml.Media.GeneralTransform Inverse{ get; };
        Windows.Foundation.Point TransformPoint(Windows.Foundation.Point point);
        [return_name("returnValue")] Boolean TryTransform(Windows.Foundation.Point inPoint, out Windows.Foundation.Point outPoint);
        Windows.Foundation.Rect TransformBounds(Windows.Foundation.Rect rect);

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [overridable_name("Windows.UI.Xaml.Media.IGeneralTransformOverrides", 4f121083-24cf-4524-90ad-8a42b1c12783)]
        {
            overridable Windows.UI.Xaml.Media.GeneralTransform InverseCore{ get; };
            [return_name("returnValue")] overridable Boolean TryTransformCore(Windows.Foundation.Point inPoint, out Windows.Foundation.Point outPoint);
            overridable Windows.Foundation.Rect TransformBoundsCore(Windows.Foundation.Rect rect);
        }
    }



}
namespace Windows.UI.Xaml.Media.Media3D
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [constructor_name("Windows.UI.Xaml.Media.Media3D.ITransform3DFactory", 052c1f7a-8d73-48cd-bbb8-d00434caae5d)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Media3D.ITransform3D", ae3ed43a-a9fc-4c31-86cd-56d9ca251a69)]
    [threading(both)]
    unsealed runtimeclass Transform3D
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )]protected Transform3D();
    }


}
namespace Windows.UI.Xaml.Controls.Primitives
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [constructor_name("Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseFactory", 1c3363d7-fca7-407e-920e-70e15e9f0bf1)]
    [static_name("Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics", e2d795e3-85c0-4de2-bac1-5294ca011a78)]
    [interface_name("Windows.UI.Xaml.Controls.Primitives.IFlyoutBase", 723eea0b-d12e-430d-a9f0-9bb32bbf9913)]
    [threading(both)]
    unsealed runtimeclass FlyoutBase
        : Windows.UI.Xaml.DependencyObject
    {

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [static_name("Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics5", 69edb25c-992a-542b-bcff-2f7f855523bd)]
        {
            static Windows.UI.Xaml.DependencyProperty TargetProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty ShowModeProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty InputDevicePrefersPrimaryCommandsProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty AreOpenCloseAnimationsEnabledProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty IsOpenProperty{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [static_name("Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics3", 7ba92e4f-dd16-4be4-99db-bd9d4406c0f8)]
        {
            static Windows.UI.Xaml.DependencyProperty OverlayInputPassThroughElementProperty{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [static_name("Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics2", a8e913fe-2d60-4307-aad9-56b450121b58)]
        {
            static Windows.UI.Xaml.DependencyProperty AllowFocusOnInteractionProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty LightDismissOverlayModeProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty AllowFocusWhenDisabledProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty ElementSoundModeProperty{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 8)]
        [static_name("Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseStatics6", 96d49254-c91b-5246-8b39-afc2a2c50cf8)]
        {
            static Windows.UI.Xaml.DependencyProperty ShouldConstrainToRootBoundsProperty{ get; };
        }
        [method_name( "CreateInstance" )]protected FlyoutBase();
        static Windows.UI.Xaml.DependencyProperty PlacementProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty AttachedFlyoutProperty{ get; };
        static Windows.UI.Xaml.Controls.Primitives.FlyoutBase GetAttachedFlyout(Windows.UI.Xaml.FrameworkElement element);
        static void SetAttachedFlyout(Windows.UI.Xaml.FrameworkElement element, FlyoutBase value);
        static void ShowAttachedFlyout(Windows.UI.Xaml.FrameworkElement flyoutOwner);
        Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode Placement{ get; };
        Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode Placement{ set; };
        event Windows.Foundation.EventHandler <Object>  Opened;
        event Windows.Foundation.EventHandler <Object>  Closed;
        event Windows.Foundation.EventHandler <Object>  Opening;
        void ShowAt(Windows.UI.Xaml.FrameworkElement placementTarget);
        void Hide();

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [interface_name("Windows.UI.Xaml.Controls.Primitives.IFlyoutBase2", f82b435e-65b3-41c6-a9e2-77b67bc4c00c)]
        {
            Windows.UI.Xaml.FrameworkElement Target{ get; };
            Boolean AllowFocusOnInteraction{ get; };
            Boolean AllowFocusOnInteraction{ set; };
            Windows.UI.Xaml.Controls.LightDismissOverlayMode LightDismissOverlayMode{ get; };
            Windows.UI.Xaml.Controls.LightDismissOverlayMode LightDismissOverlayMode{ set; };
            Boolean AllowFocusWhenDisabled{ get; };
            Boolean AllowFocusWhenDisabled{ set; };
            Windows.UI.Xaml.ElementSoundMode ElementSoundMode{ get; };
            Windows.UI.Xaml.ElementSoundMode ElementSoundMode{ set; };
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.Controls.Primitives.FlyoutBase, Windows.UI.Xaml.Controls.Primitives.FlyoutBaseClosingEventArgs>  Closing;
        }

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [interface_name("Windows.UI.Xaml.Controls.Primitives.IFlyoutBase3", a89c9712-48e0-4240-95b9-0dfd0826a8d3)]
        {
            Windows.UI.Xaml.DependencyObject OverlayInputPassThroughElement{ get; };
            Windows.UI.Xaml.DependencyObject OverlayInputPassThroughElement{ set; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [interface_name("Windows.UI.Xaml.Controls.Primitives.IFlyoutBase4", e3897d69-a37f-4828-9b70-0ef67c03b5f8)]
        {
            void TryInvokeKeyboardAccelerator(Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args);
        }

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [interface_name("Windows.UI.Xaml.Controls.Primitives.IFlyoutBase5", ad3ec0c7-12bb-5a73-b78e-105192ca73d6)]
        {
            Windows.UI.Xaml.Controls.Primitives.FlyoutShowMode ShowMode{ get; };
            Windows.UI.Xaml.Controls.Primitives.FlyoutShowMode ShowMode{ set; };
            Boolean InputDevicePrefersPrimaryCommands{ get; };
            Boolean AreOpenCloseAnimationsEnabled{ get; };
            Boolean AreOpenCloseAnimationsEnabled{ set; };
            Boolean IsOpen{ get; };
            void ShowAt(Windows.UI.Xaml.DependencyObject placementTarget, FlyoutShowOptions showOptions);
        }

        [contract(Windows.Foundation.UniversalApiContract, 8)]
        [interface_name("Windows.UI.Xaml.Controls.Primitives.IFlyoutBase6", 5399de8c-06cc-5b52-b65a-ff9322d1c940)]
        {
            Boolean ShouldConstrainToRootBounds{ get; };
            Boolean ShouldConstrainToRootBounds{ set; };
            Boolean IsConstrainedToRootBounds{ get; };
            Windows.UI.Xaml.XamlRoot XamlRoot{ get; };
            Windows.UI.Xaml.XamlRoot XamlRoot{ set; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [overridable_name("Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseOverrides", 101dec86-6f4d-45a4-9d0e-3ece6f16977e)]
        {
            overridable Windows.UI.Xaml.Controls.Control CreatePresenter();
        }

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [overridable_name("Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseOverrides4", a6bfd04d-5ff3-4418-add8-4042a88d2da5)]
        {
            overridable void OnProcessKeyboardAccelerators(Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args);
        }
    }

}
namespace Windows.UI.Xaml.Input
{
    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.UI.Xaml.Input.IContextRequestedEventArgs", 42618e0a-1cb6-46fb-8374-0aec68aa5e51)]
    [threading(both)]
    runtimeclass ContextRequestedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        ContextRequestedEventArgs();
        Boolean Handled{ get; };
        Boolean Handled{ set; };
        [return_name("returnValue")] Boolean TryGetPosition(Windows.UI.Xaml.UIElement relativeTo, out Windows.Foundation.Point point);
    }

    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.UI.Xaml.Input.IAccessKeyDisplayRequestedEventArgs", 0c079e55-13fe-4d03-a61d-e12f06567286)]
    [threading(both)]
    runtimeclass AccessKeyDisplayRequestedEventArgs
    {
        AccessKeyDisplayRequestedEventArgs();
        String PressedKeys{ get; };
    }

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Input.IAccessKeyDisplayDismissedEventArgs", 8a610dc6-d72d-4ca8-9f66-556f35b513da)]
    [threading(both)]
    runtimeclass AccessKeyDisplayDismissedEventArgs
    {
        AccessKeyDisplayDismissedEventArgs();
    }

    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.Input.IAccessKeyInvokedEventArgs", cfe9cd97-c718-4091-b7dd-adf1c072b1e1)]
    [threading(both)]
    runtimeclass AccessKeyInvokedEventArgs
    {
        AccessKeyInvokedEventArgs();
        Boolean Handled{ get; };
        Boolean Handled{ set; };
    }


}
namespace Windows.UI.Xaml.Media
{
    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 4)]
    [constructor_name("Windows.UI.Xaml.Media.IXamlLightFactory", 87ded768-3055-43b8-8ef6-798dc4c2329a)]
    [static_name("Windows.UI.Xaml.Media.IXamlLightStatics", b5ea9d69-b508-4e9c-bd27-6b044b5f78a0)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.IXamlLight", 0cc3fc1f-b327-4a18-9648-7c84db26ce22)]
    [threading(both)]
    unsealed runtimeclass XamlLight
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )] XamlLight();
        static void AddTargetElement(String lightId, Windows.UI.Xaml.UIElement element);
        static void RemoveTargetElement(String lightId, Windows.UI.Xaml.UIElement element);
        static void AddTargetBrush(String lightId, Brush brush);
        static void RemoveTargetBrush(String lightId, Brush brush);

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [protected_name("Windows.UI.Xaml.Media.IXamlLightProtected", 5ecf220b-1252-43d0-9729-6ea692046838)]
        {
            protected Windows.UI.Composition.CompositionLight CompositionLight{ get; };
            protected Windows.UI.Composition.CompositionLight CompositionLight{ set; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [overridable_name("Windows.UI.Xaml.Media.IXamlLightOverrides", 7c6296c7-0173-48e1-b73d-7fa216a9ac28)]
        {
            overridable String GetId();
            overridable void OnConnected(Windows.UI.Xaml.UIElement newElement);
            overridable void OnDisconnected(Windows.UI.Xaml.UIElement oldElement);
        }
    }

}
namespace Windows.UI.Xaml.Input
{
    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 4)]
    [interface_name("Windows.UI.Xaml.Input.IGettingFocusEventArgs", fa05b9ce-c67c-4be8-8fd4-c44d67877e0d)]
    runtimeclass GettingFocusEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        Windows.UI.Xaml.DependencyObject OldFocusedElement{ get; };
        Windows.UI.Xaml.DependencyObject NewFocusedElement{ get; };
        Windows.UI.Xaml.DependencyObject NewFocusedElement{ set; };
        Windows.UI.Xaml.FocusState FocusState{ get; };
        Windows.UI.Xaml.Input.FocusNavigationDirection Direction{ get; };
        Boolean Handled{ get; };
        Boolean Handled{ set; };
        Windows.UI.Xaml.Input.FocusInputDeviceKind InputDevice{ get; };
        Boolean Cancel{ get; };
        Boolean Cancel{ set; };

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [interface_name("Windows.UI.Xaml.Input.IGettingFocusEventArgs2", 88754d7b-b4b9-4959-8bce-89bf212ed4eb)]
        {
            Boolean TryCancel();
            Boolean TrySetNewFocusedElement(Windows.UI.Xaml.DependencyObject element);
        }

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [interface_name("Windows.UI.Xaml.Input.IGettingFocusEventArgs3", 4e024891-db3f-5e78-b75a-62bfc3510735)]
        {
            Guid CorrelationId{ get; };
        }
    }

    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 4)]
    [interface_name("Windows.UI.Xaml.Input.ILosingFocusEventArgs", f9f683c7-d789-472b-aa93-6d4105e6dabe)]
    runtimeclass LosingFocusEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        Windows.UI.Xaml.DependencyObject OldFocusedElement{ get; };
        Windows.UI.Xaml.DependencyObject NewFocusedElement{ get; };
        Windows.UI.Xaml.DependencyObject NewFocusedElement{ set; };
        Windows.UI.Xaml.FocusState FocusState{ get; };
        Windows.UI.Xaml.Input.FocusNavigationDirection Direction{ get; };
        Boolean Handled{ get; };
        Boolean Handled{ set; };
        Windows.UI.Xaml.Input.FocusInputDeviceKind InputDevice{ get; };
        Boolean Cancel{ get; };
        Boolean Cancel{ set; };

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [interface_name("Windows.UI.Xaml.Input.ILosingFocusEventArgs2", 0493fad9-c27f-469f-8e62-52b3a4f7cd54)]
        {
            Boolean TryCancel();
            Boolean TrySetNewFocusedElement(Windows.UI.Xaml.DependencyObject element);
        }

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [interface_name("Windows.UI.Xaml.Input.ILosingFocusEventArgs3", c98900bd-0b79-566e-ad1f-436fa513ae22)]
        {
            Guid CorrelationId{ get; };
        }
    }

    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 4)]
    [interface_name("Windows.UI.Xaml.Input.INoFocusCandidateFoundEventArgs", ec3601a7-1007-48f9-b6b3-ed0bea53937d)]
    runtimeclass NoFocusCandidateFoundEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        Windows.UI.Xaml.Input.FocusNavigationDirection Direction{ get; };
        Boolean Handled{ get; };
        Boolean Handled{ set; };
        Windows.UI.Xaml.Input.FocusInputDeviceKind InputDevice{ get; };
    }


    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [constructor_name("Windows.UI.Xaml.Input.IKeyboardAcceleratorFactory", 44d88a99-4bfd-4a47-a893-515f388623f6)]
    [static_name("Windows.UI.Xaml.Input.IKeyboardAcceleratorStatics", 3bd43d51-9bb3-456d-bf15-804adfb86261)]
    [interface_name("Windows.UI.Xaml.Input.IKeyboardAccelerator", 92e6181e-19ae-465a-9b3c-a71ee9ea7420)]
    [threading(both)]
    unsealed runtimeclass KeyboardAccelerator
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )] KeyboardAccelerator();
        static Windows.UI.Xaml.DependencyProperty KeyProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty ModifiersProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty IsEnabledProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty ScopeOwnerProperty{ get; };
        Windows.System.VirtualKey Key{ get; };
        Windows.System.VirtualKey Key{ set; };
        Windows.System.VirtualKeyModifiers Modifiers{ get; };
        Windows.System.VirtualKeyModifiers Modifiers{ set; };
        Boolean IsEnabled{ get; };
        Boolean IsEnabled{ set; };
        Windows.UI.Xaml.DependencyObject ScopeOwner{ get; };
        Windows.UI.Xaml.DependencyObject ScopeOwner{ set; };
        event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.Input.KeyboardAccelerator, Windows.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs>  Invoked;
    }

    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [interface_name("Windows.UI.Xaml.Input.ICharacterReceivedRoutedEventArgs", 7849fd82-48e4-444d-9419-93ab8892c107)]
    runtimeclass CharacterReceivedRoutedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
        Char Character{ get; };
        Windows.UI.Core.CorePhysicalKeyStatus KeyStatus{ get; };
        Boolean Handled{ get; };
        Boolean Handled{ set; };
    }

    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [interface_name("Windows.UI.Xaml.Input.IProcessKeyboardAcceleratorEventArgs", fb79c216-972b-440c-9b83-2b4198dcf09d)]
    runtimeclass ProcessKeyboardAcceleratorEventArgs
    {
        Windows.System.VirtualKey Key{ get; };
        Windows.System.VirtualKeyModifiers Modifiers{ get; };
        Boolean Handled{ get; };
        Boolean Handled{ set; };
    }






}
namespace Windows.UI.Xaml.Media
{
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [webhosthidden]
    [constructor_name("Windows.UI.Xaml.Media.IShadowFactory", 19899f25-d28b-51e6-94b0-d7e709686305)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.IShadow", 6813a583-f3b4-5fcf-8694-2cd0aefc2fad)]
    [threading(both)]
    unsealed runtimeclass Shadow
        : Windows.UI.Xaml.DependencyObject
    {
    }


}
namespace Windows.UI.Xaml.Automation.Peers
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeerFactory", 20c27545-a88b-43c8-bc24-cea9dafd04a3)]
    [static_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeerStatics", 562f7fb0-a331-4a9c-9dec-bfb7586fffff)]
    [interface_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeer", 35aac87a-62ee-4d3e-a24c-2bc8432d68b7)]
    [threading(both)]
    unsealed runtimeclass AutomationPeer
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )]protected AutomationPeer();
        static Boolean ListenerExists(AutomationEvents eventId);

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [static_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeerStatics3", 572c5714-7f87-4271-819f-6cf4c4d022d0)]
        {
            static Windows.UI.Xaml.Automation.Peers.RawElementProviderRuntimeId GenerateRawElementProviderRuntimeId();
        }
        Windows.UI.Xaml.Automation.Peers.AutomationPeer EventsSource{ get; };
        Windows.UI.Xaml.Automation.Peers.AutomationPeer EventsSource{ set; };
        Object GetPattern(PatternInterface patternInterface);
        void RaiseAutomationEvent(AutomationEvents eventId);
        void RaisePropertyChangedEvent(Windows.UI.Xaml.Automation.AutomationProperty automationProperty, Object oldValue, Object newValue);
        String GetAcceleratorKey();
        String GetAccessKey();
        Windows.UI.Xaml.Automation.Peers.AutomationControlType GetAutomationControlType();
        String GetAutomationId();
        Windows.Foundation.Rect GetBoundingRectangle();
        Windows.Foundation.Collections.IVector <Windows.UI.Xaml.Automation.Peers.AutomationPeer>  GetChildren();
        String GetClassName();
        Windows.Foundation.Point GetClickablePoint();
        String GetHelpText();
        String GetItemStatus();
        String GetItemType();
        Windows.UI.Xaml.Automation.Peers.AutomationPeer GetLabeledBy();
        String GetLocalizedControlType();
        String GetName();
        Windows.UI.Xaml.Automation.Peers.AutomationOrientation GetOrientation();
        Boolean HasKeyboardFocus();
        Boolean IsContentElement();
        Boolean IsControlElement();
        Boolean IsEnabled();
        Boolean IsKeyboardFocusable();
        Boolean IsOffscreen();
        Boolean IsPassword();
        Boolean IsRequiredForForm();
        void SetFocus();
        [deprecated("Consider using Navigate with AutomationNavigationDirection::Parent, which is an improved version of GetParent. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x10000)]
        Windows.UI.Xaml.Automation.Peers.AutomationPeer GetParent();
        void InvalidatePeer();
        [deprecated("Consider using GetElementFromPoint, which is an improved version of GetPeerFromPoint. For more info, see MSDN.", deprecate, Windows.Foundation.UniversalApiContract, 0x10000)]
        Windows.UI.Xaml.Automation.Peers.AutomationPeer GetPeerFromPoint(Windows.Foundation.Point point);
        Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting GetLiveSetting();

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeer2", ea1f89c7-ebf5-4ab8-88f7-680d821dac61)]
        {
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeer3", d3cfb977-0084-41d7-a221-28158d3bc32c)]
        {
            Object Navigate(AutomationNavigationDirection direction);
            Object GetElementFromPoint(Windows.Foundation.Point pointInWindowCoordinates);
            Object GetFocusedElement();
            void ShowContextMenu();
            Windows.Foundation.Collections.IVectorView <Windows.UI.Xaml.Automation.Peers.AutomationPeer>  GetControlledPeers();
            Windows.Foundation.Collections.IVector <Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>  GetAnnotations();
            void SetParent(AutomationPeer peer);
            void RaiseTextEditTextChangedEvent(Windows.UI.Xaml.Automation.AutomationTextEditChangeType automationTextEditChangeType, Windows.Foundation.Collections.IVectorView <String>  changedData);
            Int32 GetPositionInSet();
            Int32 GetSizeOfSet();
            Int32 GetLevel();
            void RaiseStructureChangedEvent(AutomationStructureChangeType structureChangeType, AutomationPeer child);
        }

        [contract(Windows.Foundation.UniversalApiContract, 2)]
        [interface_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeer4", 761ce752-73c1-4f44-be75-43c49ec0d4d5)]
        {
            Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType GetLandmarkType();
            String GetLocalizedLandmarkType();
        }

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [interface_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeer5", f632e1c6-0a3f-4574-9fef-cdc151765674)]
        {
            Boolean IsPeripheral();
            Boolean IsDataValidForForm();
            String GetFullDescription();
        }

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [interface_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeer6", caf8608f-13ff-42fb-866d-22206434cc6b)]
        {
            Int32 GetCulture();
        }

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [interface_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeer7", 796b3287-e642-48ab-b223-5208b41da9d6)]
        {
            void RaiseNotificationEvent(AutomationNotificationKind notificationKind, AutomationNotificationProcessing notificationProcessing, String displayString, String activityId);
        }

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [interface_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeer8", 5c6a1fe6-9a55-4d7f-9498-cfe429e92da8)]
        {
            Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel GetHeadingLevel();
        }

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [interface_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeer9", df2e0265-1d74-57fa-8094-f81c2f626b8c)]
        {
            Boolean IsDialog();
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [protected_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected", f4b40e52-642f-4629-a54a-ea5d2349c448)]
        {
            protected Windows.UI.Xaml.Automation.Peers.AutomationPeer PeerFromProvider(Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider);
            protected Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple ProviderFromPeer(AutomationPeer peer);
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [overridable_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides", bea93e67-dbee-4f7b-af0d-a79aae5333bf)]
        {
            overridable Object GetPatternCore(PatternInterface patternInterface);
            overridable String GetAcceleratorKeyCore();
            overridable String GetAccessKeyCore();
            overridable Windows.UI.Xaml.Automation.Peers.AutomationControlType GetAutomationControlTypeCore();
            overridable String GetAutomationIdCore();
            overridable Windows.Foundation.Rect GetBoundingRectangleCore();
            overridable Windows.Foundation.Collections.IVector <Windows.UI.Xaml.Automation.Peers.AutomationPeer>  GetChildrenCore();
            overridable String GetClassNameCore();
            overridable Windows.Foundation.Point GetClickablePointCore();
            overridable String GetHelpTextCore();
            overridable String GetItemStatusCore();
            overridable String GetItemTypeCore();
            overridable Windows.UI.Xaml.Automation.Peers.AutomationPeer GetLabeledByCore();
            overridable String GetLocalizedControlTypeCore();
            overridable String GetNameCore();
            overridable Windows.UI.Xaml.Automation.Peers.AutomationOrientation GetOrientationCore();
            overridable Boolean HasKeyboardFocusCore();
            overridable Boolean IsContentElementCore();
            overridable Boolean IsControlElementCore();
            overridable Boolean IsEnabledCore();
            overridable Boolean IsKeyboardFocusableCore();
            overridable Boolean IsOffscreenCore();
            overridable Boolean IsPasswordCore();
            overridable Boolean IsRequiredForFormCore();
            overridable void SetFocusCore();
            overridable Windows.UI.Xaml.Automation.Peers.AutomationPeer GetPeerFromPointCore(Windows.Foundation.Point point);
            overridable Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting GetLiveSettingCore();
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [overridable_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2", 2603682a-9da6-4023-b496-496e5ef228d2)]
        {
            overridable void ShowContextMenuCore();
            overridable Windows.Foundation.Collections.IVectorView <Windows.UI.Xaml.Automation.Peers.AutomationPeer>  GetControlledPeersCore();
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [overridable_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3", b6f0c4ad-4d39-49e6-bb91-d924eefd8538)]
        {
            overridable Object NavigateCore(AutomationNavigationDirection direction);
            overridable Object GetElementFromPointCore(Windows.Foundation.Point pointInWindowCoordinates);
            overridable Object GetFocusedElementCore();
            overridable Windows.Foundation.Collections.IVector <Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation>  GetAnnotationsCore();
            overridable Int32 GetPositionInSetCore();
            overridable Int32 GetSizeOfSetCore();
            overridable Int32 GetLevelCore();
        }

        [contract(Windows.Foundation.UniversalApiContract, 2)]
        [overridable_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4", b186cda2-5d46-4bcd-a811-269ad15b3aee)]
        {
            overridable Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType GetLandmarkTypeCore();
            overridable String GetLocalizedLandmarkTypeCore();
        }

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [overridable_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5", 2c847c85-781e-49f7-9fef-b9e14d014707)]
        {
            overridable Boolean IsPeripheralCore();
            overridable Boolean IsDataValidForFormCore();
            overridable String GetFullDescriptionCore();
            overridable Windows.Foundation.Collections.IIterable <Windows.UI.Xaml.Automation.Peers.AutomationPeer>  GetDescribedByCore();
            overridable Windows.Foundation.Collections.IIterable <Windows.UI.Xaml.Automation.Peers.AutomationPeer>  GetFlowsToCore();
            overridable Windows.Foundation.Collections.IIterable <Windows.UI.Xaml.Automation.Peers.AutomationPeer>  GetFlowsFromCore();
        }

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [overridable_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides6", e98babe7-f6ff-444c-9c0d-277eaf0ad9c0)]
        {
            overridable Int32 GetCultureCore();
        }

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [overridable_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides8", 0e1ebbd4-a003-4936-8175-f5457c07f0c6)]
        {
            overridable Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel GetHeadingLevelCore();
        }

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [overridable_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides9", f3709e8b-091a-5db5-b896-ff78f01990c9)]
        {
            overridable Boolean IsDialogCore();
        }
    }



}
namespace Windows.UI.Xaml.Input
{
    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 5)]
    [interface_name("Windows.UI.Xaml.Input.IKeyboardAcceleratorInvokedEventArgs", c00b03f2-04e7-4415-b17d-d76b9490de2b)]
    runtimeclass KeyboardAcceleratorInvokedEventArgs
    {
        Boolean Handled{ get; };
        Boolean Handled{ set; };
        Windows.UI.Xaml.DependencyObject Element{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [interface_name("Windows.UI.Xaml.Input.IKeyboardAcceleratorInvokedEventArgs2", befca4b8-5907-48ee-8e21-9c969078fa11)]
        {
            Windows.UI.Xaml.Input.KeyboardAccelerator KeyboardAccelerator{ get; };
        }
    }














}
namespace Windows.UI.Xaml.Media.Animation
{
    [webhosthidden]
    [contentproperty("Children")]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Media.Animation.IStoryboardStatics", d82f07d8-73d5-4379-bd48-7e05184a8bad)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IStoryboard", d45c1e6e-3594-460e-981a-32271bd3aa06)]
    [threading(both)]
    runtimeclass Storyboard
        : Windows.UI.Xaml.Media.Animation.Timeline
    {
        Storyboard();
        static Windows.UI.Xaml.DependencyProperty TargetPropertyProperty{ get; };
        static String GetTargetProperty(Timeline element);
        static void SetTargetProperty(Timeline element, String path);
        static Windows.UI.Xaml.DependencyProperty TargetNameProperty{ get; };
        static String GetTargetName(Timeline element);
        static void SetTargetName(Timeline element, String name);
        static void SetTarget(Timeline timeline, Windows.UI.Xaml.DependencyObject target);
        Windows.UI.Xaml.Media.Animation.TimelineCollection Children{ get; };
        void Seek(Windows.Foundation.TimeSpan offset);
        void Stop();
        void Begin();
        void Pause();
        void Resume();
        Windows.UI.Xaml.Media.Animation.ClockState GetCurrentState();
        Windows.Foundation.TimeSpan GetCurrentTime();
        void SeekAlignedToLastTick(Windows.Foundation.TimeSpan offset);
        void SkipToFill();
    }



}
namespace Windows.UI.Xaml
{
    [marshaling_behavior(agile)]
    [contentproperty("Storyboard")]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [constructor_name("Windows.UI.Xaml.IVisualTransitionFactory", ea75864f-d1e0-4dae-b429-89fc322724f4)]
    [interface_name("Windows.UI.Xaml.IVisualTransition", 55c5905e-2bc7-400d-aaa4-1a2981491ee0)]
    [threading(both)]
    unsealed runtimeclass VisualTransition
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )] VisualTransition();
        Windows.UI.Xaml.Duration GeneratedDuration{ get; };
        Windows.UI.Xaml.Duration GeneratedDuration{ set; };
        Windows.UI.Xaml.Media.Animation.EasingFunctionBase GeneratedEasingFunction{ get; };
        Windows.UI.Xaml.Media.Animation.EasingFunctionBase GeneratedEasingFunction{ set; };
        String To{ get; };
        String To{ set; };
        String From{ get; };
        String From{ set; };
        Windows.UI.Xaml.Media.Animation.Storyboard Storyboard{ get; };
        Windows.UI.Xaml.Media.Animation.Storyboard Storyboard{ set; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [contentproperty("States")]
    [webhosthidden]
    [interface_name("Windows.UI.Xaml.IVisualStateGroup", e4f9d9a4-e028-44de-9b15-4929ae0a26c2)]
    [threading(both)]
    runtimeclass VisualStateGroup
        : Windows.UI.Xaml.DependencyObject
    {
        VisualStateGroup();
        String Name{ get; };
        Windows.Foundation.Collections.IVector <Windows.UI.Xaml.VisualTransition>  Transitions{ get; };
        Windows.Foundation.Collections.IVector <Windows.UI.Xaml.VisualState>  States{ get; };
        Windows.UI.Xaml.VisualState CurrentState{ get; };
        event Windows.UI.Xaml.VisualStateChangedEventHandler CurrentStateChanged;
        event Windows.UI.Xaml.VisualStateChangedEventHandler CurrentStateChanging;
    }


}
namespace Windows.UI.Xaml.Media.Animation
{
    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [constructor_name("Windows.UI.Xaml.Media.Animation.IEasingFunctionBaseFactory", 1830fe6a-f01b-43e0-b61f-b452a1c66fd2)]
    [static_name("Windows.UI.Xaml.Media.Animation.IEasingFunctionBaseStatics", 2a5031aa-2c50-4a1d-bb04-d75e07b71548)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IEasingFunctionBase", c108383f-2c02-4151-8ecd-68ddaa3f0d9b)]
    [threading(both)]
    unsealed runtimeclass EasingFunctionBase
        : Windows.UI.Xaml.DependencyObject
    {
        static Windows.UI.Xaml.DependencyProperty EasingModeProperty{ get; };
        Windows.UI.Xaml.Media.Animation.EasingMode EasingMode{ get; };
        Windows.UI.Xaml.Media.Animation.EasingMode EasingMode{ set; };
        Double Ease(Double normalizedTime);
    }





}
namespace Windows.UI.Xaml
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.IAdaptiveTriggerStatics", b92e29ea-1615-4350-9c3b-92b2986bf444)]
    [constructor_name("Windows.UI.Xaml.IAdaptiveTriggerFactory", c966d482-5aeb-4841-9247-c1a0bdd6f59f)]
    [interface_name("Windows.UI.Xaml.IAdaptiveTrigger", a5f04119-0cd9-49f1-a23f-44e547ab9f1a)]
    [threading(both)]
    unsealed runtimeclass AdaptiveTrigger
        : Windows.UI.Xaml.StateTriggerBase
    {
        static Windows.UI.Xaml.DependencyProperty MinWindowWidthProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty MinWindowHeightProperty{ get; };
        [method_name( "CreateInstance" )] AdaptiveTrigger();
        Double MinWindowWidth{ get; };
        Double MinWindowWidth{ set; };
        Double MinWindowHeight{ get; };
        Double MinWindowHeight{ set; };
    }



    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 7)]
    [webhosthidden]
    [constructor_name("Windows.UI.Xaml.IColorPaletteResourcesFactory", a57f0783-1876-5cc0-8ea5-bc77b17e0f7e)]
    [interface_name("Windows.UI.Xaml.IColorPaletteResources", 258088c4-aef2-5d3f-833b-c36db6278ed9)]
    [threading(both)]
    unsealed runtimeclass ColorPaletteResources
        : Windows.UI.Xaml.ResourceDictionary
    {
        [method_name( "CreateInstance" )] ColorPaletteResources();
        Windows.Foundation.IReference <Windows.UI.Color>  AltHigh{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  AltHigh{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  AltLow{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  AltLow{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  AltMedium{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  AltMedium{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  AltMediumHigh{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  AltMediumHigh{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  AltMediumLow{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  AltMediumLow{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  BaseHigh{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  BaseHigh{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  BaseLow{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  BaseLow{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  BaseMedium{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  BaseMedium{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  BaseMediumHigh{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  BaseMediumHigh{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  BaseMediumLow{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  BaseMediumLow{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeAltLow{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeAltLow{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeBlackHigh{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeBlackHigh{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeBlackLow{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeBlackLow{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeBlackMediumLow{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeBlackMediumLow{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeBlackMedium{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeBlackMedium{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeDisabledHigh{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeDisabledHigh{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeDisabledLow{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeDisabledLow{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeHigh{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeHigh{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeLow{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeLow{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeMedium{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeMedium{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeMediumLow{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeMediumLow{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeWhite{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeWhite{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeGray{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  ChromeGray{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  ListLow{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  ListLow{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  ListMedium{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  ListMedium{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  ErrorText{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  ErrorText{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  Accent{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  Accent{ set; };
    }


    [contentproperty("Actions")]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.UI.Xaml.IEventTrigger", def8f855-0b49-4087-b1a9-b8b38488f786)]
    [threading(both)]
    runtimeclass EventTrigger
        : Windows.UI.Xaml.TriggerBase
    {
        EventTrigger();
        Windows.UI.Xaml.RoutedEvent RoutedEvent{ get; };
        Windows.UI.Xaml.RoutedEvent RoutedEvent{ set; };
        Windows.UI.Xaml.TriggerActionCollection Actions{ get; };
    }


}
namespace Windows.UI.Xaml.Data
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.Data.IBindingBaseFactory", 22dafc3a-7701-4666-a1ba-9859bdcfec34)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Data.IBindingBase", 1589a2ab-3d15-49bc-a447-8a5448e58870)]
    [threading(both)]
    unsealed runtimeclass BindingBase
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )] BindingBase();
    }


}
namespace Windows.UI.Xaml
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.IFrameworkElementStatics2", 9695db02-c0d8-4fa2-b100-3fa2df8b9538)]
    [constructor_name("Windows.UI.Xaml.IFrameworkElementFactory", deaee126-03ca-4966-b576-604cce93b5e8)]
    [interface_name("Windows.UI.Xaml.IFrameworkElement", a391d09b-4a99-4b7c-9d8d-6fa5d01f6fbf)]
    [threading(both)]
    unsealed runtimeclass FrameworkElement
        : Windows.UI.Xaml.UIElement
    {
        static Windows.UI.Xaml.DependencyProperty RequestedThemeProperty{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [static_name("Windows.UI.Xaml.IFrameworkElementStatics", 48383032-fbeb-4f8a-aed2-ee21fb27a57b)]
        {
            static Windows.UI.Xaml.DependencyProperty TagProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty LanguageProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty ActualWidthProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty ActualHeightProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty WidthProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty HeightProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty MinWidthProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty MaxWidthProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty MinHeightProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty MaxHeightProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty HorizontalAlignmentProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty VerticalAlignmentProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty MarginProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty NameProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty DataContextProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty StyleProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty FlowDirectionProperty{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [static_name("Windows.UI.Xaml.IFrameworkElementStatics6", fcc1529a-69db-4582-a7be-cf6a1cfdacd0)]
        {
            static Windows.UI.Xaml.DependencyProperty ActualThemeProperty{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [static_name("Windows.UI.Xaml.IFrameworkElementStatics5", 525d3941-0b3c-4be6-9978-19a8025c09d8)]
        {
            static void DeferTree(DependencyObject element);
        }

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [static_name("Windows.UI.Xaml.IFrameworkElementStatics4", 9c41b155-c5d8-4663-bff2-d8d54fb5dbb3)]
        {
            static Windows.UI.Xaml.DependencyProperty AllowFocusOnInteractionProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty FocusVisualMarginProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty FocusVisualSecondaryThicknessProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty FocusVisualPrimaryThicknessProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty FocusVisualSecondaryBrushProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty FocusVisualPrimaryBrushProperty{ get; };
            static Windows.UI.Xaml.DependencyProperty AllowFocusWhenDisabledProperty{ get; };
        }
        [method_name( "CreateInstance" )]protected FrameworkElement();
        Windows.UI.Xaml.TriggerCollection Triggers{ get; };
        Windows.UI.Xaml.ResourceDictionary Resources{ get; };
        Windows.UI.Xaml.ResourceDictionary Resources{ set; };
        Object Tag{ get; };
        Object Tag{ set; };
        String Language{ get; };
        String Language{ set; };
        Double ActualWidth{ get; };
        Double ActualHeight{ get; };
        Double Width{ get; };
        Double Width{ set; };
        Double Height{ get; };
        Double Height{ set; };
        Double MinWidth{ get; };
        Double MinWidth{ set; };
        Double MaxWidth{ get; };
        Double MaxWidth{ set; };
        Double MinHeight{ get; };
        Double MinHeight{ set; };
        Double MaxHeight{ get; };
        Double MaxHeight{ set; };
        Windows.UI.Xaml.HorizontalAlignment HorizontalAlignment{ get; };
        Windows.UI.Xaml.HorizontalAlignment HorizontalAlignment{ set; };
        Windows.UI.Xaml.VerticalAlignment VerticalAlignment{ get; };
        Windows.UI.Xaml.VerticalAlignment VerticalAlignment{ set; };
        Windows.UI.Xaml.Thickness Margin{ get; };
        Windows.UI.Xaml.Thickness Margin{ set; };
        String Name{ get; };
        String Name{ set; };
        Windows.Foundation.Uri BaseUri{ get; };
        Object DataContext{ get; };
        Object DataContext{ set; };
        Windows.UI.Xaml.Style Style{ get; };
        Windows.UI.Xaml.Style Style{ set; };
        Windows.UI.Xaml.DependencyObject Parent{ get; };
        Windows.UI.Xaml.FlowDirection FlowDirection{ get; };
        Windows.UI.Xaml.FlowDirection FlowDirection{ set; };
        event Windows.UI.Xaml.RoutedEventHandler Loaded;
        event Windows.UI.Xaml.RoutedEventHandler Unloaded;
        event Windows.UI.Xaml.SizeChangedEventHandler SizeChanged;
        event Windows.Foundation.EventHandler <Object>  LayoutUpdated;
        Object FindName(String name);
        void SetBinding(DependencyProperty dp, Windows.UI.Xaml.Data.BindingBase binding);

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.UI.Xaml.IFrameworkElement2", f19104be-422a-4904-a52f-ee72010429e5)]
        {
            Windows.UI.Xaml.ElementTheme RequestedTheme{ get; };
            Windows.UI.Xaml.ElementTheme RequestedTheme{ set; };
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.FrameworkElement, Windows.UI.Xaml.DataContextChangedEventArgs>  DataContextChanged;
            Windows.UI.Xaml.Data.BindingExpression GetBindingExpression(DependencyProperty dp);
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.UI.Xaml.IFrameworkElement3", c81c2720-5c52-4bbe-a199-2b1e34f00f70)]
        {
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.FrameworkElement, Object>  Loading;
        }

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [interface_name("Windows.UI.Xaml.IFrameworkElement4", 6b765bb3-fba3-4404-bdee-1a45d1ca5f21)]
        {
            Boolean AllowFocusOnInteraction{ get; };
            Boolean AllowFocusOnInteraction{ set; };
            Windows.UI.Xaml.Thickness FocusVisualMargin{ get; };
            Windows.UI.Xaml.Thickness FocusVisualMargin{ set; };
            Windows.UI.Xaml.Thickness FocusVisualSecondaryThickness{ get; };
            Windows.UI.Xaml.Thickness FocusVisualSecondaryThickness{ set; };
            Windows.UI.Xaml.Thickness FocusVisualPrimaryThickness{ get; };
            Windows.UI.Xaml.Thickness FocusVisualPrimaryThickness{ set; };
            Windows.UI.Xaml.Media.Brush FocusVisualSecondaryBrush{ get; };
            Windows.UI.Xaml.Media.Brush FocusVisualSecondaryBrush{ set; };
            Windows.UI.Xaml.Media.Brush FocusVisualPrimaryBrush{ get; };
            Windows.UI.Xaml.Media.Brush FocusVisualPrimaryBrush{ set; };
            Boolean AllowFocusWhenDisabled{ get; };
            Boolean AllowFocusWhenDisabled{ set; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 5)]
        [interface_name("Windows.UI.Xaml.IFrameworkElement6", 792a5d91-62a1-40bf-a0ce-f9c131fcb7a7)]
        {
            Windows.UI.Xaml.ElementTheme ActualTheme{ get; };
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.FrameworkElement, Object>  ActualThemeChanged;
        }

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [interface_name("Windows.UI.Xaml.IFrameworkElement7", 2263886c-c069-570f-b9cc-9e21dd028d8e)]
        {
            Boolean IsLoaded{ get; };
            event Windows.Foundation.TypedEventHandler <Windows.UI.Xaml.FrameworkElement, Windows.UI.Xaml.EffectiveViewportChangedEventArgs>  EffectiveViewportChanged;
        }

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [protected_name("Windows.UI.Xaml.IFrameworkElementProtected7", 65aa0480-22e3-5103-ad2a-b626f88ca5ae)]
        {
            protected void InvalidateViewport();
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [overridable_name("Windows.UI.Xaml.IFrameworkElementOverrides", da007e54-b3c2-4b9a-aa8e-d3f071262b97)]
        {
            overridable Windows.Foundation.Size MeasureOverride(Windows.Foundation.Size availableSize);
            overridable Windows.Foundation.Size ArrangeOverride(Windows.Foundation.Size finalSize);
            overridable void OnApplyTemplate();
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [overridable_name("Windows.UI.Xaml.IFrameworkElementOverrides2", cb5cd2b9-e3b4-458c-b64e-1434fd1bd88a)]
        {
            overridable Boolean GoToElementStateCore(String stateName, Boolean useTransitions);
        }
    }

}
namespace Windows.UI.Xaml.Data
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [constructor_name("Windows.UI.Xaml.Data.IBindingExpressionFactory", 1cb55cd9-db72-40b3-a2b5-24ee6ea5c328)]
    [interface_name("Windows.UI.Xaml.Data.IBindingExpression", 516a19a5-c2fd-4a9e-9fd3-9aa42f995a3c)]
    [threading(both)]
    unsealed runtimeclass BindingExpression
        : Windows.UI.Xaml.Data.BindingExpressionBase
    {
        Object DataItem{ get; };
        Windows.UI.Xaml.Data.Binding ParentBinding{ get; };
        void UpdateSource();
    }



}
namespace Windows.UI.Xaml.Media
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.Media.IBrushFactory", 399658a2-14fb-4b8f-83e6-6e3dab12069b)]
    [static_name("Windows.UI.Xaml.Media.IBrushStatics", e70c3102-0225-47f5-b22e-0467619f6a22)]
    [interface_name("Windows.UI.Xaml.Media.IBrush", 8806a321-1e06-422c-a1cc-01696559e021)]
    [threading(both)]
    unsealed runtimeclass Brush
        : Windows.UI.Xaml.DependencyObject
        , [contract(Windows.Foundation.UniversalApiContract, 7)]
        Windows.UI.Composition.IAnimationObject
    {
        [method_name( "CreateInstance" )]protected Brush();
        static Windows.UI.Xaml.DependencyProperty OpacityProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty TransformProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty RelativeTransformProperty{ get; };
        Double Opacity{ get; };
        Double Opacity{ set; };
        Windows.UI.Xaml.Media.Transform Transform{ get; };
        Windows.UI.Xaml.Media.Transform Transform{ set; };
        Windows.UI.Xaml.Media.Transform RelativeTransform{ get; };
        Windows.UI.Xaml.Media.Transform RelativeTransform{ set; };

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [feature(Velocity_SometimesAlwaysDisabled)]
        [interface_name("Windows.UI.Xaml.Media.IBrushFeature_XamlMotionSystemHoldbacks", 3783a2d0-21e1-5726-9551-8a3b1121e58c)]
        {
            void StartAnimation(Windows.UI.Composition.ICompositionAnimationBase animation);
            void StopAnimation(Windows.UI.Composition.ICompositionAnimationBase animation);
        }

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [overridable_name("Windows.UI.Xaml.Media.IBrushOverrides2", d092b151-d83b-5a81-a71e-a1c7f8ad6963)]
        {
            overridable void PopulatePropertyInfoOverride(String propertyName, Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo);
        }
    }














}
namespace Windows.UI.Xaml.Controls
{
    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    runtimeclass UIElementCollection
        : [default]Windows.Foundation.Collections.IVector<Windows.UI.Xaml.UIElement>
        , Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.UIElement>
    {

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.UI.Xaml.Controls.IUIElementCollection", d6602d54-88f6-43f6-85d8-a9d914a6dd3b)]
        {
            void Move(UInt32 oldIndex, UInt32 newIndex);
        }
    }



}
namespace Windows.UI.Xaml
{
    [marshaling_behavior(agile)]
    [webhosthidden]
    [feature(Velocity_SometimesAlwaysDisabled)]
    [contract(Windows.Foundation.UniversalApiContract, 6)]
    [constructor_name("Windows.UI.Xaml.IFrameworkElementExFactory", 39f097f0-1a59-445e-9a48-5d340dde9148)]
    [static_name("Windows.UI.Xaml.IFrameworkElementExStatics", 578c6009-fe71-470a-9bdf-1e8ccb2c301e)]
    [interface_name("Windows.UI.Xaml.IFrameworkElementEx", fb117af3-ebf2-45e6-8b25-8d3d5946dd93)]
    [threading(both)]
    unsealed runtimeclass FrameworkElementEx
        : Windows.UI.Xaml.UIElement
    {
        [method_name( "CreateInstance" )]protected FrameworkElementEx();
        static Windows.UI.Xaml.DependencyProperty ActualWidthProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty ActualHeightProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty WidthProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty HeightProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty MinWidthProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty MaxWidthProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty MinHeightProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty MaxHeightProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty HorizontalAlignmentProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty VerticalAlignmentProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty MarginProperty{ get; };
        Double ActualWidth{ get; };
        Double ActualHeight{ get; };
        Double Width{ get; };
        Double Width{ set; };
        Double Height{ get; };
        Double Height{ set; };
        Double MinWidth{ get; };
        Double MinWidth{ set; };
        Double MaxWidth{ get; };
        Double MaxWidth{ set; };
        Double MinHeight{ get; };
        Double MinHeight{ set; };
        Double MaxHeight{ get; };
        Double MaxHeight{ set; };
        Windows.UI.Xaml.HorizontalAlignment HorizontalAlignment{ get; };
        Windows.UI.Xaml.HorizontalAlignment HorizontalAlignment{ set; };
        Windows.UI.Xaml.VerticalAlignment VerticalAlignment{ get; };
        Windows.UI.Xaml.VerticalAlignment VerticalAlignment{ set; };
        Windows.UI.Xaml.Thickness Margin{ get; };
        Windows.UI.Xaml.Thickness Margin{ set; };

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [feature(Velocity_SometimesAlwaysDisabled)]
        [protected_name("Windows.UI.Xaml.IFrameworkElementExProtected", b9524c17-eb96-4e28-a8f6-5c63d89b9e42)]
        {
            protected Windows.UI.Xaml.Controls.UIElementCollection Children{ get; };
        }
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [interface_name("Windows.UI.Xaml.IMediaFailedRoutedEventArgs", 46d1fa8d-5149-4153-ba3c-b03e64ee531e)]
    runtimeclass MediaFailedRoutedEventArgs
        : Windows.UI.Xaml.ExceptionRoutedEventArgs
    {
        String ErrorTrace{ get; };
    }




    [marshaling_behavior(agile)]
    [webhosthidden]
    [contentproperty("Children")]
    [feature(Velocity_SometimesAlwaysDisabled)]
    [contract(Windows.Foundation.UniversalApiContract, 6)]
    [static_name("Windows.UI.Xaml.IPanelExStatics", bdf66f77-6f5f-42c5-85ca-779fd55ae609)]
    [constructor_name("Windows.UI.Xaml.IPanelExFactory", 14ed469c-0d8a-4b2f-8513-ede88d4c8ebf)]
    [interface_name("Windows.UI.Xaml.IPanelEx", 1f05b33e-d12e-4513-827d-329e08c300b7)]
    [threading(both)]
    unsealed runtimeclass PanelEx
        : Windows.UI.Xaml.UIElement
    {
        static Windows.UI.Xaml.DependencyProperty ActualWidthProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty ActualHeightProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty WidthProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty HeightProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty MinWidthProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty MaxWidthProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty MinHeightProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty MaxHeightProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty HorizontalAlignmentProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty VerticalAlignmentProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty MarginProperty{ get; };
        [method_name( "CreateInstance" )] PanelEx();
        Double ActualWidth{ get; };
        Double ActualHeight{ get; };
        Double Width{ get; };
        Double Width{ set; };
        Double Height{ get; };
        Double Height{ set; };
        Double MinWidth{ get; };
        Double MinWidth{ set; };
        Double MaxWidth{ get; };
        Double MaxWidth{ set; };
        Double MinHeight{ get; };
        Double MinHeight{ set; };
        Double MaxHeight{ get; };
        Double MaxHeight{ set; };
        Windows.UI.Xaml.HorizontalAlignment HorizontalAlignment{ get; };
        Windows.UI.Xaml.HorizontalAlignment HorizontalAlignment{ set; };
        Windows.UI.Xaml.VerticalAlignment VerticalAlignment{ get; };
        Windows.UI.Xaml.VerticalAlignment VerticalAlignment{ set; };
        Windows.UI.Xaml.Thickness Margin{ get; };
        Windows.UI.Xaml.Thickness Margin{ set; };
        Windows.UI.Xaml.Controls.UIElementCollection Children{ get; };
    }




    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [interface_name("Windows.UI.Xaml.ISetter", a73ded29-b4ae-4a81-be85-e690ba0d3b6e)]
    [threading(both)]
    runtimeclass Setter
        : Windows.UI.Xaml.SetterBase
    {
        Setter();

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [constructor_name("Windows.UI.Xaml.ISetterFactory", d3ca3d42-09b1-49d5-8891-e7b5648e02a2)]
        {
            [return_name("instance")] [method_name( "CreateInstance" )] Setter(DependencyProperty targetProperty, Object value);
        }
        Windows.UI.Xaml.DependencyProperty Property{ get; };
        Windows.UI.Xaml.DependencyProperty Property{ set; };
        Object Value{ get; };
        Object Value{ set; };

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.UI.Xaml.ISetter2", 70169561-05b1-4fa3-9d53-8e0c8c747afc)]
        {
            Windows.UI.Xaml.TargetPropertyPath Target{ get; };
            Windows.UI.Xaml.TargetPropertyPath Target{ set; };
        }
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [static_name("Windows.UI.Xaml.IStateTriggerStatics", 71e95c90-b3fe-4dd3-a8a8-44a2ce25e0b8)]
    [interface_name("Windows.UI.Xaml.IStateTrigger", 67adef2e-d8d9-49f7-a1fd-2e35eedd23cd)]
    [threading(both)]
    runtimeclass StateTrigger
        : Windows.UI.Xaml.StateTriggerBase
    {
        StateTrigger();
        static Windows.UI.Xaml.DependencyProperty IsActiveProperty{ get; };
        Boolean IsActive{ get; };
        Boolean IsActive{ set; };
    }

}
namespace Windows.UI.Xaml.Media
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [threading(both)]
    runtimeclass BrushCollection
        : [default]Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.Brush>
        , Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Media.Brush>
    {
        BrushCollection();
    }




    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 6)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.Media.IRenderedEventArgs", e349817d-81c7-4938-828c-a7e2797b35a6)]
    runtimeclass RenderedEventArgs
    {
        Windows.Foundation.TimeSpan FrameDuration{ get; };
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [static_name("Windows.UI.Xaml.Media.ICompositionTargetStatics", 2b1af03d-1ed2-4b59-bd00-7594ee92832b)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.ICompositionTarget", 26cfbff0-713c-4bec-8803-e101f7b14ed3)]
    [threading(both)]
    runtimeclass CompositionTarget
    {
        static event Windows.Foundation.EventHandler <Object>  Rendering;
        static event Windows.Foundation.EventHandler <Object>  SurfaceContentsLost;

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [static_name("Windows.UI.Xaml.Media.ICompositionTargetStatics3", bc0a7cd9-6750-4708-994c-2028e0312ac8)]
        {
            static event Windows.Foundation.EventHandler <Windows.UI.Xaml.Media.RenderedEventArgs>  Rendered;
        }
    }

    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [threading(both)]
    runtimeclass DoubleCollection
        : [default]Windows.Foundation.Collections.IVector<Double>
        , Windows.Foundation.Collections.IIterable<Double>
    {
        DoubleCollection();
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.Media.IFontFamilyFactory", d5603377-3dae-4dcd-af09-f9498e9ec659)]
    [interface_name("Windows.UI.Xaml.Media.IFontFamily", 92467e64-d66a-4cf4-9322-3d23b3c0c361)]
    [threading(both)]
    unsealed runtimeclass FontFamily
    {
        [method_name( "CreateInstanceWithName" )] FontFamily(String familyName);

        [contract(Windows.Foundation.UniversalApiContract, 2)]
        [static_name("Windows.UI.Xaml.Media.IFontFamilyStatics2", 52ad7af9-37e6-4297-a238-97fb6a408d9e)]
        {
            static Windows.UI.Xaml.Media.FontFamily XamlAutoFontFamily{ get; };
        }
        String Source{ get; };
    }



    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [webhosthidden]
    [interface_name("Windows.UI.Xaml.Media.IMediaTransportControlsThumbnailRequestedEventArgs", e4a8b21c-e3c2-485c-ae69-f1537b76755a)]
    runtimeclass MediaTransportControlsThumbnailRequestedEventArgs
    {
        void SetThumbnailImage(Windows.Storage.Streams.IInputStream source);
        Windows.Foundation.Deferral GetDeferral();
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [threading(both)]
    runtimeclass PointCollection
        : [default]Windows.Foundation.Collections.IVector<Windows.Foundation.Point>
        , Windows.Foundation.Collections.IIterable<Windows.Foundation.Point>
    {
        PointCollection();
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [interface_name("Windows.UI.Xaml.Media.IRenderingEventArgs", 5bf7d30d-9748-4aed-8380-d7890eb776a0)]
    runtimeclass RenderingEventArgs
    {
        Windows.Foundation.TimeSpan RenderingTime{ get; };
    }

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [threading(both)]
    runtimeclass TimelineMarkerCollection
        : [default]Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.TimelineMarker>
        , Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Media.TimelineMarker>
    {
        TimelineMarkerCollection();
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [threading(both)]
    runtimeclass TransformCollection
        : [default]Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.Transform>
        , Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Media.Transform>
    {
        TransformCollection();
    }













    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Media.IGeometryStatics", 7a70aa8c-0b06-465f-b637-9a47e5a70111)]
    [constructor_name("Windows.UI.Xaml.Media.IGeometryFactory", f65daf23-d5fd-42f9-b32a-929c5a4b54e1)]
    [interface_name("Windows.UI.Xaml.Media.IGeometry", fa123889-0acd-417b-b62d-5ca1bf4dfc0e)]
    [threading(both)]
    unsealed runtimeclass Geometry
        : Windows.UI.Xaml.DependencyObject
    {
        static Windows.UI.Xaml.Media.Geometry Empty{ get; };
        static Double StandardFlatteningTolerance{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty TransformProperty{ get; };
        Windows.UI.Xaml.Media.Transform Transform{ get; };
        Windows.UI.Xaml.Media.Transform Transform{ set; };
        Windows.Foundation.Rect Bounds{ get; };
    }




    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.Media.IImageSourceFactory", 297ec001-2540-4e5a-ab66-88035dd3ddb5)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.IImageSource", 737ef309-ea41-4d96-a71c-98e98efcab07)]
    [threading(both)]
    unsealed runtimeclass ImageSource
        : Windows.UI.Xaml.DependencyObject
    {
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.Media.IPathSegmentFactory", 2a1c0aae-eccd-4464-a148-6ffdb3aa281f)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.IPathSegment", fcfa71cf-9ce3-474f-8157-10b6435a616b)]
    [threading(both)]
    unsealed runtimeclass PathSegment
        : Windows.UI.Xaml.DependencyObject
    {
    }








    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Media.ITimelineMarkerStatics", c4aef0c6-16a3-484b-87f5-6528b8f04a47)]
    [interface_name("Windows.UI.Xaml.Media.ITimelineMarker", a68ef02d-45ba-4e50-8cad-aaea3a227af5)]
    [threading(both)]
    runtimeclass TimelineMarker
        : Windows.UI.Xaml.DependencyObject
    {
        static Windows.UI.Xaml.DependencyProperty TimeProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty TypeProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty TextProperty{ get; };
        TimelineMarker();
        Windows.Foundation.TimeSpan Time{ get; };
        Windows.Foundation.TimeSpan Time{ set; };
        String Type{ get; };
        String Type{ set; };
        String Text{ get; };
        String Text{ set; };
    }








    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.IBitmapCache", 79c2219e-44d2-4610-9735-9bec83809ecf)]
    [threading(both)]
    runtimeclass BitmapCache
        : Windows.UI.Xaml.Media.CacheMode
    {
        BitmapCache();
    }



    [contentproperty("ProjectionMatrix")]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Media.IMatrix3DProjectionStatics", ae9d5895-41ec-4e37-abaa-69f41d2f876b)]
    [interface_name("Windows.UI.Xaml.Media.IMatrix3DProjection", 6f03e149-bfc9-4c01-b578-50338cec97fc)]
    [threading(both)]
    runtimeclass Matrix3DProjection
        : Windows.UI.Xaml.Media.Projection
    {
        Matrix3DProjection();
        static Windows.UI.Xaml.DependencyProperty ProjectionMatrixProperty{ get; };
        Windows.UI.Xaml.Media.Media3D.Matrix3D ProjectionMatrix{ get; };
        Windows.UI.Xaml.Media.Media3D.Matrix3D ProjectionMatrix{ set; };
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Media.IPlaneProjectionStatics", ad919c67-3bdc-4855-8969-d1f9a3adc27d)]
    [interface_name("Windows.UI.Xaml.Media.IPlaneProjection", e6f82bfa-6726-469a-b259-a5188347ca8f)]
    [threading(both)]
    runtimeclass PlaneProjection
        : Windows.UI.Xaml.Media.Projection
    {
        PlaneProjection();
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty LocalOffsetXProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty LocalOffsetYProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty LocalOffsetZProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty RotationXProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty RotationYProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty RotationZProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty CenterOfRotationXProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty CenterOfRotationYProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty CenterOfRotationZProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty GlobalOffsetXProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty GlobalOffsetYProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty GlobalOffsetZProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty ProjectionMatrixProperty{ get; };
        Double LocalOffsetX{ get; };
        Double LocalOffsetX{ set; };
        Double LocalOffsetY{ get; };
        Double LocalOffsetY{ set; };
        Double LocalOffsetZ{ get; };
        Double LocalOffsetZ{ set; };
        Double RotationX{ get; };
        Double RotationX{ set; };
        Double RotationY{ get; };
        Double RotationY{ set; };
        Double RotationZ{ get; };
        Double RotationZ{ set; };
        Double CenterOfRotationX{ get; };
        Double CenterOfRotationX{ set; };
        Double CenterOfRotationY{ get; };
        Double CenterOfRotationY{ set; };
        Double CenterOfRotationZ{ get; };
        Double CenterOfRotationZ{ set; };
        Double GlobalOffsetX{ get; };
        Double GlobalOffsetX{ set; };
        Double GlobalOffsetY{ get; };
        Double GlobalOffsetY{ set; };
        Double GlobalOffsetZ{ get; };
        Double GlobalOffsetZ{ set; };
        Windows.UI.Xaml.Media.Media3D.Matrix3D ProjectionMatrix{ get; };
    }






    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [contentproperty("Color")]
    [static_name("Windows.UI.Xaml.Media.ISolidColorBrushStatics", e1a65efa-2b23-41ba-b9ba-7094ec8e4e9f)]
    [interface_name("Windows.UI.Xaml.Media.ISolidColorBrush", 9d850850-66f3-48df-9a8f-824bd5e070af)]
    [threading(both)]
    runtimeclass SolidColorBrush
        : Windows.UI.Xaml.Media.Brush
    {
        SolidColorBrush();

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [constructor_name("Windows.UI.Xaml.Media.ISolidColorBrushFactory", d935ce0c-86f5-4da6-8a27-b1619ef7f92b)]
        {
            [method_name( "CreateInstanceWithColor" )] SolidColorBrush(Windows.UI.Color color);
        }
        [independentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty ColorProperty{ get; };
        Windows.UI.Color Color{ get; };
        Windows.UI.Color Color{ set; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.Media.IThemeShadowFactory", 2e71465d-0f67-590e-831b-7e5e2a32b778)]
    [interface_name("Windows.UI.Xaml.Media.IThemeShadow", 3eccad09-7985-5f39-8b62-6c10696dca6f)]
    [threading(both)]
    unsealed runtimeclass ThemeShadow
        : Windows.UI.Xaml.Media.Shadow
    {
        [method_name( "CreateInstance" )] ThemeShadow();
        Windows.UI.Xaml.UIElementWeakCollection Receivers{ get; };
    }





    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Media.ICompositeTransformStatics", 2f190c08-8266-496f-9653-a18bd4f836aa)]
    [interface_name("Windows.UI.Xaml.Media.ICompositeTransform", c8a4385b-f24a-4701-a265-a78846f142b9)]
    [threading(both)]
    runtimeclass CompositeTransform
        : Windows.UI.Xaml.Media.Transform
    {
        CompositeTransform();
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty CenterXProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty CenterYProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty ScaleXProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty ScaleYProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty SkewXProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty SkewYProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty RotationProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty TranslateXProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty TranslateYProperty{ get; };
        Double CenterX{ get; };
        Double CenterX{ set; };
        Double CenterY{ get; };
        Double CenterY{ set; };
        Double ScaleX{ get; };
        Double ScaleX{ set; };
        Double ScaleY{ get; };
        Double ScaleY{ set; };
        Double SkewX{ get; };
        Double SkewX{ set; };
        Double SkewY{ get; };
        Double SkewY{ set; };
        Double Rotation{ get; };
        Double Rotation{ set; };
        Double TranslateX{ get; };
        Double TranslateX{ set; };
        Double TranslateY{ get; };
        Double TranslateY{ set; };
    }



    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Media.IMatrixTransformStatics", 43e02e47-15b8-4758-bb97-7d52420acc5b)]
    [interface_name("Windows.UI.Xaml.Media.IMatrixTransform", edfdd551-5fed-45fc-ae62-92a4b6cf9707)]
    [threading(both)]
    runtimeclass MatrixTransform
        : Windows.UI.Xaml.Media.Transform
    {
        MatrixTransform();
        static Windows.UI.Xaml.DependencyProperty MatrixProperty{ get; };
        Windows.UI.Xaml.Media.Matrix Matrix{ get; };
        Windows.UI.Xaml.Media.Matrix Matrix{ set; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Media.IRotateTransformStatics", a131eb8a-51a3-41b6-b9d3-a10e429054ab)]
    [interface_name("Windows.UI.Xaml.Media.IRotateTransform", 688ea9b9-1e4e-4596-86e3-428b27334faf)]
    [threading(both)]
    runtimeclass RotateTransform
        : Windows.UI.Xaml.Media.Transform
    {
        RotateTransform();
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty CenterXProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty CenterYProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty AngleProperty{ get; };
        Double CenterX{ get; };
        Double CenterX{ set; };
        Double CenterY{ get; };
        Double CenterY{ set; };
        Double Angle{ get; };
        Double Angle{ set; };
    }



    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Media.IScaleTransformStatics", 9d9436f4-40a7-46dd-975a-07d337cd852e)]
    [interface_name("Windows.UI.Xaml.Media.IScaleTransform", ed67f18d-936e-43ab-929a-e9cd0a511e52)]
    [threading(both)]
    runtimeclass ScaleTransform
        : Windows.UI.Xaml.Media.Transform
    {
        ScaleTransform();
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty CenterXProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty CenterYProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty ScaleXProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty ScaleYProperty{ get; };
        Double CenterX{ get; };
        Double CenterX{ set; };
        Double CenterY{ get; };
        Double CenterY{ set; };
        Double ScaleX{ get; };
        Double ScaleX{ set; };
        Double ScaleY{ get; };
        Double ScaleY{ set; };
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Media.ISkewTransformStatics", ecd11d73-5614-4b31-b6af-beae10105624)]
    [interface_name("Windows.UI.Xaml.Media.ISkewTransform", 4e8a3b15-7a0f-4617-9e98-1e65bdc92115)]
    [threading(both)]
    runtimeclass SkewTransform
        : Windows.UI.Xaml.Media.Transform
    {
        SkewTransform();
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty CenterXProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty CenterYProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty AngleXProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty AngleYProperty{ get; };
        Double CenterX{ get; };
        Double CenterX{ set; };
        Double CenterY{ get; };
        Double CenterY{ set; };
        Double AngleX{ get; };
        Double AngleX{ set; };
        Double AngleY{ get; };
        Double AngleY{ set; };
    }



    [webhosthidden]
    [contentproperty("Children")]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Media.ITransformGroupStatics", 25312f2a-cfab-4b24-9713-5bdead1929c0)]
    [interface_name("Windows.UI.Xaml.Media.ITransformGroup", 63418ccc-8d2d-4737-b951-2afce1ddc4c4)]
    [threading(both)]
    runtimeclass TransformGroup
        : Windows.UI.Xaml.Media.Transform
    {
        TransformGroup();
        static Windows.UI.Xaml.DependencyProperty ChildrenProperty{ get; };
        Windows.UI.Xaml.Media.TransformCollection Children{ get; };
        Windows.UI.Xaml.Media.TransformCollection Children{ set; };
        Windows.UI.Xaml.Media.Matrix Value{ get; };
    }



    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Media.ITranslateTransformStatics", f419aa91-e042-4111-9c2f-d201304123dd)]
    [interface_name("Windows.UI.Xaml.Media.ITranslateTransform", c975905c-3c36-4229-817b-178f64c0e113)]
    [threading(both)]
    runtimeclass TranslateTransform
        : Windows.UI.Xaml.Media.Transform
    {
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty XProperty{ get; };
        [conditionallyindependentlyanimatable]
        static Windows.UI.Xaml.DependencyProperty YProperty{ get; };
        TranslateTransform();
        Double X{ get; };
        Double X{ set; };
        Double Y{ get; };
        Double Y{ set; };
    }

}
namespace Windows.UI.Xaml.Media.Animation
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [threading(both)]
    runtimeclass DoubleKeyFrameCollection
        : [default]Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.Animation.DoubleKeyFrame>
        , Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Media.Animation.DoubleKeyFrame>
    {
        DoubleKeyFrameCollection();
    }

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [threading(both)]
    runtimeclass ObjectKeyFrameCollection
        : [default]Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>
        , Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Media.Animation.ObjectKeyFrame>
    {
        ObjectKeyFrameCollection();
    }

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [threading(both)]
    runtimeclass TimelineCollection
        : [default]Windows.Foundation.Collections.IVector<Windows.UI.Xaml.Media.Animation.Timeline>
        , Windows.Foundation.Collections.IIterable<Windows.UI.Xaml.Media.Animation.Timeline>
    {
        TimelineCollection();
    }




    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [constructor_name("Windows.UI.Xaml.Media.Animation.IDoubleKeyFrameFactory", ac97dec3-7538-40b9-b152-696f7fbf4722)]
    [static_name("Windows.UI.Xaml.Media.Animation.IDoubleKeyFrameStatics", 324641b0-7d37-427a-adeb-43f38bb61a4d)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IDoubleKeyFrame", 674456fd-e81e-4f4e-b4ad-0acfed9ecd68)]
    [threading(both)]
    unsealed runtimeclass DoubleKeyFrame
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )]protected DoubleKeyFrame();
        static Windows.UI.Xaml.DependencyProperty ValueProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty KeyTimeProperty{ get; };
        Double Value{ get; };
        Double Value{ set; };
        Windows.UI.Xaml.Media.Animation.KeyTime KeyTime{ get; };
        Windows.UI.Xaml.Media.Animation.KeyTime KeyTime{ set; };
    }





    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [interface_name("Windows.UI.Xaml.Media.Animation.IKeySpline", 77a163bb-d5ca-4a32-ba0b-7dff988e58a0)]
    [threading(both)]
    runtimeclass KeySpline
        : Windows.UI.Xaml.DependencyObject
    {
        KeySpline();
        Windows.Foundation.Point ControlPoint1{ get; };
        Windows.Foundation.Point ControlPoint1{ set; };
        Windows.Foundation.Point ControlPoint2{ get; };
        Windows.Foundation.Point ControlPoint2{ set; };
    }




    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [constructor_name("Windows.UI.Xaml.Media.Animation.INavigationTransitionInfoFactory", edf4f8d5-af63-4fab-9d4a-87927f82dd6b)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Animation.INavigationTransitionInfo", a9b05091-ae4a-4372-8625-21b7a8b98ca4)]
    [threading(both)]
    unsealed runtimeclass NavigationTransitionInfo
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )]protected NavigationTransitionInfo();

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [overridable_name("Windows.UI.Xaml.Media.Animation.INavigationTransitionInfoOverrides", d9517e6a-a9d0-4bf7-9db0-4633a69daff2)]
        {
            overridable String GetNavigationStateCore();
            overridable void SetNavigationStateCore(String navigationState);
        }
    }




    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.Media.Animation.IObjectKeyFrameFactory", 1626143e-3e6d-44d8-9b9a-04aea70f8492)]
    [static_name("Windows.UI.Xaml.Media.Animation.IObjectKeyFrameStatics", 2cd6ab00-5319-4286-8eed-4e755ea0cf9c)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IObjectKeyFrame", 9852a851-8593-48ee-a6a4-d5d4720f029a)]
    [threading(both)]
    unsealed runtimeclass ObjectKeyFrame
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )]protected ObjectKeyFrame();
        static Windows.UI.Xaml.DependencyProperty ValueProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty KeyTimeProperty{ get; };
        Object Value{ get; };
        Object Value{ set; };
        Windows.UI.Xaml.Media.Animation.KeyTime KeyTime{ get; };
        Windows.UI.Xaml.Media.Animation.KeyTime KeyTime{ set; };
    }




    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.Media.Animation.ITimelineFactory", 1d56bb07-bda4-478b-8ada-eb04d580cd5e)]
    [static_name("Windows.UI.Xaml.Media.Animation.ITimelineStatics", a902ed4e-ef10-4d6f-9a40-93cb8895f4e5)]
    [interface_name("Windows.UI.Xaml.Media.Animation.ITimeline", 0bc465dc-be4d-4d0d-9549-2208b715f40d)]
    [threading(both)]
    unsealed runtimeclass Timeline
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )]protected Timeline();
        static Boolean AllowDependentAnimations{ get; };
        static Boolean AllowDependentAnimations{ set; };
        static Windows.UI.Xaml.DependencyProperty AutoReverseProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty BeginTimeProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty DurationProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty SpeedRatioProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty FillBehaviorProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty RepeatBehaviorProperty{ get; };
        Boolean AutoReverse{ get; };
        Boolean AutoReverse{ set; };
        Windows.Foundation.IReference <Windows.Foundation.TimeSpan>  BeginTime{ get; };
        Windows.Foundation.IReference <Windows.Foundation.TimeSpan>  BeginTime{ set; };
        Windows.UI.Xaml.Duration Duration{ get; };
        Windows.UI.Xaml.Duration Duration{ set; };
        Double SpeedRatio{ get; };
        Double SpeedRatio{ set; };
        Windows.UI.Xaml.Media.Animation.FillBehavior FillBehavior{ get; };
        Windows.UI.Xaml.Media.Animation.FillBehavior FillBehavior{ set; };
        Windows.UI.Xaml.Media.Animation.RepeatBehavior RepeatBehavior{ get; };
        Windows.UI.Xaml.Media.Animation.RepeatBehavior RepeatBehavior{ set; };
        event Windows.Foundation.EventHandler <Object>  Completed;
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.Media.Animation.ITransitionFactory", dc9ab2cf-3bc9-44aa-b3fc-883a83233a2c)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Animation.ITransition", 3c677c7c-01d0-4dce-b333-976f93312b08)]
    [threading(both)]
    unsealed runtimeclass Transition
        : Windows.UI.Xaml.DependencyObject
    {
    }


    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Animation.IAddDeleteThemeTransition", adec852e-4424-4dab-99c1-3a04e36a3c48)]
    [threading(both)]
    runtimeclass AddDeleteThemeTransition
        : Windows.UI.Xaml.Media.Animation.Transition
    {
        AddDeleteThemeTransition();
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Media.Animation.IBackEaseStatics", 3c70a2ff-a0a0-4786-926c-22321f8f25b7)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IBackEase", e47796e7-f805-4a8f-81c9-38e6472caa94)]
    [threading(both)]
    runtimeclass BackEase
        : Windows.UI.Xaml.Media.Animation.EasingFunctionBase
    {
        BackEase();
        static Windows.UI.Xaml.DependencyProperty AmplitudeProperty{ get; };
        Double Amplitude{ get; };
        Double Amplitude{ set; };
    }



    [contentproperty("Storyboard")]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Media.Animation.IBeginStoryboardStatics", 12cff18c-aa91-4c4a-b82f-df34fc57f94b)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IBeginStoryboard", 64189fcd-49ec-4e52-a6f6-55324c921053)]
    [threading(both)]
    runtimeclass BeginStoryboard
        : Windows.UI.Xaml.TriggerAction
    {
        BeginStoryboard();
        static Windows.UI.Xaml.DependencyProperty StoryboardProperty{ get; };
        Windows.UI.Xaml.Media.Animation.Storyboard Storyboard{ get; };
        Windows.UI.Xaml.Media.Animation.Storyboard Storyboard{ set; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Media.Animation.IBounceEaseStatics", c0701da2-4f73-41c9-b2cb-2ea3105107ff)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IBounceEase", 2bf1464e-fc71-47ed-85a1-3ba9577718b4)]
    [threading(both)]
    runtimeclass BounceEase
        : Windows.UI.Xaml.Media.Animation.EasingFunctionBase
    {
        BounceEase();
        static Windows.UI.Xaml.DependencyProperty BouncesProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty BouncinessProperty{ get; };
        Int32 Bounces{ get; };
        Int32 Bounces{ set; };
        Double Bounciness{ get; };
        Double Bounciness{ set; };
    }


    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Animation.ICircleEase", 53a3bdb2-9177-4e6e-a043-5082d889ab1f)]
    [threading(both)]
    runtimeclass CircleEase
        : Windows.UI.Xaml.Media.Animation.EasingFunctionBase
    {
        CircleEase();
    }



    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Media.Animation.IColorAnimationStatics", 55eaf6e2-87e3-4f48-958f-855b2f9ea9ec)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IColorAnimation", b8ae8a15-0f63-4694-9467-bdafac1253ea)]
    [threading(both)]
    runtimeclass ColorAnimation
        : Windows.UI.Xaml.Media.Animation.Timeline
    {
        static Windows.UI.Xaml.DependencyProperty FromProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty ToProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty ByProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty EasingFunctionProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty EnableDependentAnimationProperty{ get; };
        ColorAnimation();
        Windows.Foundation.IReference <Windows.UI.Color>  From{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  From{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  To{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  To{ set; };
        Windows.Foundation.IReference <Windows.UI.Color>  By{ get; };
        Windows.Foundation.IReference <Windows.UI.Color>  By{ set; };
        Windows.UI.Xaml.Media.Animation.EasingFunctionBase EasingFunction{ get; };
        Windows.UI.Xaml.Media.Animation.EasingFunctionBase EasingFunction{ set; };
        Boolean EnableDependentAnimation{ get; };
        Boolean EnableDependentAnimation{ set; };
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Media.Animation.IContentThemeTransitionStatics", 0e8ee385-9a42-4459-afa9-337dc41e1587)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IContentThemeTransition", f66fc5c3-5915-437d-8e3b-adf8e7f0ab57)]
    [threading(both)]
    runtimeclass ContentThemeTransition
        : Windows.UI.Xaml.Media.Animation.Transition
    {
        ContentThemeTransition();
        static Windows.UI.Xaml.DependencyProperty HorizontalOffsetProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty VerticalOffsetProperty{ get; };
        Double HorizontalOffset{ get; };
        Double HorizontalOffset{ set; };
        Double VerticalOffset{ get; };
        Double VerticalOffset{ set; };
    }


    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Animation.ICubicEase", 1b94fc76-dad7-4354-b1a2-7969fbf6a70d)]
    [threading(both)]
    runtimeclass CubicEase
        : Windows.UI.Xaml.Media.Animation.EasingFunctionBase
    {
        CubicEase();
    }


    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Animation.IDiscreteDoubleKeyFrame", f5f51f3a-ad11-49ce-8e1c-08fdf1447446)]
    [threading(both)]
    runtimeclass DiscreteDoubleKeyFrame
        : Windows.UI.Xaml.Media.Animation.DoubleKeyFrame
    {
        DiscreteDoubleKeyFrame();
    }


    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Animation.IDiscreteObjectKeyFrame", c7dcde89-f12d-4a9c-8199-e7a9ece3a473)]
    [threading(both)]
    runtimeclass DiscreteObjectKeyFrame
        : Windows.UI.Xaml.Media.Animation.ObjectKeyFrame
    {
        DiscreteObjectKeyFrame();
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Media.Animation.IDoubleAnimationStatics", e27a935d-f111-43b7-b824-832b58d7786b)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IDoubleAnimation", 7e9f3d59-0f07-4bc9-977d-03763ff8154f)]
    [threading(both)]
    runtimeclass DoubleAnimation
        : Windows.UI.Xaml.Media.Animation.Timeline
    {
        DoubleAnimation();
        static Windows.UI.Xaml.DependencyProperty FromProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty ToProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty ByProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty EasingFunctionProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty EnableDependentAnimationProperty{ get; };
        Windows.Foundation.IReference <Double>  From{ get; };
        Windows.Foundation.IReference <Double>  From{ set; };
        Windows.Foundation.IReference <Double>  To{ get; };
        Windows.Foundation.IReference <Double>  To{ set; };
        Windows.Foundation.IReference <Double>  By{ get; };
        Windows.Foundation.IReference <Double>  By{ set; };
        Windows.UI.Xaml.Media.Animation.EasingFunctionBase EasingFunction{ get; };
        Windows.UI.Xaml.Media.Animation.EasingFunctionBase EasingFunction{ set; };
        Boolean EnableDependentAnimation{ get; };
        Boolean EnableDependentAnimation{ set; };
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [contentproperty("KeyFrames")]
    [static_name("Windows.UI.Xaml.Media.Animation.IDoubleAnimationUsingKeyFramesStatics", 109bf2f6-c60f-49aa-abf6-f696d492116b)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IDoubleAnimationUsingKeyFrames", 4fee628f-bfee-4f75-83c2-a93b39488473)]
    [threading(both)]
    runtimeclass DoubleAnimationUsingKeyFrames
        : Windows.UI.Xaml.Media.Animation.Timeline
    {
        static Windows.UI.Xaml.DependencyProperty EnableDependentAnimationProperty{ get; };
        DoubleAnimationUsingKeyFrames();
        Windows.UI.Xaml.Media.Animation.DoubleKeyFrameCollection KeyFrames{ get; };
        Boolean EnableDependentAnimation{ get; };
        Boolean EnableDependentAnimation{ set; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Media.Animation.IEasingDoubleKeyFrameStatics", c8d3d845-dbae-4e5b-8b84-d9537398e5b1)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IEasingDoubleKeyFrame", 965adb8d-9a54-4108-b4ff-b5a5212cb338)]
    [threading(both)]
    runtimeclass EasingDoubleKeyFrame
        : Windows.UI.Xaml.Media.Animation.DoubleKeyFrame
    {
        EasingDoubleKeyFrame();
        static Windows.UI.Xaml.DependencyProperty EasingFunctionProperty{ get; };
        Windows.UI.Xaml.Media.Animation.EasingFunctionBase EasingFunction{ get; };
        Windows.UI.Xaml.Media.Animation.EasingFunctionBase EasingFunction{ set; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Media.Animation.IEdgeUIThemeTransitionStatics", 16a2b13b-4705-302b-27c6-2aac92f645ac)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IEdgeUIThemeTransition", 5c86c19b-49d7-19ec-cf19-83a73c6de75e)]
    [threading(both)]
    runtimeclass EdgeUIThemeTransition
        : Windows.UI.Xaml.Media.Animation.Transition
    {
        EdgeUIThemeTransition();
        static Windows.UI.Xaml.DependencyProperty EdgeProperty{ get; };
        Windows.UI.Xaml.Controls.Primitives.EdgeTransitionLocation Edge{ get; };
        Windows.UI.Xaml.Controls.Primitives.EdgeTransitionLocation Edge{ set; };
    }



    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Media.Animation.IElasticEaseStatics", a9f566ec-fe9c-4b2b-8e52-bb785d562185)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IElasticEase", ef5ba58c-b0b6-4a6c-9ca8-fb4233f12459)]
    [threading(both)]
    runtimeclass ElasticEase
        : Windows.UI.Xaml.Media.Animation.EasingFunctionBase
    {
        ElasticEase();
        static Windows.UI.Xaml.DependencyProperty OscillationsProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty SpringinessProperty{ get; };
        Int32 Oscillations{ get; };
        Int32 Oscillations{ set; };
        Double Springiness{ get; };
        Double Springiness{ set; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Media.Animation.IEntranceThemeTransitionStatics", 37cc0577-ff98-4aed-b86e-5ec23702f877)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IEntranceThemeTransition", 07698c09-a8e3-419a-a01d-7410a0ae8ec8)]
    [threading(both)]
    runtimeclass EntranceThemeTransition
        : Windows.UI.Xaml.Media.Animation.Transition
    {
        EntranceThemeTransition();
        static Windows.UI.Xaml.DependencyProperty FromHorizontalOffsetProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty FromVerticalOffsetProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty IsStaggeringEnabledProperty{ get; };
        Double FromHorizontalOffset{ get; };
        Double FromHorizontalOffset{ set; };
        Double FromVerticalOffset{ get; };
        Double FromVerticalOffset{ set; };
        Boolean IsStaggeringEnabled{ get; };
        Boolean IsStaggeringEnabled{ set; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Media.Animation.IExponentialEaseStatics", f37ee7e3-a761-4352-9ad6-70794567581a)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IExponentialEase", 7cb9e41d-f0bb-4bca-9da5-9ba3a11734c4)]
    [threading(both)]
    runtimeclass ExponentialEase
        : Windows.UI.Xaml.Media.Animation.EasingFunctionBase
    {
        ExponentialEase();
        static Windows.UI.Xaml.DependencyProperty ExponentProperty{ get; };
        Double Exponent{ get; };
        Double Exponent{ set; };
    }


    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Animation.ILinearDoubleKeyFrame", 8efdf265-9a7b-431d-8f0c-14c56b5ea4d9)]
    [threading(both)]
    runtimeclass LinearDoubleKeyFrame
        : Windows.UI.Xaml.Media.Animation.DoubleKeyFrame
    {
        LinearDoubleKeyFrame();
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [contentproperty("KeyFrames")]
    [static_name("Windows.UI.Xaml.Media.Animation.IObjectAnimationUsingKeyFramesStatics", eb736182-6af1-49a3-97b6-783ed97400fe)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IObjectAnimationUsingKeyFrames", 334a2d92-b74a-4c64-b9a6-58bcfa314f22)]
    [threading(both)]
    runtimeclass ObjectAnimationUsingKeyFrames
        : Windows.UI.Xaml.Media.Animation.Timeline
    {
        static Windows.UI.Xaml.DependencyProperty EnableDependentAnimationProperty{ get; };
        ObjectAnimationUsingKeyFrames();
        Windows.UI.Xaml.Media.Animation.ObjectKeyFrameCollection KeyFrames{ get; };
        Boolean EnableDependentAnimation{ get; };
        Boolean EnableDependentAnimation{ set; };
    }



    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Media.Animation.IPaneThemeTransitionStatics", 316b382f-4be4-1797-b45c-cd900bbe0caa)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IPaneThemeTransition", 4708eb8e-4bfc-ee46-d4f9-708def3fbb2b)]
    [threading(both)]
    runtimeclass PaneThemeTransition
        : Windows.UI.Xaml.Media.Animation.Transition
    {
        PaneThemeTransition();
        static Windows.UI.Xaml.DependencyProperty EdgeProperty{ get; };
        Windows.UI.Xaml.Controls.Primitives.EdgeTransitionLocation Edge{ get; };
        Windows.UI.Xaml.Controls.Primitives.EdgeTransitionLocation Edge{ set; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Media.Animation.IPointAnimationStatics", 2f99b356-e737-408b-a0fd-327826d32255)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IPointAnimation", 30f04312-7726-4f88-b8e2-2fa54518963b)]
    [threading(both)]
    runtimeclass PointAnimation
        : Windows.UI.Xaml.Media.Animation.Timeline
    {
        PointAnimation();
        static Windows.UI.Xaml.DependencyProperty FromProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty ToProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty ByProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty EasingFunctionProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty EnableDependentAnimationProperty{ get; };
        Windows.Foundation.IReference <Windows.Foundation.Point>  From{ get; };
        Windows.Foundation.IReference <Windows.Foundation.Point>  From{ set; };
        Windows.Foundation.IReference <Windows.Foundation.Point>  To{ get; };
        Windows.Foundation.IReference <Windows.Foundation.Point>  To{ set; };
        Windows.Foundation.IReference <Windows.Foundation.Point>  By{ get; };
        Windows.Foundation.IReference <Windows.Foundation.Point>  By{ set; };
        Windows.UI.Xaml.Media.Animation.EasingFunctionBase EasingFunction{ get; };
        Windows.UI.Xaml.Media.Animation.EasingFunctionBase EasingFunction{ set; };
        Boolean EnableDependentAnimation{ get; };
        Boolean EnableDependentAnimation{ set; };
    }



    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Media.Animation.IPopupThemeTransitionStatics", e5a1640e-490d-1505-9f6b-8fafc044dec5)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IPopupThemeTransition", 47843552-4283-545e-c791-268dca22ce4b)]
    [threading(both)]
    runtimeclass PopupThemeTransition
        : Windows.UI.Xaml.Media.Animation.Transition
    {
        PopupThemeTransition();
        static Windows.UI.Xaml.DependencyProperty FromHorizontalOffsetProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty FromVerticalOffsetProperty{ get; };
        Double FromHorizontalOffset{ get; };
        Double FromHorizontalOffset{ set; };
        Double FromVerticalOffset{ get; };
        Double FromVerticalOffset{ set; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Media.Animation.IPowerEaseStatics", a5955103-91a2-460c-9c41-d28f6a939bda)]
    [interface_name("Windows.UI.Xaml.Media.Animation.IPowerEase", 69c80579-eedf-405b-8680-d9606880c937)]
    [threading(both)]
    runtimeclass PowerEase
        : Windows.UI.Xaml.Media.Animation.EasingFunctionBase
    {
        PowerEase();
        static Windows.UI.Xaml.DependencyProperty PowerProperty{ get; };
        Double Power{ get; };
        Double Power{ set; };
    }


    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Animation.IQuadraticEase", e1510e91-ef6d-44f0-803d-68d16de0ddfc)]
    [threading(both)]
    runtimeclass QuadraticEase
        : Windows.UI.Xaml.Media.Animation.EasingFunctionBase
    {
        QuadraticEase();
    }


    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Animation.IQuarticEase", e8698814-fe42-4a05-b5b8-081f41157815)]
    [threading(both)]
    runtimeclass QuarticEase
        : Windows.UI.Xaml.Media.Animation.EasingFunctionBase
    {
        QuarticEase();
    }


    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Animation.IQuinticEase", 92ee793b-3c49-4108-aa11-ab786603da21)]
    [threading(both)]
    runtimeclass QuinticEase
        : Windows.UI.Xaml.Media.Animation.EasingFunctionBase
    {
        QuinticEase();
    }


    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Animation.IReorderThemeTransition", f2065c6c-d052-4ad1-8362-b71b36df7497)]
    [threading(both)]
    runtimeclass ReorderThemeTransition
        : Windows.UI.Xaml.Media.Animation.Transition
    {
        ReorderThemeTransition();
    }




    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Animation.IRepositionThemeTransition", 88329b82-98f3-455a-ac53-2e7083b6e22c)]
    [threading(both)]
    runtimeclass RepositionThemeTransition
        : Windows.UI.Xaml.Media.Animation.Transition
    {
        RepositionThemeTransition();

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [static_name("Windows.UI.Xaml.Media.Animation.IRepositionThemeTransitionStatics2", 9240e930-0a19-468b-8c2a-68fab4500027)]
        {
            static Windows.UI.Xaml.DependencyProperty IsStaggeringEnabledProperty{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [interface_name("Windows.UI.Xaml.Media.Animation.IRepositionThemeTransition2", cebfe864-dbea-4404-8e6e-de55ada75239)]
        {
            Boolean IsStaggeringEnabled{ get; };
            Boolean IsStaggeringEnabled{ set; };
        }
    }


    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Animation.ISineEase", a9382962-230b-49da-9e0d-664987892343)]
    [threading(both)]
    runtimeclass SineEase
        : Windows.UI.Xaml.Media.Animation.EasingFunctionBase
    {
        SineEase();
    }



    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Media.Animation.ISplineDoubleKeyFrameStatics", 060a8ffc-975f-4e4e-9ec7-13c5aee02062)]
    [interface_name("Windows.UI.Xaml.Media.Animation.ISplineDoubleKeyFrame", 00d72d38-6b2b-4843-838e-c8b115eec801)]
    [threading(both)]
    runtimeclass SplineDoubleKeyFrame
        : Windows.UI.Xaml.Media.Animation.DoubleKeyFrame
    {
        SplineDoubleKeyFrame();
        static Windows.UI.Xaml.DependencyProperty KeySplineProperty{ get; };
        Windows.UI.Xaml.Media.Animation.KeySpline KeySpline{ get; };
        Windows.UI.Xaml.Media.Animation.KeySpline KeySpline{ set; };
    }



}
namespace Windows.UI.Xaml.Input
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(e5af3542-ca67-4081-995b-709dd13792df)]
    interface ICommand
    {
        event Windows.Foundation.EventHandler <Object>  CanExecuteChanged;
        Boolean CanExecute(Object parameter);
        void Execute(Object parameter);
    };







    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Input.IAccessKeyManagerStatics", 4ca0efe6-d9c8-4ebc-b4c7-30d1838a81f1)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Input.IAccessKeyManager", ecc973b0-2ee9-4b1c-98d7-6e0e816d334b)]
    [threading(both)]
    runtimeclass AccessKeyManager
    {

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [static_name("Windows.UI.Xaml.Input.IAccessKeyManagerStatics2", 962bb594-2ab3-47c5-954b-7092f355f797)]
        {
            static Boolean AreKeyTipsEnabled{ get; };
            static Boolean AreKeyTipsEnabled{ set; };
        }
        static Boolean IsDisplayModeEnabled{ get; };
        static event Windows.Foundation.TypedEventHandler <Object, Object>  IsDisplayModeEnabledChanged;
        static void ExitDisplayMode();
    }


    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.Input.IInertiaExpansionBehavior", 751d87e5-8d42-44c5-965e-3cd30cc9d6f7)]
    runtimeclass InertiaExpansionBehavior
    {
        Double DesiredDeceleration{ get; };
        Double DesiredDeceleration{ set; };
        Double DesiredExpansion{ get; };
        Double DesiredExpansion{ set; };
    }


    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.Input.IInertiaRotationBehavior", 424cfb2e-bbfd-4625-ae78-20c65bf1efaf)]
    runtimeclass InertiaRotationBehavior
    {
        Double DesiredDeceleration{ get; };
        Double DesiredDeceleration{ set; };
        Double DesiredRotation{ get; };
        Double DesiredRotation{ set; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [interface_name("Windows.UI.Xaml.Input.IInertiaTranslationBehavior", 45d3a512-3b32-4882-a4c2-ecfa2d4b6df0)]
    runtimeclass InertiaTranslationBehavior
    {
        Double DesiredDeceleration{ get; };
        Double DesiredDeceleration{ set; };
        Double DesiredDisplacement{ get; };
        Double DesiredDisplacement{ set; };
    }





    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [constructor_name("Windows.UI.Xaml.Input.IManipulationPivotFactory", 6d05b039-3702-4396-ad9b-a825efa63a3b)]
    [interface_name("Windows.UI.Xaml.Input.IManipulationPivot", 2e3838a5-e6c2-4998-82ac-18748b141666)]
    [threading(both)]
    runtimeclass ManipulationPivot
    {
        [method_name( "CreateInstanceWithCenterAndRadius" )] ManipulationPivot(Windows.Foundation.Point center, Double radius);
        ManipulationPivot();
        Windows.Foundation.Point Center{ get; };
        Windows.Foundation.Point Center{ set; };
        Double Radius{ get; };
        Double Radius{ set; };
    }











    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [contentproperty("NameValue")]
    [constructor_name("Windows.UI.Xaml.Input.IInputScopeNameFactory", 4a40bb52-4bd7-4e54-8617-1cda8a1eda7f)]
    [interface_name("Windows.UI.Xaml.Input.IInputScopeName", fd3e6997-08fb-4cba-a021-792d7589fd5a)]
    [threading(both)]
    runtimeclass InputScopeName
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )] InputScopeName(InputScopeNameValue nameValue);
        InputScopeName();
        Windows.UI.Xaml.Input.InputScopeNameValue NameValue{ get; };
        Windows.UI.Xaml.Input.InputScopeNameValue NameValue{ set; };
    }

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Xaml.Input.IInputScope", 5c0f85f3-f9d8-4220-b666-045d074d9bfa)]
    [threading(both)]
    runtimeclass InputScope
        : Windows.UI.Xaml.DependencyObject
    {
        InputScope();
        Windows.Foundation.Collections.IVector <Windows.UI.Xaml.Input.InputScopeName>  Names{ get; };
    }

























}
namespace Windows.UI.Xaml.Controls
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Controls.IFocusDisengagedEventArgs", 5e14280f-953e-4cf8-b9ea-c530a1ce02ad)]
    runtimeclass FocusDisengagedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Controls.IFocusEngagedEventArgs", a69fc352-da66-404c-823f-5358594e70bb)]
    runtimeclass FocusEngagedEventArgs
        : Windows.UI.Xaml.RoutedEventArgs
    {

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [interface_name("Windows.UI.Xaml.Controls.IFocusEngagedEventArgs2", 4a59e0f4-87c0-4ccd-93c4-a3a01ce39265)]
        {
            Boolean Handled{ get; };
            Boolean Handled{ set; };
        }
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [interface_name("Windows.UI.Xaml.Controls.IControlTemplate", efd2418e-41e0-48bb-8b82-91eda1ba3fe2)]
    [threading(both)]
    runtimeclass ControlTemplate
        : Windows.UI.Xaml.FrameworkTemplate
    {
        ControlTemplate();
        Windows.UI.Xaml.Interop.TypeName TargetType{ get; };
        Windows.UI.Xaml.Interop.TypeName TargetType{ set; };
    }





















}
namespace Windows.UI.Xaml.Media.Imaging
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.Media.Imaging.IBitmapSourceFactory", e240420e-d4a7-49a4-a0b4-a59fdd77e508)]
    [static_name("Windows.UI.Xaml.Media.Imaging.IBitmapSourceStatics", 9a9c9981-827b-4e51-891b-8a15b511842d)]
    [interface_name("Windows.UI.Xaml.Media.Imaging.IBitmapSource", 23d86411-202f-41b2-8c5b-a8a3b333800b)]
    [threading(both)]
    unsealed runtimeclass BitmapSource
        : Windows.UI.Xaml.Media.ImageSource
    {
        [method_name( "CreateInstance" )]protected BitmapSource();
        static Windows.UI.Xaml.DependencyProperty PixelWidthProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty PixelHeightProperty{ get; };
        Int32 PixelWidth{ get; };
        Int32 PixelHeight{ get; };
        void SetSource(Windows.Storage.Streams.IRandomAccessStream streamSource);
        Windows.Foundation.IAsyncAction SetSourceAsync(Windows.Storage.Streams.IRandomAccessStream streamSource);
    }



    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Media.Imaging.IRenderTargetBitmapStatics", f0a1efee-c131-4d40-9c47-f7d7cf2b077f)]
    [interface_name("Windows.UI.Xaml.Media.Imaging.IRenderTargetBitmap", 500dee81-893c-4c0a-8fec-4678ac717589)]
    [threading(both)]
    runtimeclass RenderTargetBitmap
        : Windows.UI.Xaml.Media.ImageSource
    {
        RenderTargetBitmap();
        static Windows.UI.Xaml.DependencyProperty PixelWidthProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty PixelHeightProperty{ get; };
        Int32 PixelWidth{ get; };
        Int32 PixelHeight{ get; };
        [method_name("RenderAsync")] Windows.Foundation.IAsyncAction RenderAsync(Windows.UI.Xaml.UIElement element);
        [method_name("RenderToSizeAsync")] Windows.Foundation.IAsyncAction RenderAsync(Windows.UI.Xaml.UIElement element, Int32 scaledWidth, Int32 scaledHeight);
        Windows.Foundation.IAsyncOperation <Windows.Storage.Streams.IBuffer>  GetPixelsAsync();
    }



    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [constructor_name("Windows.UI.Xaml.Media.Imaging.ISurfaceImageSourceFactory", 3ab2212a-ef65-4a5f-bfac-73993e8c12c9)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Imaging.ISurfaceImageSource", 62f7d416-c714-4c4c-8273-f839bc58135c)]
    [threading(both)]
    unsealed runtimeclass SurfaceImageSource
        : Windows.UI.Xaml.Media.ImageSource
    {
        [method_name( "CreateInstanceWithDimensions" )] SurfaceImageSource(Int32 pixelWidth, Int32 pixelHeight);
        [method_name( "CreateInstanceWithDimensionsAndOpacity" )] SurfaceImageSource(Int32 pixelWidth, Int32 pixelHeight, Boolean isOpaque);
    }










    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.Media.Imaging.IVirtualSurfaceImageSourceFactory", 3ab2212a-bfac-11e0-8a92-69e44724019b)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Media.Imaging.IVirtualSurfaceImageSource", 4a711fea-bfac-11e0-a06a-9de44724019b)]
    [threading(both)]
    runtimeclass VirtualSurfaceImageSource
        : Windows.UI.Xaml.Media.Imaging.SurfaceImageSource
    {
        [method_name( "CreateInstanceWithDimensions" )] VirtualSurfaceImageSource(Int32 pixelWidth, Int32 pixelHeight);
        [method_name( "CreateInstanceWithDimensionsAndOpacity" )] VirtualSurfaceImageSource(Int32 pixelWidth, Int32 pixelHeight, Boolean isOpaque);
    }



    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [constructor_name("Windows.UI.Xaml.Media.Imaging.IWriteableBitmapFactory", 5563ebb1-3ef2-42c5-9c6d-1cf5dcc041ff)]
    [interface_name("Windows.UI.Xaml.Media.Imaging.IWriteableBitmap", bf0b7e6f-df7c-4a85-8413-a1216285835c)]
    [threading(both)]
    runtimeclass WriteableBitmap
        : Windows.UI.Xaml.Media.Imaging.BitmapSource
    {
        [method_name( "CreateInstanceWithDimensions" )] WriteableBitmap(Int32 pixelWidth, Int32 pixelHeight);
        Windows.Storage.Streams.IBuffer PixelBuffer{ get; };
        void Invalidate();
    }


}
namespace Windows.UI.Xaml.Controls.Primitives
{
    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [interface_name("Windows.UI.Xaml.Controls.Primitives.IFlyoutBaseClosingEventArgs", d075852d-b09a-4fd1-b005-db2ba01206fb)]
    runtimeclass FlyoutBaseClosingEventArgs
    {
        Boolean Cancel{ get; };
        Boolean Cancel{ set; };
    }



    [contract(Windows.Foundation.UniversalApiContract, 7)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.Controls.Primitives.IFlyoutShowOptionsFactory", ce596f61-2eb4-5b4e-af69-f9af42320eee)]
    [interface_name("Windows.UI.Xaml.Controls.Primitives.IFlyoutShowOptions", 57d693ad-0c74-54dd-b110-1ee43fabadd9)]
    [threading(both)]
    unsealed runtimeclass FlyoutShowOptions
    {
        [method_name( "CreateInstance" )] FlyoutShowOptions();
        Windows.Foundation.IReference <Windows.Foundation.Point>  Position{ get; };
        Windows.Foundation.IReference <Windows.Foundation.Point>  Position{ set; };
        Windows.Foundation.IReference <Windows.Foundation.Rect>  ExclusionRect{ get; };
        Windows.Foundation.IReference <Windows.Foundation.Rect>  ExclusionRect{ set; };
        Windows.UI.Xaml.Controls.Primitives.FlyoutShowMode ShowMode{ get; };
        Windows.UI.Xaml.Controls.Primitives.FlyoutShowMode ShowMode{ set; };
        Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode Placement{ get; };
        Windows.UI.Xaml.Controls.Primitives.FlyoutPlacementMode Placement{ set; };
    }

















}
namespace Windows.UI.Xaml.Automation
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.IAutomationProperty", b627195b-3227-4e16-9534-ddece30ddb46)]
    runtimeclass AutomationProperty
    {
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Automation.IAnnotationPatternIdentifiersStatics", e0e3a35d-d167-46dc-95ab-330af61aebb5)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.IAnnotationPatternIdentifiers", d475a0c1-48b2-4e40-a6cf-3dc4b638c0de)]
    [threading(both)]
    runtimeclass AnnotationPatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty AnnotationTypeIdProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty AnnotationTypeNameProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty AuthorProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty DateTimeProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty TargetProperty{ get; };
    }










    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Automation.IAutomationElementIdentifiersStatics3", 0f5cbebd-b3eb-4083-adc7-0c2f39bb3543)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.IAutomationElementIdentifiers", e68a63cf-4345-4e2d-8a6a-49cce1fa2dcc)]
    [threading(both)]
    runtimeclass AutomationElementIdentifiers
    {

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [static_name("Windows.UI.Xaml.Automation.IAutomationElementIdentifiersStatics5", 986a8206-de59-42f9-a1e7-62b8af9e756d)]
        {
            static Windows.UI.Xaml.Automation.AutomationProperty IsPeripheralProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty IsDataValidForFormProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty FullDescriptionProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty DescribedByProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty FlowsToProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty FlowsFromProperty{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [static_name("Windows.UI.Xaml.Automation.IAutomationElementIdentifiersStatics8", 8517b060-806c-5dc5-bc41-891bb5a47adf)]
        {
            static Windows.UI.Xaml.Automation.AutomationProperty IsDialogProperty{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [static_name("Windows.UI.Xaml.Automation.IAutomationElementIdentifiersStatics7", 00f1abb2-742c-446a-a8f6-1672b10d2874)]
        {
            static Windows.UI.Xaml.Automation.AutomationProperty HeadingLevelProperty{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [static_name("Windows.UI.Xaml.Automation.IAutomationElementIdentifiersStatics6", de52b00d-8328-4eae-8035-f8db99c8bac4)]
        {
            static Windows.UI.Xaml.Automation.AutomationProperty CultureProperty{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 2)]
        [static_name("Windows.UI.Xaml.Automation.IAutomationElementIdentifiersStatics4", 5af51f75-5913-4d78-b330-a6f50b73ed9b)]
        {
            static Windows.UI.Xaml.Automation.AutomationProperty LandmarkTypeProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty LocalizedLandmarkTypeProperty{ get; };
        }
        static Windows.UI.Xaml.Automation.AutomationProperty PositionInSetProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty SizeOfSetProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty LevelProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty AnnotationsProperty{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [static_name("Windows.UI.Xaml.Automation.IAutomationElementIdentifiersStatics2", b5cbb1e2-d55f-46a9-9eda-1a4742515dc3)]
        {
            static Windows.UI.Xaml.Automation.AutomationProperty ControlledPeersProperty{ get; };
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [static_name("Windows.UI.Xaml.Automation.IAutomationElementIdentifiersStatics", 4549399f-8340-4d67-b9bf-8c2ac6a0773a)]
        {
            static Windows.UI.Xaml.Automation.AutomationProperty AcceleratorKeyProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty AccessKeyProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty AutomationIdProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty BoundingRectangleProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty ClassNameProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty ClickablePointProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty ControlTypeProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty HasKeyboardFocusProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty HelpTextProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty IsContentElementProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty IsControlElementProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty IsEnabledProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty IsKeyboardFocusableProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty IsOffscreenProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty IsPasswordProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty IsRequiredForFormProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty ItemStatusProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty ItemTypeProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty LabeledByProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty LocalizedControlTypeProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty NameProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty OrientationProperty{ get; };
            static Windows.UI.Xaml.Automation.AutomationProperty LiveSettingProperty{ get; };
        }
    }





    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.Automation.IAutomationAnnotationFactory", 4906fa52-ddc0-4e69-b76b-019d928d822f)]
    [static_name("Windows.UI.Xaml.Automation.IAutomationAnnotationStatics", e503eab7-4ee5-48cb-b5b8-bbcd46c9d1da)]
    [interface_name("Windows.UI.Xaml.Automation.IAutomationAnnotation", fb3c30ca-03d8-4618-91bf-e4d84f4af318)]
    [threading(both)]
    runtimeclass AutomationAnnotation
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )] AutomationAnnotation(AnnotationType type);
        [method_name( "CreateWithElementParameter" )] AutomationAnnotation(AnnotationType type, Windows.UI.Xaml.UIElement element);
        AutomationAnnotation();
        static Windows.UI.Xaml.DependencyProperty TypeProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty ElementProperty{ get; };
        Windows.UI.Xaml.Automation.AnnotationType Type{ get; };
        Windows.UI.Xaml.Automation.AnnotationType Type{ set; };
        Windows.UI.Xaml.UIElement Element{ get; };
        Windows.UI.Xaml.UIElement Element{ set; };
    }






    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Automation.IAutomationPropertiesStatics", b618fd7b-32d0-4970-9c42-7c039ac7be78)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.IAutomationProperties", 68d7232c-e622-48e9-af0b-1ffa33cc5cba)]
    [threading(both)]
    runtimeclass AutomationProperties
    {

        [contract(Windows.Foundation.UniversalApiContract, 7)]
        [static_name("Windows.UI.Xaml.Automation.IAutomationPropertiesStatics8", 432eca20-171a-560d-8524-3e651d3ad6ca)]
        {
            static Windows.UI.Xaml.DependencyProperty IsDialogProperty{ get; };
            static Boolean GetIsDialog(Windows.UI.Xaml.DependencyObject element);
            static void SetIsDialog(Windows.UI.Xaml.DependencyObject element, Boolean value);
        }

        [contract(Windows.Foundation.UniversalApiContract, 6)]
        [static_name("Windows.UI.Xaml.Automation.IAutomationPropertiesStatics7", f7e98bf3-8f91-4068-a4ad-b7b402d10a2c)]
        {
            static Windows.UI.Xaml.DependencyProperty HeadingLevelProperty{ get; };
            static Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel GetHeadingLevel(Windows.UI.Xaml.DependencyObject element);
            static void SetHeadingLevel(Windows.UI.Xaml.DependencyObject element, Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel value);
        }
        static Windows.UI.Xaml.DependencyProperty AcceleratorKeyProperty{ get; };
        static String GetAcceleratorKey(Windows.UI.Xaml.DependencyObject element);
        static void SetAcceleratorKey(Windows.UI.Xaml.DependencyObject element, String value);
        static Windows.UI.Xaml.DependencyProperty AccessKeyProperty{ get; };
        static String GetAccessKey(Windows.UI.Xaml.DependencyObject element);
        static void SetAccessKey(Windows.UI.Xaml.DependencyObject element, String value);
        static Windows.UI.Xaml.DependencyProperty AutomationIdProperty{ get; };
        static String GetAutomationId(Windows.UI.Xaml.DependencyObject element);
        static void SetAutomationId(Windows.UI.Xaml.DependencyObject element, String value);
        static Windows.UI.Xaml.DependencyProperty HelpTextProperty{ get; };
        static String GetHelpText(Windows.UI.Xaml.DependencyObject element);
        static void SetHelpText(Windows.UI.Xaml.DependencyObject element, String value);
        static Windows.UI.Xaml.DependencyProperty IsRequiredForFormProperty{ get; };
        static Boolean GetIsRequiredForForm(Windows.UI.Xaml.DependencyObject element);
        static void SetIsRequiredForForm(Windows.UI.Xaml.DependencyObject element, Boolean value);
        static Windows.UI.Xaml.DependencyProperty ItemStatusProperty{ get; };
        static String GetItemStatus(Windows.UI.Xaml.DependencyObject element);
        static void SetItemStatus(Windows.UI.Xaml.DependencyObject element, String value);
        static Windows.UI.Xaml.DependencyProperty ItemTypeProperty{ get; };
        static String GetItemType(Windows.UI.Xaml.DependencyObject element);
        static void SetItemType(Windows.UI.Xaml.DependencyObject element, String value);
        static Windows.UI.Xaml.DependencyProperty LabeledByProperty{ get; };
        static Windows.UI.Xaml.UIElement GetLabeledBy(Windows.UI.Xaml.DependencyObject element);
        static void SetLabeledBy(Windows.UI.Xaml.DependencyObject element, Windows.UI.Xaml.UIElement value);
        static Windows.UI.Xaml.DependencyProperty NameProperty{ get; };
        static String GetName(Windows.UI.Xaml.DependencyObject element);
        static void SetName(Windows.UI.Xaml.DependencyObject element, String value);
        static Windows.UI.Xaml.DependencyProperty LiveSettingProperty{ get; };
        static Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting GetLiveSetting(Windows.UI.Xaml.DependencyObject element);
        static void SetLiveSetting(Windows.UI.Xaml.DependencyObject element, Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting value);

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [static_name("Windows.UI.Xaml.Automation.IAutomationPropertiesStatics6", c61e030f-eb49-4e5d-b012-4c1c96c3901b)]
        {
            static Windows.UI.Xaml.DependencyProperty CultureProperty{ get; };
            static Int32 GetCulture(Windows.UI.Xaml.DependencyObject element);
            static void SetCulture(Windows.UI.Xaml.DependencyObject element, Int32 value);
        }

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [static_name("Windows.UI.Xaml.Automation.IAutomationPropertiesStatics5", 0be35b26-c8f9-41a2-b4db-e6a7a32b0c34)]
        {
            static Windows.UI.Xaml.DependencyProperty IsPeripheralProperty{ get; };
            static Boolean GetIsPeripheral(Windows.UI.Xaml.DependencyObject element);
            static void SetIsPeripheral(Windows.UI.Xaml.DependencyObject element, Boolean value);
            static Windows.UI.Xaml.DependencyProperty IsDataValidForFormProperty{ get; };
            static Boolean GetIsDataValidForForm(Windows.UI.Xaml.DependencyObject element);
            static void SetIsDataValidForForm(Windows.UI.Xaml.DependencyObject element, Boolean value);
            static Windows.UI.Xaml.DependencyProperty FullDescriptionProperty{ get; };
            static String GetFullDescription(Windows.UI.Xaml.DependencyObject element);
            static void SetFullDescription(Windows.UI.Xaml.DependencyObject element, String value);
            static Windows.UI.Xaml.DependencyProperty LocalizedControlTypeProperty{ get; };
            static String GetLocalizedControlType(Windows.UI.Xaml.DependencyObject element);
            static void SetLocalizedControlType(Windows.UI.Xaml.DependencyObject element, String value);
            static Windows.UI.Xaml.DependencyProperty DescribedByProperty{ get; };
            static Windows.Foundation.Collections.IVector <Windows.UI.Xaml.DependencyObject>  GetDescribedBy(Windows.UI.Xaml.DependencyObject element);
            static Windows.UI.Xaml.DependencyProperty FlowsToProperty{ get; };
            static Windows.Foundation.Collections.IVector <Windows.UI.Xaml.DependencyObject>  GetFlowsTo(Windows.UI.Xaml.DependencyObject element);
            static Windows.UI.Xaml.DependencyProperty FlowsFromProperty{ get; };
            static Windows.Foundation.Collections.IVector <Windows.UI.Xaml.DependencyObject>  GetFlowsFrom(Windows.UI.Xaml.DependencyObject element);
        }

        [contract(Windows.Foundation.UniversalApiContract, 2)]
        [static_name("Windows.UI.Xaml.Automation.IAutomationPropertiesStatics4", f7d62655-311a-4b7c-a131-524e89cd3cf9)]
        {
            static Windows.UI.Xaml.DependencyProperty LandmarkTypeProperty{ get; };
            static Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType GetLandmarkType(Windows.UI.Xaml.DependencyObject element);
            static void SetLandmarkType(Windows.UI.Xaml.DependencyObject element, Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType value);
            static Windows.UI.Xaml.DependencyProperty LocalizedLandmarkTypeProperty{ get; };
            static String GetLocalizedLandmarkType(Windows.UI.Xaml.DependencyObject element);
            static void SetLocalizedLandmarkType(Windows.UI.Xaml.DependencyObject element, String value);
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [static_name("Windows.UI.Xaml.Automation.IAutomationPropertiesStatics3", 7b75d735-5cb1-42ad-9b57-5faba8c1867f)]
        {
            static Windows.UI.Xaml.DependencyProperty PositionInSetProperty{ get; };
            static Int32 GetPositionInSet(Windows.UI.Xaml.DependencyObject element);
            static void SetPositionInSet(Windows.UI.Xaml.DependencyObject element, Int32 value);
            static Windows.UI.Xaml.DependencyProperty SizeOfSetProperty{ get; };
            static Int32 GetSizeOfSet(Windows.UI.Xaml.DependencyObject element);
            static void SetSizeOfSet(Windows.UI.Xaml.DependencyObject element, Int32 value);
            static Windows.UI.Xaml.DependencyProperty LevelProperty{ get; };
            static Int32 GetLevel(Windows.UI.Xaml.DependencyObject element);
            static void SetLevel(Windows.UI.Xaml.DependencyObject element, Int32 value);
            static Windows.UI.Xaml.DependencyProperty AnnotationsProperty{ get; };
            static Windows.Foundation.Collections.IVector <Windows.UI.Xaml.Automation.AutomationAnnotation>  GetAnnotations(Windows.UI.Xaml.DependencyObject element);
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [static_name("Windows.UI.Xaml.Automation.IAutomationPropertiesStatics2", 3976547f-7089-4801-8f1d-aab78090d1a0)]
        {
            static Windows.UI.Xaml.DependencyProperty AccessibilityViewProperty{ get; };
            static Windows.UI.Xaml.Automation.Peers.AccessibilityView GetAccessibilityView(Windows.UI.Xaml.DependencyObject element);
            static void SetAccessibilityView(Windows.UI.Xaml.DependencyObject element, Windows.UI.Xaml.Automation.Peers.AccessibilityView value);
            static Windows.UI.Xaml.DependencyProperty ControlledPeersProperty{ get; };
            static Windows.Foundation.Collections.IVector <Windows.UI.Xaml.UIElement>  GetControlledPeers(Windows.UI.Xaml.DependencyObject element);
        }
    }




    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [static_name("Windows.UI.Xaml.Automation.IDockPatternIdentifiersStatics", 2b87245c-ed80-4fe5-8eb4-708a39c841e5)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.IDockPatternIdentifiers", ccd7f4e6-e4f9-47ff-bde7-378b11f78e09)]
    [threading(both)]
    runtimeclass DockPatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty DockPositionProperty{ get; };
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Automation.IDragPatternIdentifiersStatics", 2a05379d-1755-4082-9d90-46f1411d7986)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.IDragPatternIdentifiers", 6266e985-4d07-4e80-82eb-8f96690a1a0c)]
    [threading(both)]
    runtimeclass DragPatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty DropEffectProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty DropEffectsProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty GrabbedItemsProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty IsGrabbedProperty{ get; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Automation.IDropTargetPatternIdentifiersStatics", 1b693304-89fb-4b0a-9452-ca2c66aaf9f3)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.IDropTargetPatternIdentifiers", 11865133-a6fe-4634-bd18-0ef612b7b208)]
    [threading(both)]
    runtimeclass DropTargetPatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty DropTargetEffectProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty DropTargetEffectsProperty{ get; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Automation.IExpandCollapsePatternIdentifiersStatics", d7816fd4-6ee0-4f38-8e14-56ef21adacfd)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.IExpandCollapsePatternIdentifiers", b006bac0-751b-4d55-92cb-613ec1bdf5d0)]
    [threading(both)]
    runtimeclass ExpandCollapsePatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty ExpandCollapseStateProperty{ get; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Automation.IGridItemPatternIdentifiersStatics", 217d2402-5e46-4d61-8794-b8ee8e774714)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.IGridItemPatternIdentifiers", 757744f1-3285-4fb1-803b-2545bd431599)]
    [threading(both)]
    runtimeclass GridItemPatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty ColumnProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty ColumnSpanProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty ContainingGridProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty RowProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty RowSpanProperty{ get; };
    }



    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Automation.IGridPatternIdentifiersStatics", 7bc452f3-a181-4137-8de9-1f9b1a8320ed)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.IGridPatternIdentifiers", c902980f-96c5-450c-9044-7e52c24f9e94)]
    [threading(both)]
    runtimeclass GridPatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty ColumnCountProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty RowCountProperty{ get; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Automation.IMultipleViewPatternIdentifiersStatics", a9cfa66f-6b84-4d71-9e48-d764d3bcda8e)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.IMultipleViewPatternIdentifiers", 5d5cd3b8-1e12-488b-b0ea-5e6cb89816e1)]
    [threading(both)]
    runtimeclass MultipleViewPatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty CurrentViewProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty SupportedViewsProperty{ get; };
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Automation.IRangeValuePatternIdentifiersStatics", ce23450f-1c27-457f-b815-7a5e46863dbb)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.IRangeValuePatternIdentifiers", f8760f45-33c9-467d-bc9e-d1515263ace1)]
    [threading(both)]
    runtimeclass RangeValuePatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty IsReadOnlyProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty LargeChangeProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty MaximumProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty MinimumProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty SmallChangeProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty ValueProperty{ get; };
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Automation.IScrollPatternIdentifiersStatics", 4bf8e0a1-fb7f-4fa4-83b3-cfaeb103a685)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.IScrollPatternIdentifiers", 366b1003-425c-4951-ae83-d521e73bc696)]
    [threading(both)]
    runtimeclass ScrollPatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty HorizontallyScrollableProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty HorizontalScrollPercentProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty HorizontalViewSizeProperty{ get; };
        static Double NoScroll{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty VerticallyScrollableProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty VerticalScrollPercentProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty VerticalViewSizeProperty{ get; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Automation.ISelectionItemPatternIdentifiersStatics", a918d163-487e-4e3e-9f86-7b44acbe27ce)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.ISelectionItemPatternIdentifiers", 2dafa41a-3ef8-4bb5-a02b-3ee1b2274740)]
    [threading(both)]
    runtimeclass SelectionItemPatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty IsSelectedProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty SelectionContainerProperty{ get; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Automation.ISelectionPatternIdentifiersStatics", 93035b4c-6b50-40a1-b23f-5c78ddbd479a)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.ISelectionPatternIdentifiers", 4aa66fb0-e3f7-475f-b78d-f8a83bb730c4)]
    [threading(both)]
    runtimeclass SelectionPatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty CanSelectMultipleProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty IsSelectionRequiredProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty SelectionProperty{ get; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Automation.ISpreadsheetItemPatternIdentifiersStatics", 43658779-5380-4f12-b468-b4f368ad4499)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.ISpreadsheetItemPatternIdentifiers", 84347e19-ca4b-46a2-a794-c87928a3b1ab)]
    [threading(both)]
    runtimeclass SpreadsheetItemPatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty FormulaProperty{ get; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Automation.IStylesPatternIdentifiersStatics", 528a457a-bc3c-4d48-94af-1f68703ca296)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.IStylesPatternIdentifiers", b0e4e201-e89d-436b-8287-4f7903466879)]
    [threading(both)]
    runtimeclass StylesPatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty ExtendedPropertiesProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty FillColorProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty FillPatternColorProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty FillPatternStyleProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty ShapeProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty StyleIdProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty StyleNameProperty{ get; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Automation.ITableItemPatternIdentifiersStatics", 24c4b923-e9a2-4de9-b2a4-a8b22d0be362)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.ITableItemPatternIdentifiers", c326e5ad-8077-4c64-98e4-e83bcf1b4389)]
    [threading(both)]
    runtimeclass TableItemPatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty ColumnHeaderItemsProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty RowHeaderItemsProperty{ get; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Automation.ITablePatternIdentifiersStatics", 75073d25-32c9-4903-aecf-dc3504cbd244)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.ITablePatternIdentifiers", 38d104fe-0d0c-412a-bf8d-51ede683baf5)]
    [threading(both)]
    runtimeclass TablePatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty ColumnHeadersProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty RowHeadersProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty RowOrColumnMajorProperty{ get; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Automation.ITogglePatternIdentifiersStatics", c7f75544-14a5-4f2f-92fc-760524de06ea)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.ITogglePatternIdentifiers", 7e191f6b-34d4-4ae7-83ac-29f88882d985)]
    [threading(both)]
    runtimeclass TogglePatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty ToggleStateProperty{ get; };
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Automation.ITransformPattern2IdentifiersStatics", 78963644-11f0-467c-a72b-5dac41c1f6fe)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.ITransformPattern2Identifiers", 08aaa03d-dea7-402f-8097-9a2783d60e5d)]
    [threading(both)]
    runtimeclass TransformPattern2Identifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty CanZoomProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty ZoomLevelProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty MaxZoomProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty MinZoomProperty{ get; };
    }



    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Automation.ITransformPatternIdentifiersStatics", 4570edab-d705-40c4-a1dc-e9acfcef85f6)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.ITransformPatternIdentifiers", e4115b8c-c3c8-4a37-b994-2709a7811665)]
    [threading(both)]
    runtimeclass TransformPatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty CanMoveProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty CanResizeProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty CanRotateProperty{ get; };
    }



    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Automation.IValuePatternIdentifiersStatics", c247e8f7-adcc-440f-b123-33788a40525a)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.IValuePatternIdentifiers", 425bf64c-5333-4e41-b470-2bad14ecd085)]
    [threading(both)]
    runtimeclass ValuePatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty IsReadOnlyProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty ValueProperty{ get; };
    }



    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Automation.IWindowPatternIdentifiersStatics", 07d0ad06-6302-4d29-878b-19da03fc228d)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.IWindowPatternIdentifiers", 39f78bb4-7032-41e2-b79e-27b74a8628de)]
    [threading(both)]
    runtimeclass WindowPatternIdentifiers
    {
        static Windows.UI.Xaml.Automation.AutomationProperty CanMaximizeProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty CanMinimizeProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty IsModalProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty IsTopmostProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty WindowInteractionStateProperty{ get; };
        static Windows.UI.Xaml.Automation.AutomationProperty WindowVisualStateProperty{ get; };
    }







}
namespace Windows.UI.Xaml.Automation.Peers
{
    [webhosthidden]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationStatics", 8809a87d-09b2-4d45-b78b-1d3b3b09f661)]
    [interface_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation", 0c456061-52cf-43fa-82f8-07f137351e5a)]
    [threading(both)]
    runtimeclass AutomationPeerAnnotation
        : Windows.UI.Xaml.DependencyObject
    {
        static Windows.UI.Xaml.DependencyProperty TypeProperty{ get; };
        static Windows.UI.Xaml.DependencyProperty PeerProperty{ get; };
        AutomationPeerAnnotation();

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [constructor_name("Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotationFactory", f59c439e-c65b-43cd-9009-03fc023363a7)]
        {
            [method_name( "CreateInstance" )] AutomationPeerAnnotation(Windows.UI.Xaml.Automation.AnnotationType type);
            [method_name( "CreateWithPeerParameter" )] AutomationPeerAnnotation(Windows.UI.Xaml.Automation.AnnotationType type, AutomationPeer peer);
        }
        Windows.UI.Xaml.Automation.AnnotationType Type{ get; };
        Windows.UI.Xaml.Automation.AnnotationType Type{ set; };
        Windows.UI.Xaml.Automation.Peers.AutomationPeer Peer{ get; };
        Windows.UI.Xaml.Automation.Peers.AutomationPeer Peer{ set; };
    }








}
namespace Windows.UI.Xaml.Automation.Provider
{
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple", ec752224-9b77-4720-bb21-4ac89fdb1afd)]
    runtimeclass IRawElementProviderSimple
        : Windows.UI.Xaml.DependencyObject
    {
    }


















}
namespace Windows.UI.Xaml.Automation.Peers
{
    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [constructor_name("Windows.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerFactory", 0db9b8bc-b812-48e3-af1f-dbc57600c325)]
    [static_name("Windows.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeerStatics", b9c0b997-2820-44a1-a5a8-9b801edc269e)]
    [interface_name("Windows.UI.Xaml.Automation.Peers.IFrameworkElementAutomationPeer", b90ad781-bfeb-4451-bd47-9f3a63ebd24a)]
    [threading(both)]
    unsealed runtimeclass FrameworkElementAutomationPeer
        : Windows.UI.Xaml.Automation.Peers.AutomationPeer
    {
        [method_name( "CreateInstanceWithOwner" )] FrameworkElementAutomationPeer(Windows.UI.Xaml.FrameworkElement owner);
        static Windows.UI.Xaml.Automation.Peers.AutomationPeer FromElement(Windows.UI.Xaml.UIElement element);
        static Windows.UI.Xaml.Automation.Peers.AutomationPeer CreatePeerForElement(Windows.UI.Xaml.UIElement element);
        Windows.UI.Xaml.UIElement Owner{ get; };
    }

}
namespace Windows.UI.Xaml.Automation.Provider
{
    [webhosthidden]
    [uuid(95ba1417-4437-451b-9461-050a49b59d06)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface IAnnotationProvider
    {
        Int32 AnnotationTypeId{ get; };
        String AnnotationTypeName{ get; };
        String Author{ get; };
        String DateTime{ get; };
        Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple Target{ get; };
    };

    [uuid(48c243f8-78b1-44a0-ac5f-750757bcde3c)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    interface IDockProvider
    {
        Windows.UI.Xaml.Automation.DockPosition DockPosition{ get; };
        void SetDockPosition(Windows.UI.Xaml.Automation.DockPosition dockPosition);
    };

    [uuid(2e7786a9-7ffc-4f57-b965-1ef1f373f546)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    interface IDragProvider
    {
        Boolean IsGrabbed{ get; };
        String DropEffect{ get; };
        String[] DropEffects{ get; };
        Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetGrabbedItems();
    };

    [uuid(7a245bdd-b458-4fe0-98c8-aac89df56d61)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    interface IDropTargetProvider
    {
        String DropEffect{ get; };
        String[] DropEffects{ get; };
    };

    [uuid(49ac8399-d626-4543-94b9-a6d9a9593af6)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface IExpandCollapseProvider
    {
        Windows.UI.Xaml.Automation.ExpandCollapseState ExpandCollapseState{ get; };
        void Collapse();
        void Expand();
    };

    [uuid(fff3683c-7407-45bb-a936-df3ed6d3837d)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    interface IGridItemProvider
    {
        Int32 Column{ get; };
        Int32 ColumnSpan{ get; };
        Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple ContainingGrid{ get; };
        Int32 Row{ get; };
        Int32 RowSpan{ get; };
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [uuid(8b62b7a0-932c-4490-9a13-02fdb39a8f5b)]
    interface IGridProvider
    {
        Int32 ColumnCount{ get; };
        Int32 RowCount{ get; };
        Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple GetItem(Int32 row, Int32 column);
    };

    [uuid(f7d1a187-b13c-4540-b09e-6778e2dc9ba5)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface IInvokeProvider
    {
        void Invoke();
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(ef5cd845-e1d4-40f4-bad5-c7fad44a703e)]
    [webhosthidden]
    interface IItemContainerProvider
    {
        Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple FindItemByProperty(IRawElementProviderSimple startAfter, Windows.UI.Xaml.Automation.AutomationProperty automationProperty, Object value);
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(d014e196-0e50-4843-a5d2-c22897c8845a)]
    [webhosthidden]
    interface IMultipleViewProvider
    {
        Int32 CurrentView{ get; };
        Int32[] GetSupportedViews();
        String GetViewName(Int32 viewId);
        void SetCurrentView(Int32 viewId);
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(c3ca36b9-0793-4ed0-bbf4-9ff4e0f98f80)]
    [webhosthidden]
    interface IObjectModelProvider
    {
        Object GetUnderlyingObjectModel();
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(838a34a8-7d5f-4079-af03-c3d015e93413)]
    interface IRangeValueProvider
    {
        Boolean IsReadOnly{ get; };
        Double LargeChange{ get; };
        Double Maximum{ get; };
        Double Minimum{ get; };
        Double SmallChange{ get; };
        Double Value{ get; };
        void SetValue(Double value);
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [uuid(9a3ec090-5d2c-4e42-9ee6-9d58db100b55)]
    interface IScrollItemProvider
    {
        void ScrollIntoView();
    };

    [webhosthidden]
    [uuid(374bf581-7716-4bbc-82eb-d997006ea999)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface IScrollProvider
    {
        Boolean HorizontallyScrollable{ get; };
        Double HorizontalScrollPercent{ get; };
        Double HorizontalViewSize{ get; };
        Boolean VerticallyScrollable{ get; };
        Double VerticalScrollPercent{ get; };
        Double VerticalViewSize{ get; };
        void Scroll(Windows.UI.Xaml.Automation.ScrollAmount horizontalAmount, Windows.UI.Xaml.Automation.ScrollAmount verticalAmount);
        void SetScrollPercent(Double horizontalPercent, Double verticalPercent);
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(6a4977c1-830d-42d2-bf62-042ebddecc19)]
    [webhosthidden]
    interface ISelectionItemProvider
    {
        Boolean IsSelected{ get; };
        Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple SelectionContainer{ get; };
        void AddToSelection();
        void RemoveFromSelection();
        void Select();
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(1f018fca-b944-4395-8de1-88f674af51d3)]
    [webhosthidden]
    interface ISelectionProvider
    {
        Boolean CanSelectMultiple{ get; };
        Boolean IsSelectionRequired{ get; };
        Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetSelection();
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(ebde8f92-6015-4826-b719-47521a81c67e)]
    interface ISpreadsheetItemProvider
    {
        String Formula{ get; };
        Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetAnnotationObjects();
        Windows.UI.Xaml.Automation.AnnotationType[] GetAnnotationTypes();
    };

    [uuid(15359093-bd99-4cfd-9f07-3b14b315e23d)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    interface ISpreadsheetProvider
    {
        Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple GetItemByName(String name);
    };

    [webhosthidden]
    [uuid(1a5b7a17-7c01-4bec-9cd4-2dfa7dc246cd)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface IStylesProvider
    {
        String ExtendedProperties{ get; };
        Windows.UI.Color FillColor{ get; };
        Windows.UI.Color FillPatternColor{ get; };
        String FillPatternStyle{ get; };
        String Shape{ get; };
        Int32 StyleId{ get; };
        String StyleName{ get; };
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(3d60cecb-da54-4aa3-b915-e3244427d4ac)]
    interface ISynchronizedInputProvider
    {
        void Cancel();
        void StartListening(Windows.UI.Xaml.Automation.SynchronizedInputType inputType);
    };

    [webhosthidden]
    [uuid(3b2c49cd-1de2-4ee2-a3e1-fb553559d15d)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface ITableItemProvider
    {
        Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetColumnHeaderItems();
        Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetRowHeaderItems();
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(7a8ed399-6824-4595-bab3-464bc9a04417)]
    [webhosthidden]
    interface ITableProvider
    {
        Windows.UI.Xaml.Automation.RowOrColumnMajor RowOrColumnMajor{ get; };
        Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetColumnHeaders();
        Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetRowHeaders();
    };

    [uuid(1133c336-a89b-4130-9be6-55e33334f557)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    interface ITextChildProvider
    {
        Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple TextContainer{ get; };
        Windows.UI.Xaml.Automation.Provider.ITextRangeProvider TextRange{ get; };
    };

    [uuid(0274688d-06e9-4f66-9446-28a5be98fbd0)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    interface ITextRangeProvider
    {
        Windows.UI.Xaml.Automation.Provider.ITextRangeProvider Clone();
        Boolean Compare(ITextRangeProvider textRangeProvider);
        Int32 CompareEndpoints(Windows.UI.Xaml.Automation.Text.TextPatternRangeEndpoint endpoint, ITextRangeProvider textRangeProvider, Windows.UI.Xaml.Automation.Text.TextPatternRangeEndpoint targetEndpoint);
        void ExpandToEnclosingUnit(Windows.UI.Xaml.Automation.Text.TextUnit unit);
        Windows.UI.Xaml.Automation.Provider.ITextRangeProvider FindAttribute(Int32 attributeId, Object value, Boolean backward);
        Windows.UI.Xaml.Automation.Provider.ITextRangeProvider FindText(String text, Boolean backward, Boolean ignoreCase);
        Object GetAttributeValue(Int32 attributeId);
        void GetBoundingRectangles(out Double[] returnValue);
        Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple GetEnclosingElement();
        String GetText(Int32 maxLength);
        Int32 Move(Windows.UI.Xaml.Automation.Text.TextUnit unit, Int32 count);
        Int32 MoveEndpointByUnit(Windows.UI.Xaml.Automation.Text.TextPatternRangeEndpoint endpoint, Windows.UI.Xaml.Automation.Text.TextUnit unit, Int32 count);
        void MoveEndpointByRange(Windows.UI.Xaml.Automation.Text.TextPatternRangeEndpoint endpoint, ITextRangeProvider textRangeProvider, Windows.UI.Xaml.Automation.Text.TextPatternRangeEndpoint targetEndpoint);
        void Select();
        void AddToSelection();
        void RemoveFromSelection();
        void ScrollIntoView(Boolean alignToTop);
        Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple[] GetChildren();
    };

    [uuid(db5bbc9f-4807-4f2a-8678-1b13f3c60e22)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface ITextProvider
    {
        Windows.UI.Xaml.Automation.Provider.ITextRangeProvider DocumentRange{ get; };
        Windows.UI.Xaml.Automation.SupportedTextSelection SupportedTextSelection{ get; };
        Windows.UI.Xaml.Automation.Provider.ITextRangeProvider[] GetSelection();
        Windows.UI.Xaml.Automation.Provider.ITextRangeProvider[] GetVisibleRanges();
        Windows.UI.Xaml.Automation.Provider.ITextRangeProvider RangeFromChild(IRawElementProviderSimple childElement);
        Windows.UI.Xaml.Automation.Provider.ITextRangeProvider RangeFromPoint(Windows.Foundation.Point screenLocation);
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(df1d48bc-0487-4e7f-9d5e-f09e77e41246)]
    [webhosthidden]
    interface ITextProvider2 requires Windows.UI.Xaml.Automation.Provider.ITextProvider
    {
        Windows.UI.Xaml.Automation.Provider.ITextRangeProvider RangeFromAnnotation(IRawElementProviderSimple annotationElement);
        [return_name("returnValue")] Windows.UI.Xaml.Automation.Provider.ITextRangeProvider GetCaretRange(out Boolean isActive);
    };

    [uuid(d3be3dfb-9f54-4642-a7a5-5c18d5ee2a3f)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    interface ITextRangeProvider2 requires Windows.UI.Xaml.Automation.Provider.ITextRangeProvider
    {
        void ShowContextMenu();
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(93b88290-656f-44f7-aeaf-78b8f944d062)]
    interface IToggleProvider
    {
        Windows.UI.Xaml.Automation.ToggleState ToggleState{ get; };
        void Toggle();
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(79670fdd-f6a9-4a65-af17-861db799a2da)]
    interface ITransformProvider
    {
        Boolean CanMove{ get; };
        Boolean CanResize{ get; };
        Boolean CanRotate{ get; };
        void Move(Double x, Double y);
        void Resize(Double width, Double height);
        void Rotate(Double degrees);
    };

    [webhosthidden]
    [uuid(a8b11756-a39f-4e97-8c7d-c1ea8dd633c5)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface ITransformProvider2 requires Windows.UI.Xaml.Automation.Provider.ITransformProvider
    {
        Boolean CanZoom{ get; };
        Double ZoomLevel{ get; };
        Double MaxZoom{ get; };
        Double MinZoom{ get; };
        void Zoom(Double zoom);
        void ZoomByUnit(Windows.UI.Xaml.Automation.ZoomUnit zoomUnit);
    };

    [webhosthidden]
    [uuid(2086b7a7-ac0e-47d1-ab9b-2a64292afdf8)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface IValueProvider
    {
        Boolean IsReadOnly{ get; };
        String Value{ get; };
        void SetValue(String value);
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [webhosthidden]
    [uuid(17d4a04b-d658-48e0-a574-5a516c58dfa7)]
    interface IVirtualizedItemProvider
    {
        void Realize();
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(1baa8b3d-38cf-415a-85d3-20e43a0ec1b1)]
    [webhosthidden]
    interface IWindowProvider
    {
        Boolean IsModal{ get; };
        Boolean IsTopmost{ get; };
        Boolean Maximizable{ get; };
        Boolean Minimizable{ get; };
        Windows.UI.Xaml.Automation.WindowInteractionState InteractionState{ get; };
        Windows.UI.Xaml.Automation.WindowVisualState VisualState{ get; };
        void Close();
        void SetVisualState(Windows.UI.Xaml.Automation.WindowVisualState state);
        Boolean WaitForInputIdle(Int32 milliseconds);
    };


}
namespace Windows.UI.Xaml.Data
{
    [uuid(30da92c0-23e8-42a0-ae7c-734a0e5d2782)]
    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface ICustomProperty
    {
        Windows.UI.Xaml.Interop.TypeName Type{ get; };
        String Name{ get; };
        Object GetValue(Object target);
        void SetValue(Object target, Object value);
        Object GetIndexedValue(Object target, Object index);
        void SetIndexedValue(Object target, Object value, Object index);
        Boolean CanWrite{ get; };
        Boolean CanRead{ get; };
    };

    [webhosthidden]
    [uuid(7c925755-3e48-42b4-8677-76372267033f)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface ICustomPropertyProvider
    {
        Windows.UI.Xaml.Data.ICustomProperty GetCustomProperty(String name);
        Windows.UI.Xaml.Data.ICustomProperty GetIndexedProperty(String name, Windows.UI.Xaml.Interop.TypeName type);
        String GetStringRepresentation();
        Windows.UI.Xaml.Interop.TypeName Type{ get; };
    };

    [webhosthidden]
    [uuid(cf75d69c-f2f4-486b-b302-bb4c09baebfa)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface INotifyPropertyChanged
    {
        event Windows.UI.Xaml.Data.PropertyChangedEventHandler PropertyChanged;
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(7f5ee992-7694-4e6c-a51b-e34bf43de743)]
    [webhosthidden]
    interface ISupportIncrementalLoading
    {
        Windows.Foundation.IAsyncOperation <Windows.UI.Xaml.Data.LoadMoreItemsResult>  LoadMoreItemsAsync(UInt32 count);
        Boolean HasMoreItems{ get; };
    };

    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [uuid(e6f2fef0-0712-487f-b313-f300b8d79aa1)]
    interface IValueConverter
    {
        Object Convert(Object value, Windows.UI.Xaml.Interop.TypeName targetType, Object parameter, String language);
        Object ConvertBack(Object value, Windows.UI.Xaml.Interop.TypeName targetType, Object parameter, String language);
    };



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.Data.IBindingExpressionBaseFactory", ea7116a7-c2d9-4375-b471-66b9c48c7930)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Data.IBindingExpressionBase", fded3154-e954-4f67-8fb6-6ed79b3a1cb3)]
    [threading(both)]
    unsealed runtimeclass BindingExpressionBase
    {
    }



    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Xaml.Data.IBindingOperationsStatics", e155ef73-95a0-4aab-8c7d-2a47da073c79)]
    [default_interface]
    [interface_name("Windows.UI.Xaml.Data.IBindingOperations", 6fffd738-9839-419c-a17a-4b3604e1524e)]
    [threading(both)]
    runtimeclass BindingOperations
    {
        static void SetBinding(Windows.UI.Xaml.DependencyObject target, Windows.UI.Xaml.DependencyProperty dp, BindingBase binding);
    }








    [webhosthidden]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [constructor_name("Windows.UI.Xaml.Data.IBindingFactory", ff42bb08-c39e-4f7e-8434-a1569083883c)]
    [interface_name("Windows.UI.Xaml.Data.IBinding", 3f7a0c6b-d00f-4730-8c1d-48e16c46f9ca)]
    [threading(both)]
    unsealed runtimeclass Binding
        : Windows.UI.Xaml.Data.BindingBase
    {
        [method_name( "CreateInstance" )] Binding();
        Windows.UI.Xaml.PropertyPath Path{ get; };
        Windows.UI.Xaml.PropertyPath Path{ set; };
        Windows.UI.Xaml.Data.BindingMode Mode{ get; };
        Windows.UI.Xaml.Data.BindingMode Mode{ set; };
        Object Source{ get; };
        Object Source{ set; };
        Windows.UI.Xaml.Data.RelativeSource RelativeSource{ get; };
        Windows.UI.Xaml.Data.RelativeSource RelativeSource{ set; };
        String ElementName{ get; };
        String ElementName{ set; };
        Windows.UI.Xaml.Data.IValueConverter Converter{ get; };
        Windows.UI.Xaml.Data.IValueConverter Converter{ set; };
        Object ConverterParameter{ get; };
        Object ConverterParameter{ set; };
        String ConverterLanguage{ get; };
        String ConverterLanguage{ set; };

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [interface_name("Windows.UI.Xaml.Data.IBinding2", 34f96fcb-0406-48b3-9e82-f333ec4c6910)]
        {
            Object FallbackValue{ get; };
            Object FallbackValue{ set; };
            Object TargetNullValue{ get; };
            Object TargetNullValue{ set; };
            Windows.UI.Xaml.Data.UpdateSourceTrigger UpdateSourceTrigger{ get; };
            Windows.UI.Xaml.Data.UpdateSourceTrigger UpdateSourceTrigger{ set; };
        }
    }




    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [webhosthidden]
    [constructor_name("Windows.UI.Xaml.Data.IRelativeSourceFactory", ef8392cd-446e-4f93-aacb-9b1255577460)]
    [interface_name("Windows.UI.Xaml.Data.IRelativeSource", 2397ce84-2822-483a-b499-d0f031e06c6b)]
    [threading(both)]
    unsealed runtimeclass RelativeSource
        : Windows.UI.Xaml.DependencyObject
    {
        [method_name( "CreateInstance" )] RelativeSource();
        Windows.UI.Xaml.Data.RelativeSourceMode Mode{ get; };
        Windows.UI.Xaml.Data.RelativeSourceMode Mode{ set; };
    }






}
