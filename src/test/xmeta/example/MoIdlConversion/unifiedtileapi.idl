


















namespace WindowsInternal.Shell.UnifiedTile
{
    [contractversion(1)]
    [internal]
    apicontract InternalContract{};

    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [flags]
    enum TileFeatures
    {
        None,
        CoreIdentity,
        MinimalVisualProperties,
        LargeFormatVisualProperties = 4,
        EnterpriseDataProtectionProperties = 8,
        AppUsageProperties = 16,
        AppLifeCycleProperties = 32,
        MixedRealityProperties = 64,
        Verbs = 128,
        CustomTransformerProperties = 256,
    };

    [flags]
    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    enum TileSources
    {
        None,
        TileStore,
        Win32,
        CoinOffers = 4,
        Suggestions = 8,
        RoamedPlaceholders = 16,
        CuratedTileCollections = 32,
    };

    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [flags]
    enum PackagedTileEnumerationFilters
    {
        ExcludeAll,
        VisibleInAppList,
        IncludeAll = 15,
    };

    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [flags]
    enum ActivationOptions
    {
        None,
        RunAsAdmin,
        RunAsUser,
        NewWindowRequested = 4,
        ChaseTileNotifications = 8,
    };

    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    enum CollectionProvider
    {
        AllTilesCollection,
        AppsListCollection,
        CuratedTileCollection,
        FlatAppsListCollection,
    };


    [marshaling_behavior(agile)]
    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.ITileChangedEventArgs", 19e8d0bd-321f-4e82-a893-fb235d3a1742)]
    runtimeclass TileChangedEventArgs
    {
        WindowsInternal.Shell.UnifiedTile.TileFeatures Features{ get; };
        Guid SourceTransformerId{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.IVisualTileInfo", 3e614ac9-f1a4-4e12-b0fc-927c0621d589)]
    runtimeclass VisualTileInfo
    {
        String DisplayName{ get; };
        String SortName{ get; };
        WindowsInternal.Shell.UnifiedTile.TileImageResource SmallLogo{ get; };
        Windows.UI.Color BackgroundColor{ get; };
        Windows.UI.Color ForegroundColor{ get; };
        UInt64 ChangeId{ get; };
    }

    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.ILargeFormatVisualTileInfo", 0e4a0e3e-9b5a-46b0-9b3e-2a21a78dbc52)]
    runtimeclass LargeFormatVisualTileInfo
    {
        String ShortDisplayName{ get; };
        WindowsInternal.Shell.UnifiedTile.TileImageResource LogoPath1x1{ get; };
        WindowsInternal.Shell.UnifiedTile.TileImageResource LogoPath2x2{ get; };
        Boolean ShowNameOn2x2{ get; };
        WindowsInternal.Shell.UnifiedTile.TileImageResource LogoPath4x2{ get; };
        Boolean ShowNameOn4x2{ get; };
        WindowsInternal.Shell.UnifiedTile.TileImageResource LogoPath4x4{ get; };
        Boolean ShowNameOn4x4{ get; };
        WindowsInternal.Shell.UnifiedTile.TileImageResource TileBrandingLogo{ get; };
    }

    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.IEnterpriseDataProtectionTileInfo", 408c5bff-80e7-4291-9a6d-0bec09742680)]
    runtimeclass EnterpriseDataProtectionTileInfo
    {
        Boolean IsEnterpriseDataProtected{ get; };
        Boolean IsEnterpriseOnlyApp{ get; };
    }

    [marshaling_behavior(agile)]
    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.IAppUsageInfo", 4b33cbc6-e205-470f-8ff9-c3eea682b59b)]
    runtimeclass AppUsageInfo
    {
        Double Relevance{ get; };
        UInt32 LaunchCount{ get; };
        Windows.Foundation.DateTime LastLaunched{ get; };
    }

    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.IAppLifecycleInfo", 950a82df-d5b6-4b9f-aa07-ae91857ee164)]
    runtimeclass AppLifecycleInfo
    {
        WindowsInternal.Shell.UnifiedTile.AppState AppState{ get; };
        Double InstallProgress{ get; };
        Windows.Foundation.DateTime InstallTime{ get; };
    }

    [marshaling_behavior(agile)]
    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.IWin32ShortcutInfo", dd759756-22d4-478a-af85-059ddbcf46a6)]
    runtimeclass Win32ShortcutInfo
    {
        Boolean IsTargetFolder{ get; };
        String TargetPath{ get; };
        String ShortcutArguments{ get; };
        Boolean IsUserPinnedShortcut{ get; };
        Boolean IsManifested{ get; };
        Boolean PreventPinning{ get; };
    }

    [marshaling_behavior(agile)]
    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.IPackagedAppTileInfo", 3d81222f-e900-4672-875e-3fc4d1c12a07)]
    runtimeclass PackagedAppTileInfo
    {
        String PackageFamilyName{ get; };
        String PackageFullName{ get; };
        Boolean IsSecondaryTile{ get; };
        String SecondaryTileArguments{ get; };
        WindowsInternal.Shell.UnifiedTile.PackagedAppTileCapabilities Capabilities{ get; };
    }

    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.ISuggestionTileInfo", 4ceadb76-6c69-4e4c-8e22-abec063b0d20)]
    runtimeclass SuggestionTileInfo
    {
        String Price{ get; };
        String Description{ get; };
        Double Rating{ get; };
        UInt32 Settings{ get; };
        void ReportImpression();
        void ReportNegativeFeedback();
    }

    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.IMixedRealityTileInfo", 023d6d58-140f-4a7d-8609-d2d73df72001)]
    runtimeclass MixedRealityTileInfo
    {
        WindowsInternal.Shell.UnifiedTile.TileImageResource HoloContentUri{ get; };
        Windows.Foundation.IReference <Windows.Perception.Spatial.SpatialBoundingBox>  HoloBoundingBox{ get; };
        Windows.Foundation.IReference <Windows.UI.StartScreen.TileMixedRealityModelActivationBehavior>  HoloActivationBehavior{ get; };
    }

    [marshaling_behavior(agile)]
    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.ITileActivationContext", be62a51c-7934-49a4-bd9d-ff897b6eb596)]
    [threading(both)]
    runtimeclass TileActivationContext
    {
        TileActivationContext();
        WindowsInternal.Shell.UnifiedTile.ActivationOptions Options{ set; };
        WindowsInternal.Shell.UnifiedTile.ActivationOptions Options{ get; };
        void SetCallerWindow(Windows.UI.Core.ICoreWindow window);
        UInt32 CallerWindowId{ get; };
        UInt32 CallerWindowId{ set; };
        Windows.System.User User{ get; };
        Windows.System.User User{ set; };
        Windows.Foundation.Collections.IVectorView <String>  TileNotificationArguments{ set; };
        Windows.Foundation.Collections.IVectorView <String>  TileNotificationArguments{ get; };
        Windows.Foundation.Collections.IPropertySet ExtendedContext{ set; };
        Windows.Foundation.Collections.IPropertySet ExtendedContext{ get; };
    }

    [marshaling_behavior(agile)]
    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.IUnifiedTile", 65b4e03e-a32e-40cf-8bab-b2d9c5287307)]
    runtimeclass UnifiedTile
    {
        WindowsInternal.Shell.UnifiedTile.IUnifiedTileIdentifier Id{ get; };
        WindowsInternal.Shell.UnifiedTile.VisualTileInfo VisualTileInfo{ get; };
        WindowsInternal.Shell.UnifiedTile.LargeFormatVisualTileInfo LargeFormatVisualTileInfo{ get; };
        WindowsInternal.Shell.UnifiedTile.EnterpriseDataProtectionTileInfo EnterpriseDataProtectionTileInfo{ get; };
        WindowsInternal.Shell.UnifiedTile.AppUsageInfo AppUsageInfo{ get; };
        WindowsInternal.Shell.UnifiedTile.AppLifecycleInfo AppLifecycleInfo{ get; };
        WindowsInternal.Shell.UnifiedTile.Win32ShortcutInfo Win32ShortcutInfo{ get; };
        WindowsInternal.Shell.UnifiedTile.PackagedAppTileInfo PackagedAppTileInfo{ get; };
        WindowsInternal.Shell.UnifiedTile.SuggestionTileInfo SuggestionTileInfo{ get; };
        WindowsInternal.Shell.UnifiedTile.MixedRealityTileInfo MixedRealityTileInfo{ get; };
        [method_name("ActivateAsync")] Windows.Foundation.IAsyncAction ActivateAsync();
        [method_name("ActivateWithContextAsync")] Windows.Foundation.IAsyncAction ActivateAsync(TileActivationContext context);
        WindowsInternal.Shell.UnifiedTile.VerbSource Verbs{ get; };
        event Windows.Foundation.TypedEventHandler <WindowsInternal.Shell.UnifiedTile.UnifiedTile, WindowsInternal.Shell.UnifiedTile.TileChangedEventArgs>  TileChanged;
    }


    [marshaling_behavior(agile)]
    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.ITileImageResource", 68bf8e7a-1094-416a-b411-c76cbb49cb0d)]
    runtimeclass TileImageResource
    {
        UInt64 ChangeId{ get; };
        String UnresolvedPath{ get; };
        Windows.Foundation.IAsyncOperation <Windows.Storage.Streams.IRandomAccessStream>  LoadAsync(Double scaleFactor, Windows.Foundation.Size targetSize);
        Windows.Foundation.IAsyncOperation <WindowsInternal.Shell.UnifiedTile.TileImageResourceCandidate>  LoadWithOptionsAsync(TileImageResourceOptions options);
        Windows.Foundation.IAsyncOperation <WindowsInternal.Shell.UnifiedTile.TileImageResourceCandidate>  ResolveWithOptionsAsync(TileImageResourceOptions options);
    }




    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    enum AppState
    {
        Invalid,
        Normal,
        Pending,
        Installing,
        Paused,
        Uninstall,
        AutomaticUpdate,
        ManualUpdate,
        LicenseUpdating,
        Preview,
        New,
        Error_NoDownloadConnectivity,
        Error_NoActivationConnectivity,
        Error_MobileBroadband,
        Error_LowDiskSpace,
        Error_Ejected,
        Error_Moving,
        Error_PolicyDisabled,
        Error_BackingUp,
        Error_MDILBinding,
        Error_NotAvailable,
        Error_Default,
        Error_LicenseExpired,
        Error_Disabled,
        Error_Block_Start = 11,
        Error_Block_End = 23,
    };




    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [flags]
    enum PackagedAppTileCapabilities
    {
        None,
        VisibleInAppList,
        VisibleInSettings,
        SupportsLockScreen = 4,
        RestrictToInternalScreen = 8,
    };




    [marshaling_behavior(agile)]
    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.ITileImageResourceOptions", 82eb9f2a-c4bc-40c6-ba6b-ab7cb223225f)]
    [threading(both)]
    runtimeclass TileImageResourceOptions
    {
        TileImageResourceOptions();
        WindowsInternal.Shell.UnifiedTile.TileImageResourceContrast Contrast{ get; };
        WindowsInternal.Shell.UnifiedTile.TileImageResourceContrast Contrast{ set; };
        WindowsInternal.Shell.UnifiedTile.TileImageResourceTheme Theme{ get; };
        WindowsInternal.Shell.UnifiedTile.TileImageResourceTheme Theme{ set; };
        UInt32 ScaleFactor{ get; };
        UInt32 ScaleFactor{ set; };
        Windows.Foundation.Size TargetSize{ get; };
        Windows.Foundation.Size TargetSize{ set; };
        WindowsInternal.Shell.UnifiedTile.TileImageResourceAlternateForm SmallLogoAlternateForm{ get; };
        WindowsInternal.Shell.UnifiedTile.TileImageResourceAlternateForm SmallLogoAlternateForm{ set; };
        Windows.Foundation.Size TargetSizeAlternateForm{ get; };
        Windows.Foundation.Size TargetSizeAlternateForm{ set; };
    }

    [marshaling_behavior(agile)]
    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.ITileImageResourceCandidate", 5fd6631d-35f8-43f8-a9c9-b741dde2e664)]
    runtimeclass TileImageResourceCandidate
    {
        WindowsInternal.Shell.UnifiedTile.TileImageResourceContrast Contrast{ get; };
        WindowsInternal.Shell.UnifiedTile.TileImageResourceTheme Theme{ get; };
        WindowsInternal.Shell.UnifiedTile.TileImageResourceAlternateForm AlternateForm{ get; };
        Windows.Storage.Streams.IRandomAccessStream LoadedImage{ get; };
        String ResolvedPath{ get; };
    }

    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    enum TileImageResourceContrast
    {
        Auto,
        AutoStandardSmallLogo,
        Standard,
        High,
        HighContrastBlack,
        HighContrastWhite,
    };

    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    enum TileImageResourceTheme
    {
        None,
        Dark,
        Light,
    };

    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    enum TileImageResourceAlternateForm
    {
        None,
        Unplated,
        LightUnplated,
    };



    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [flags]
    enum MRTHelperResolvePathOptions
    {
        None,
        OpenFileStream,
        UseTargetSize,
    };



    [marshaling_behavior(agile)]
    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [static_name("WindowsInternal.Shell.UnifiedTile.IMRTHelperStatics", 3ec75255-65bd-4a81-bc5f-9fee938a4b28)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.IMRTHelper", 2403b568-ccba-4251-9ea4-242bf56ad8b8)]
    [threading(both)]
    runtimeclass MRTHelper
    {
        static WindowsInternal.Shell.UnifiedTile.MRTHelper CreateForPackageFullName(Windows.System.User user, String packageFullName);
        static WindowsInternal.Shell.UnifiedTile.MRTHelper CreateForPriFolderPath(Windows.System.User user, String priFolderPath);
        String ResolveString(String unresolved);
        Windows.Foundation.IAsyncOperation <String>  ResolveStringAsync(String unresolved);
        WindowsInternal.Shell.UnifiedTile.TileImageResourceCandidate ResolvePath(String unresolved, MRTHelperResolvePathOptions resolvePathOptions, TileImageResourceOptions imageOptions);
        Windows.Foundation.IAsyncOperation <WindowsInternal.Shell.UnifiedTile.TileImageResourceCandidate>  ResolvePathAsync(String unresolved, MRTHelperResolvePathOptions resolvePathOptions, TileImageResourceOptions imageOptions);
    }


    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("WindowsInternal.Shell.UnifiedTile.ICuratedCollectionBatch", 9d0c9455-a168-49cb-bcc0-c239cc78d638)]
    runtimeclass CuratedCollectionBatch
        : Windows.Foundation.IClosable
    {
    }

    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [flags]
    enum CollectionOptions
    {
        None,
        UseCommitTimer,
    };


    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [uuid(abaabd17-2d4e-43f0-b43c-60e699a32341)]
    interface IUnifiedTileCollection requires WindowsInternal.Shell.UnifiedTile.ITileCollectionContainer
    {
        String CollectionId{ get; };
        Windows.Foundation.Collections.IVectorView <WindowsInternal.Shell.UnifiedTile.UnifiedTile>  GetAllTilesRecursive();
        WindowsInternal.Shell.UnifiedTile.CuratedTileCollections.ICuratedTileCollection CuratedCollectionInfo{ get; };
    };

    [uuid(6fe03efc-a8af-4faf-9c23-bc0cb5bf29d3)]
    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    interface ITileCollectionContainer
    {
        Guid Id{ get; };
        Windows.Foundation.Collections.IVectorView <WindowsInternal.Shell.UnifiedTile.TileCollectionContainer>  GetContainers();
        Windows.Foundation.Collections.IVectorView <WindowsInternal.Shell.UnifiedTile.CollectionTile>  GetTiles();
        String DisplayName{ get; };
        String SortName{ get; };
        WindowsInternal.Shell.UnifiedTile.TileCollectionContainer ParentContainer{ get; };
        WindowsInternal.Shell.UnifiedTile.CuratedTileCollections.ICuratedTileGroup CuratedGroupInfo{ get; };
        WindowsInternal.Shell.UnifiedTile.CuratedCollectionBatch CreateCuratedCollectionBatch();
        event Windows.Foundation.TypedEventHandler <WindowsInternal.Shell.UnifiedTile.TileCollectionContainer, WindowsInternal.Shell.UnifiedTile.ContentsChangedEventArgs>  ContentsChanged;
        event Windows.Foundation.TypedEventHandler <WindowsInternal.Shell.UnifiedTile.TileCollectionContainer, Object>  PropertyChanged;
    };

    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [marshaling_behavior(agile)]
    runtimeclass TileCollectionContainer
        : [default]WindowsInternal.Shell.UnifiedTile.ITileCollectionContainer
    {
    }

    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.ICollectionTile", e21a4ddc-1944-40dc-9b8f-6d35d4b7eeb9)]
    runtimeclass CollectionTile
    {
        Guid Id{ get; };
        WindowsInternal.Shell.UnifiedTile.TileCollectionContainer ParentContainer{ get; };
        WindowsInternal.Shell.UnifiedTile.UnifiedTile Tile{ get; };
        WindowsInternal.Shell.UnifiedTile.CuratedTileCollections.ICuratedTile CuratedTileInfo{ get; };
        WindowsInternal.Shell.UnifiedTile.VerbSource Verbs{ get; };
        WindowsInternal.Shell.UnifiedTile.CuratedCollectionBatch CreateCuratedCollectionBatch();
        event Windows.Foundation.TypedEventHandler <WindowsInternal.Shell.UnifiedTile.CollectionTile, Object>  PropertyChanged;
    }

    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.IContentsChangedEventArgs", 72b5c6bf-3100-402d-9818-2b792f772fc6)]
    runtimeclass ContentsChangedEventArgs
    {
        Windows.Foundation.Collections.IVectorView <WindowsInternal.Shell.UnifiedTile.TileCollectionContainer>  AddedContainers{ get; };
        Windows.Foundation.Collections.IVectorView <WindowsInternal.Shell.UnifiedTile.TileCollectionContainer>  RemovedContainers{ get; };
        Windows.Foundation.Collections.IVectorView <WindowsInternal.Shell.UnifiedTile.CollectionTile>  AddedTiles{ get; };
        Windows.Foundation.Collections.IVectorView <WindowsInternal.Shell.UnifiedTile.CollectionTile>  RemovedTiles{ get; };
    }


    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("WindowsInternal.Shell.UnifiedTile.IUnifiedTileManagerStatics", 3747c20e-e7a2-4eb1-afec-7d4383bb2cb2)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.IUnifiedTileManager", 1048dc30-f4f7-4ff4-970e-5058ca17cc26)]
    [threading(both)]
    runtimeclass UnifiedTileManager
    {
        static Windows.Foundation.IAsyncOperation <WindowsInternal.Shell.UnifiedTile.UnifiedTileManager>  CreateAsync(TileFeatures features, TileSources sources);
        static Windows.Foundation.IAsyncOperation <WindowsInternal.Shell.UnifiedTile.UnifiedTileManager>  CreateWithOptionsAsync(TileFeatures features, TileSources sources, UnifiedTileManagerOptions options);
        [return_name("operation")] static Windows.Foundation.IAsyncOperation <WindowsInternal.Shell.UnifiedTile.UnifiedTileManager>  CreateWithOptionsAndStatusAsync(TileFeatures features, TileSources sources, UnifiedTileManagerOptions options, out UnifiedTileManagerCreationStatus status);
        Object GetTransformer(Guid transformerId);
        WindowsInternal.Shell.UnifiedTile.IUnifiedTileCollection GetCollection(CollectionProvider provider, String collectionId);
        WindowsInternal.Shell.UnifiedTile.IUnifiedTileCollection GetCollectionWithOptions(CollectionProvider provider, String collectionId, CollectionOptions collectionOptions);
        WindowsInternal.Shell.UnifiedTile.UnifiedTile FindTile(IUnifiedTileIdentifier identifier);
        Windows.Foundation.IAsyncAction WaitForDataStoreReconciliationCompleteAsync();
        Windows.Foundation.IAsyncAction WaitForSecondaryDataReconciliationCompleteAsync();
    }

    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.IUnifiedTileManagerOptions", a1b4cf69-bd07-4669-9639-e9234c455794)]
    [threading(both)]
    runtimeclass UnifiedTileManagerOptions
    {
        UnifiedTileManagerOptions();
        void AddTransformer(Guid transformerId, Object transformer);
        String Language{ get; };
        String Language{ set; };
        UInt32 LocaleId{ get; };
        UInt32 LocaleId{ set; };
        Windows.System.User User{ get; };
        Windows.System.User User{ set; };
        Boolean IsPostSyncProcessingEnabled{ get; };
        Boolean IsPostSyncProcessingEnabled{ set; };
        String CacheFilePath{ get; };
        String CacheFilePath{ set; };
        Boolean IsCacheFileReadOnly{ get; };
        Boolean IsCacheFileReadOnly{ set; };
        WindowsInternal.Shell.UnifiedTile.PackagedTileEnumerationFilters PackagedPrimaryTileFilters{ get; };
        WindowsInternal.Shell.UnifiedTile.PackagedTileEnumerationFilters PackagedPrimaryTileFilters{ set; };
        WindowsInternal.Shell.UnifiedTile.PackagedTileEnumerationFilters PackagedSecondaryTileFilters{ get; };
        WindowsInternal.Shell.UnifiedTile.PackagedTileEnumerationFilters PackagedSecondaryTileFilters{ set; };
    }

    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("WindowsInternal.Shell.UnifiedTile.IUnifiedTileManagerCreationStatus", 1ec9f550-f168-c264-3471-cbe49e4a607e)]
    runtimeclass UnifiedTileManagerCreationStatus
    {
        UInt32 CreationThreadId{ get; };
    }







    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("WindowsInternal.Shell.UnifiedTile.IUnifiedTileIdentifierExtractorStatics", b7d27b50-e198-4582-9253-4027e9c78815)]
    [threading(both)]
    runtimeclass UnifiedTileIdentifierExtractor
    {
        static WindowsInternal.Shell.UnifiedTile.IUnifiedTileIdentifier ExtractFromTileStoreTileUniqueId(Guid tileUniqueId);
        static WindowsInternal.Shell.UnifiedTile.IUnifiedTileIdentifier ExtractFromStorageItem(Windows.Storage.IStorageItem storageItem);
    }

    [contract(WindowsInternal.Shell.UnifiedTile.InternalContract, 1)]
    [uuid(423ee42a-f6ec-4167-ab52-978b42f0cdba)]
    interface ITileActivator
    {
        void ActivateTile(UnifiedTile tile, TileActivationContext context);
    };

}
