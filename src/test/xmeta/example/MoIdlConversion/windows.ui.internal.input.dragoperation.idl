












namespace Windows.UI.Internal.Input
{
    [contract(Windows.UI.Internal.Input.ISMInternalContract, 1)]
    enum DragDeviceType
    {
        Unknown,
        Mouse,
        Touch,
        Pen,
    };


    [contract(Windows.UI.Internal.Input.ISMInternalContract, 1)]
    [webhosthidden]
    [marshaling_behavior(agile)]
    [interface_name("Windows.UI.Internal.Input.IDragOperationInputEventArgs", eaa44989-1560-464d-aec3-d047fca7d2ea)]
    runtimeclass DragOperationInputEventArgs
    {
        UInt64 TargetId{ get; };
        Windows.Foundation.Point Position{ get; };
        Windows.Foundation.Point PositionRelativeToSource{ get; };
        Windows.Foundation.Point PositionRelativeToTarget{ get; };
        Windows.System.VirtualKeyModifiers VirtualKeyModifier{ get; };
    }


    [webhosthidden]
    [contract(Windows.UI.Internal.Input.ISMInternalContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.UI.Internal.Input.IInputDragManagerStatics", 87d694b7-92d7-5234-a28e-5f2345c84f27)]
    [interface_name("Windows.UI.Internal.Input.IInputDragManager", df97f0db-618e-49d4-8b16-f273c313f9c0)]
    [threading(both)]
    runtimeclass InputDragManager
        : Windows.UI.Internal.Input.InputObjectPartner
    {
        static Boolean IsSupported{ get; };
        static Windows.UI.Internal.Input.InputDragManager GetForInputSite(InputSite inputSite);
        Guid SourceType{ get; };
        Guid SourceType{ set; };
        Windows.Foundation.IAsyncOperation <Boolean>  TryStartDragAsync(UInt32 pointerId, UInt64 sourceId);
        event Windows.Foundation.TypedEventHandler <Windows.UI.Internal.Input.InputDragManager, Windows.UI.Internal.Input.InputDragOperation>  DragCreated;
    }

    [marshaling_behavior(agile)]
    [webhosthidden]
    [contract(Windows.UI.Internal.Input.ISMInternalContract, 1)]
    [interface_name("Windows.UI.Internal.Input.IInputDragOperation", 32c68728-5fdd-4017-8228-2fc0b75e572a)]
    runtimeclass InputDragOperation
    {
        UInt32 Id{ get; };
        UInt64 SourceId{ get; };
        Windows.UI.Internal.Input.DragDeviceType DeviceType{ get; };
        Windows.Foundation.Point Position{ get; };
        Windows.Foundation.Numerics.Vector2 Velocity{ get; };
        void CancelDrag();
        Windows.Foundation.IAsyncOperation <Boolean>  TryStartAnimationAsync(Windows.UI.Composition.Compositor compositor);
        event Windows.Foundation.TypedEventHandler <Windows.UI.Internal.Input.InputDragOperation, Windows.UI.Internal.Input.DragOperationInputEventArgs>  DragStarted;
        event Windows.Foundation.TypedEventHandler <Windows.UI.Internal.Input.InputDragOperation, Windows.UI.Internal.Input.DragOperationInputEventArgs>  DragInProgress;
        event Windows.Foundation.TypedEventHandler <Windows.UI.Internal.Input.InputDragOperation, Windows.UI.Internal.Input.DragOperationInputEventArgs>  DropTargetChanged;
        event Windows.Foundation.TypedEventHandler <Windows.UI.Internal.Input.InputDragOperation, Windows.UI.Internal.Input.DragOperationInputEventArgs>  DragEnded;
    }



}
