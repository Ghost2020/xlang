












namespace Windows.Internal.PlatformExtensions
{
    [contract(Windows.Internal.PlatformExtensions.InternalContract, 1)]
    [uuid(e889ba92-1857-489e-b60e-a60ccf66e5da)]
    interface IShellActivationResult
    {
        HRESULT Result{ get; };
        UInt32 ActivatedProcessPid{ get; };
    };

    [contract(Windows.Internal.PlatformExtensions.InternalContract, 1)]
    [uuid(bc76eb9e-2b42-4dc5-b310-6104a5a61620)]
    interface IShellActivationCallback
    {
        Windows.Internal.PlatformExtensions.IShellActivationResult Invoke(String targetAppAumid, String launchArgs, Windows.Foundation.Collections.IPropertySet activationContext, Windows.Internal.ApplicationModel.WindowManagement.WindowId callerWindowId, UInt64 userContextToken);
    };

    [uuid(30b590d9-f894-4572-a394-99378a14d7d8)]
    [contract(Windows.Internal.PlatformExtensions.InternalContract, 1)]
    interface IShellActivationManager
    {
        Windows.Foundation.IAsyncOperation <Windows.Internal.PlatformExtensions.IShellActivationResult>  TryLaunchRequestAsync(String targetAppAumid, String launchArgs, Windows.Foundation.Collections.IPropertySet activationContext, String requestingAumid, Windows.Internal.ApplicationModel.WindowManagement.WindowId callerWindowId, UInt64 userContextToken);
        Windows.Foundation.IAsyncOperation <Windows.Internal.PlatformExtensions.IShellActivationResult>  TryLaunchRequestWithActivationCallbackAsync(String targetAppAumid, String launchArgs, Windows.Foundation.Collections.IPropertySet activationContext, String requestingAumid, Windows.Internal.ApplicationModel.WindowManagement.WindowId callerWindowId, UInt64 userContextToken, IShellActivationCallback activationCallback);
        Windows.Foundation.IAsyncOperation <Int32>  TryLaunchRequestWithPendingLaunchAsync(String requestingAumid, Windows.Foundation.Collections.IPropertySet context, Windows.System.Private.IPendingLaunch pendingLaunch);
        void TryLaunchRequest(String targetAppAumid, String launchArgs, Windows.Storage.Streams.IBuffer activationContextBuffer, String requestingAumid, Windows.Internal.ApplicationModel.WindowManagement.WindowId callerWindowId, UInt64 userContextToken, out HRESULT launchResult, out UInt32 activatedProcessPid);
    };

}
