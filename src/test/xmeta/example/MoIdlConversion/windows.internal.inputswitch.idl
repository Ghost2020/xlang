







namespace Windows.Internal.InputSwitch
{
    [contractversion(1)]
    [internal]
    apicontract InternalContract{};

    [contract(Windows.Internal.InputSwitch.InternalContract, 1)]
    enum ClientType
    {
        Desktop,
        TouchKeyboard,
        LogonUI,
        UAC,
        SettingsPane,
        OOBE,
    };


    [contract(Windows.Internal.InputSwitch.InternalContract, 1)]
    [interface_name("Windows.Internal.InputSwitch.IInputSwitchProfileData", 006b7fd8-fca4-425b-a1e8-78139483acfe)]
    runtimeclass InputSwitchProfileData
    {
        UInt32 HKL{ get; };
        String ShortLanguageName{ get; };
        String LanguageName{ get; };
        String ShortLayoutName{ get; };
        String LayoutName{ get; };
        Boolean ShortLayoutNameIsDifferentiator{ get; };
        Boolean IsIme{ get; };
        Boolean DesktopIncompatibleIme{ get; };
        Boolean ImmersiveIncompatibleIme{ get; };
        String Bcp47{ get; };
        String FontFaceName{ get; };
        Int32 FontSizedAdjustment{ get; };
        Int32 FontBaselineAdjustment{ get; };
        Boolean FontVertical{ get; };
        String ImeIconFileName{ get; };
        Int32 ImeIconIndex{ get; };
    }


    [contract(Windows.Internal.InputSwitch.InternalContract, 1)]
    [interface_name("Windows.Internal.InputSwitch.IIMEModeItemData", 7f0a99fe-15b2-40de-8c31-00dadb7544dc)]
    runtimeclass IMEModeItemData
    {
        IMEModeItemData();
        String Tooltip{ get; };
        Windows.Storage.Streams.IRandomAccessStream IconStream{ get; };
        Boolean Disabled{ get; };
        Boolean Hidden{ get; };
    }

    [contract(Windows.Internal.InputSwitch.InternalContract, 1)]
    enum IMEClickType
    {
        Left,
        Right,
    };

    [contract(Windows.Internal.InputSwitch.InternalContract, 1)]
    [flags]
    enum Modality
    {
        StandardKeyboard = 1,
        SplitKeyboard,
        ClassicKeyboard = 4,
        Handwriting = 8,
        Hide = 16,
    };

    [contract(Windows.Internal.InputSwitch.InternalContract, 1)]
    enum Alignment
    {
        Default,
        RightEdge,
        LeftEdge,
    };

    [contract(Windows.Internal.InputSwitch.InternalContract, 1)]
    [flags]
    enum ContextFlags
    {
        Immersive = 1,
        HideIndicator,
        DisableIMES = 4,
        OutOfProcIME_HideModeICON = 8,
    };

    [contract(Windows.Internal.InputSwitch.InternalContract, 1)]
    enum ContextFlagOverrideMode
    {
        None,
        Desktop,
        Immersive,
    };

    [uuid(cbe9ec5a-1764-4e2c-b0f7-f9bfeb43f129)]
    [contract(Windows.Internal.InputSwitch.InternalContract, 1)]
    interface IInputSwitchCallback
    {
        void OnUpdateProfile(InputSwitchProfileData pData);
        void OnUpdateTsfFloatingFlags(UInt32 flags);
        void OnProfileCountChange(UInt32 uCount, Boolean fImePresent);
        void OnShowHide(Boolean fShown, Boolean fSelectionMade, Boolean fHideViaKeyboard);
        void OnImeModeItemUpdate(IMEModeItemData pData);
        void OnModalitySelected(Modality chosenModality);
        void OnContextFlagsChange(ContextFlags flags);
        void OnTouchKeyboardManualInvoke();
    };


    [contract(Windows.Internal.InputSwitch.InternalContract, 1)]
    [interface_name("Windows.Internal.InputSwitch.IInputSwitchControl", 4349ffa0-26ef-47ac-8110-1cab40196125)]
    runtimeclass InputSwitchControl
    {
        InputSwitchControl();
        void Init(ClientType clientType);
        void SetCallback(IInputSwitchCallback pCallback);
        void ShowInputSwitch(Windows.Foundation.Rect anchor);
        UInt32 ProfileCount{ get; };
        Boolean ImePresent{ get; };
        Windows.Internal.InputSwitch.InputSwitchProfileData CurrentProfile{ get; };
        void RegisterHotkeys();
        void ClickImeModeItem(IMEClickType clickType, Windows.Foundation.Point pt, Windows.Foundation.Rect rcArea);
        void ForceHide();
        void ShowTouchKeyboardInputSwitch(Windows.Foundation.Rect rcAnchor, Alignment alignment, Boolean fAllowSettingsLink, Modality modalityMask, Modality currentModality);
        Windows.Internal.InputSwitch.ContextFlags ContextFlags{ get; };
        void SetContextOverrideMode(ContextFlagOverrideMode overrideMode);
        Windows.Internal.InputSwitch.IMEModeItemData CurrentImeModeItem{ get; };
        void ActivateProfile(String profile);
    }

}
