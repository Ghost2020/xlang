









namespace Windows.Media.SpeechRecognition.GrammarBuilder
{
    [contractversion(1)]
    [internal]
    apicontract InternalContract{};

    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    enum SpeechGrammarBuilderSemanticsFormat
    {
        Literal,
        EcmaScript,
    };

    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    enum SpeechGraphStateType
    {
        Transitional,
        Final,
    };

    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    enum SpeechGrammarRuleInclusionMode
    {
        AllRules,
        OnlyEnabledRules,
    };

    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    enum SpeechPronunciationFormat
    {
        MicrosoftUniversalPhoneSet,
        InternationalPhoneticAlphabet,
        MicrosoftSapiPhoneSet,
    };

    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    enum SpeechPronunciationSource
    {
        SpeechRecognizerLexicon,
        SpeechRecognizerLetterToSound,
        ExternalGrammarInline,
        ExternalLexicon,
    };

    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    enum SpeechRuleItemMatchType
    {
        Required,
        Optional,
    };

    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    enum SpeechPhraseSubsetMatchMode
    {
        AllWords,
        Subsequence,
        OrderedSubset,
        SubsequenceContentRequired,
        OrderedSubsetContentRequired,
    };

    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechGrammarBuilderStatic", 8a7d628e-0337-46f6-bfc4-c97212587467)]
    [constructor_name("Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechGrammarBuilderFactory", 4918b04e-7d4c-4929-b7e3-b80931ff4d33)]
    [interface_name("Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechGrammarBuilder", 120e617b-ae2b-466e-855b-1a4bcfae06d4)]
    runtimeclass SpeechGrammarBuilder
    {
        static Windows.Foundation.IAsyncOperation <Windows.Media.SpeechRecognition.GrammarBuilder.SpeechGrammarBuilder>  CreateFromStreamAsync(Windows.Storage.Streams.IRandomAccessStream stream);
        [method_name( "CreateSpeechGrammarBuilder" )] SpeechGrammarBuilder(Windows.Globalization.Language language);
        SpeechGrammarBuilder();
        Windows.Media.SpeechRecognition.GrammarBuilder.SpeechGrammarBuilderRuleSet Rules{ get; };
        Windows.Media.SpeechRecognition.GrammarBuilder.SpeechGrammarBuilderSemanticsFormat SemanticsFormat{ get; };
        Windows.Media.SpeechRecognition.GrammarBuilder.SpeechGrammarBuilderSemanticsFormat SemanticsFormat{ set; };
        Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechRule RootRule{ get; };
        void SetRootRule(String ruleKey);
        Windows.Media.SpeechRecognition.GrammarBuilder.SpeechPronunciationFormat PronunciationFormat{ set; };
        Windows.Media.SpeechRecognition.GrammarBuilder.SpeechPronunciationFormat PronunciationFormat{ get; };
    }




    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechGrammarBuilderRuleSet", ffe5cb68-e2cb-46d2-98f0-627253b38256)]
    runtimeclass SpeechGrammarBuilderRuleSet
        : Windows.Foundation.Collections.IMapView<String, Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechRule>
        , Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<String, Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechRule> >
    {
        [method_name("AddChoiceRuleFromList")] Windows.Media.SpeechRecognition.GrammarBuilder.SpeechChoiceRule AddChoiceRule(String key, Windows.Foundation.Collections.IIterable <String>  phrases);
        [method_name("AddChoiceRule")] Windows.Media.SpeechRecognition.GrammarBuilder.SpeechChoiceRule AddChoiceRule(String key);
        [method_name("AddSequenceRuleFromArray")] Windows.Media.SpeechRecognition.GrammarBuilder.SpeechSequenceRule AddSequenceRule(String key, Windows.Foundation.Collections.IIterable <Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechRuleItem>  items);
        [method_name("AddSequenceRule")] Windows.Media.SpeechRecognition.GrammarBuilder.SpeechSequenceRule AddSequenceRule(String key);
        Windows.Media.SpeechRecognition.GrammarBuilder.SpeechGraphRule AddGraphRule(String key);
        void Clear();
        Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechRule Remove(String key);
    }

    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    [uuid(6dedcadb-66f4-454b-9d2c-cebf07116f34)]
    interface ISpeechRule
    {
        Boolean EnabledOnLoad{ get; };
        Boolean EnabledOnLoad{ set; };
        void Clear();
    };


    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    [marshaling_behavior(agile)]
    runtimeclass SpeechChoiceRule
        : [default]Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechChoiceRule
        , Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechRule
    {
    }

    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    [uuid(21cc0b0b-1300-46b7-a567-1ffd90ad0206)]
    interface ISpeechRuleItem
    {
        Windows.Media.SpeechRecognition.GrammarBuilder.SpeechRuleItemMatchType MatchType{ get; };
        Windows.Media.SpeechRecognition.GrammarBuilder.SpeechRuleItemMatchType MatchType{ set; };
        String Semantics{ get; };
        String Semantics{ set; };
    };

    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    [marshaling_behavior(agile)]
    runtimeclass SpeechSequenceRule
        : [default]Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechSequenceRule
        , Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechRule
    {
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    runtimeclass SpeechGraphRule
        : [default]Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechGraphRule
        , Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechRule
    {
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    [constructor_name("Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechRecognitionBuilderReferencedConstraintFactory", 4a3c0878-1bf8-46b4-bcd9-76af51e696ae)]
    [default_interface]
    [interface_name("Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechRecognitionBuilderReferencedConstraint", 0a36859c-6471-4d7a-8282-47e6ac2f4da1)]
    runtimeclass SpeechRecognitionBuilderReferencedConstraint
        : Windows.Media.SpeechRecognition.ISpeechRecognitionConstraint
    {
        [method_name( "Create" )] SpeechRecognitionBuilderReferencedConstraint(String name, SpeechGrammarBuilder pGrammarBuilder);
        SpeechRecognitionBuilderReferencedConstraint();
    }



    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    [uuid(29779078-0625-4d9c-8de2-8751f4df5449)]
    interface ISpeechSequenceRule requires Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechRule
    {
        void AppendItem(ISpeechRuleItem item);
    };

    [uuid(bdef8b1d-9917-4b09-98f7-31869488a2e6)]
    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    interface ISpeechChoiceRule requires Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechRule
    {
        void AddItem(ISpeechRuleItem item);
    };

    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    [uuid(c77c35c2-fefd-4547-8b22-a42712b68f73)]
    interface ISpeechGraphRule requires Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechRule
    {
        Windows.Media.SpeechRecognition.GrammarBuilder.SpeechGraphState CreateGraphState(SpeechGraphStateType stateType);
        Windows.Media.SpeechRecognition.GrammarBuilder.SpeechGraphState StartState{ set; };
        Windows.Media.SpeechRecognition.GrammarBuilder.SpeechGraphState StartState{ get; };
    };

    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    runtimeclass SpeechGraphState
        : [default]Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechGraphState
    {
        SpeechGraphState();
    }

    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    [interface_name("Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechRuleReferenceItem", 44a49de4-3a7c-4cea-ba8f-d5f1f2ef15f2)]
    runtimeclass SpeechRuleReferenceItem
        : Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechRuleItem
    {
        SpeechRuleReferenceItem();

        [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
        [constructor_name("Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechRuleReferenceItemFactory", ab9bb287-b75e-4d53-8362-fb2d701cf9bc)]
        {
            [method_name( "CreateRuleItemRuleReference" )] SpeechRuleReferenceItem(String ruleName);
            [method_name( "CreateRuleItemRuleReferenceWithMatchType" )] SpeechRuleReferenceItem(String ruleName, SpeechRuleItemMatchType matchType);
        }
        String RuleName{ get; };
        String RuleName{ set; };
    }



    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    [constructor_name("Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechPhraseItemFactory", 9894918c-91c0-43e7-a8fd-1fe88c531a54)]
    [interface_name("Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechPhraseItem", 2f9e39f2-6d75-447a-838c-4705a3131fe0)]
    runtimeclass SpeechPhraseItem
        : Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechRuleItem
    {
        [method_name( "CreateRuleItemPhrase" )] SpeechPhraseItem(String text);
        [method_name( "CreateRuleItemPhraseWithSemantics" )] SpeechPhraseItem(String text, String semantics);
        [method_name( "CreateRuleItemPhraseWithSemanticsAndMatchType" )] SpeechPhraseItem(String text, String semantics, SpeechRuleItemMatchType matchType);
        [method_name( "CreateRuleItemPhraseWithSemanticsAndMatchTypeAndPhraseMatchMode" )] SpeechPhraseItem(String text, String semantics, SpeechRuleItemMatchType itemMatchType, SpeechPhraseSubsetMatchMode phraseSubsetMatchMode);
        SpeechPhraseItem();
        String Text{ get; };
        String Text{ set; };
        String Pronunciation{ get; };
        String Pronunciation{ set; };
        String DisplayForm{ get; };
        String DisplayForm{ set; };
        Windows.Media.SpeechRecognition.GrammarBuilder.SpeechPhraseSubsetMatchMode SubsetMatchMode{ get; };
        Windows.Media.SpeechRecognition.GrammarBuilder.SpeechPhraseSubsetMatchMode SubsetMatchMode{ set; };
    }



    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    [constructor_name("Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechGarbageItemFactory", a67aa356-8e3f-412d-91b7-d3144b35bcc6)]
    [default_interface]
    [interface_name("Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechGarbageItem", 7d150d62-4b6b-44fc-b867-ca1afca54e04)]
    runtimeclass SpeechGarbageItem
        : Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechRuleItem
    {
        [method_name( "CreateRuleItemGarbageWithMatchType" )] SpeechGarbageItem(SpeechRuleItemMatchType matchType);
        SpeechGarbageItem();
    }



    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechNullItem", 7ff1a244-5719-482e-96d4-c8010fe4f9af)]
    runtimeclass SpeechNullItem
        : Windows.Media.SpeechRecognition.GrammarBuilder.ISpeechRuleItem
    {
        SpeechNullItem();
    }


    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    [uuid(2962ae4e-2145-40fe-9bf0-29a46a100500)]
    interface ISpeechGraphState
    {
        void AddTransition(ISpeechRuleItem item, Single weight, SpeechGraphState targetState);
        Windows.Media.SpeechRecognition.GrammarBuilder.SpeechGraphStateType StateType{ get; };
    };

    [uuid(366efc58-98a9-4d73-837e-237350c50605)]
    [contract(Windows.Media.SpeechRecognition.GrammarBuilder.InternalContract, 1)]
    interface ISpeechRuleInternal
    {
        void FinalizeRuleBeforeCommit();
        void FinalizeRuleAfterCommit();
    };

}
