









namespace Windows.Internal.StateRepository
{
    [contract(Windows.Internal.StateRepository.StateRepositoryContract, 1)]
    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [static_name("Windows.Internal.StateRepository.ISecondaryTileStatics", df024324-b959-468b-8ee2-88605af1aa10)]
    [interface_name("Windows.Internal.StateRepository.ISecondaryTile", 041096b8-a38a-4fd3-989a-1105de36097e)]
    [threading(both)]
    runtimeclass SecondaryTile
    {
        SecondaryTile();
        static void Add(SecondaryTile value);
        static void Update(SecondaryTile value);
        static void Delete(SecondaryTile value);
        static void DeleteById(Int64 secondaryTileID);
        static Boolean Exists(Int64 secondaryTileID);
        static Windows.Internal.StateRepository.SecondaryTile Get(Int64 secondaryTileID);
        static Windows.Internal.StateRepository.SecondaryTile TryGet(Int64 secondaryTileID);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.SecondaryTile>  Find();
        static void UpdateWorkId(Int64 secondaryTileID, Int64 workId);
        static void ClearWorkByWorkId(Int64 workId);
        static void DeleteByWorkId(Int64 workId);
        Int64 _SecondaryTileID{ get; };
        Int64 _SecondaryTileID{ set; };
        UInt64 _Revision{ get; };
        UInt64 _Revision{ set; };
        Windows.Internal.StateRepository.TileFlags Flags{ get; };
        Windows.Internal.StateRepository.TileFlags Flags{ set; };
        Boolean VisibleInAppList{ get; };
        Boolean VisibleInAppList{ set; };
        Boolean VisibleInSettings{ get; };
        Boolean VisibleInSettings{ set; };
        Boolean SupportsKidZone{ get; };
        Boolean SupportsKidZone{ set; };
        Boolean SupportsLockScreen{ get; };
        Boolean SupportsLockScreen{ set; };
        Windows.Internal.StateRepository.TileTemplate TileTemplate{ get; };
        Windows.Internal.StateRepository.TileTemplate TileTemplate{ set; };
        String TileId{ get; };
        String TileId{ set; };
        Boolean IsArgumentsNull{ get; };
        void SetArgumentsToNull();
        String Arguments{ get; };
        String Arguments{ set; };
        Boolean IsEditionIdNull{ get; };
        void SetEditionIdToNull();
        String EditionId{ get; };
        String EditionId{ set; };
        Boolean Is_DictionaryNull{ get; };
        void Set_DictionaryToNull();
        void Get_Dictionary(out UInt8[] value);
        void Set_Dictionary(UInt8[] value);
        Windows.Foundation.Collections.IPropertySet Get_DictionaryAsPropertySet();
        Windows.Internal.StateRepository.TileType TileType{ get; };
    }


}
