










namespace Windows.Networking.PushNotifications
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum PushNotificationType
    {
        Toast,
        Tile,
        Badge,
        Raw,
        TileFlyout,
    };


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Networking.PushNotifications.IPushNotificationChannel", 2b28102e-ef0b-4f39-9b8a-a3c194de7081)]
    runtimeclass PushNotificationChannel
    {
        String Uri{ get; };
        Windows.Foundation.DateTime ExpirationTime{ get; };
        void Close();
        event Windows.Foundation.TypedEventHandler <Windows.Networking.PushNotifications.PushNotificationChannel, Windows.Networking.PushNotifications.PushNotificationReceivedEventArgs>  PushNotificationReceived;
    }


    [contract(Windows.Foundation.UniversalApiContract, 3)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Networking.PushNotifications.IPushNotificationChannelManagerForUser", a4c45704-1182-42c7-8890-f563c4890dc4)]
    runtimeclass PushNotificationChannelManagerForUser
    {
        [method_name("CreatePushNotificationChannelForApplicationAsync")] Windows.Foundation.IAsyncOperation <Windows.Networking.PushNotifications.PushNotificationChannel>  CreatePushNotificationChannelForApplicationAsync();
        [method_name("CreatePushNotificationChannelForApplicationAsyncWithId")] Windows.Foundation.IAsyncOperation <Windows.Networking.PushNotifications.PushNotificationChannel>  CreatePushNotificationChannelForApplicationAsync(String applicationId);
        Windows.Foundation.IAsyncOperation <Windows.Networking.PushNotifications.PushNotificationChannel>  CreatePushNotificationChannelForSecondaryTileAsync(String tileId);
        Windows.System.User User{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [interface_name("Windows.Networking.PushNotifications.IPushNotificationChannelManagerForUser2", c38b066a-7cc1-4dac-87fd-be6e920414a4)]
        {
            [method_name("CreateRawPushNotificationChannelWithAlternateKeyForApplicationAsync")] Windows.Foundation.IAsyncOperation <Windows.Networking.PushNotifications.PushNotificationChannel>  CreateRawPushNotificationChannelWithAlternateKeyForApplicationAsync(Windows.Storage.Streams.IBuffer appServerKey, String channelId);
            [method_name("CreateRawPushNotificationChannelWithAlternateKeyForApplicationAsyncWithId")] Windows.Foundation.IAsyncOperation <Windows.Networking.PushNotifications.PushNotificationChannel>  CreateRawPushNotificationChannelWithAlternateKeyForApplicationAsync(Windows.Storage.Streams.IBuffer appServerKey, String channelId, String appId);
        }
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Networking.PushNotifications.IPushNotificationReceivedEventArgs", d1065e0c-36cd-484c-b935-0a99b753cf00)]
    runtimeclass PushNotificationReceivedEventArgs
    {
        Boolean Cancel{ set; };
        Boolean Cancel{ get; };
        Windows.Networking.PushNotifications.PushNotificationType NotificationType{ get; };
        Windows.UI.Notifications.ToastNotification ToastNotification{ get; };
        Windows.UI.Notifications.TileNotification TileNotification{ get; };
        Windows.UI.Notifications.BadgeNotification BadgeNotification{ get; };
        Windows.Networking.PushNotifications.RawNotification RawNotification{ get; };
    }


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Networking.PushNotifications.IRawNotification", 1a227281-3b79-42ac-9963-22ab00d4f0b7)]
    runtimeclass RawNotification
    {
        String Content{ get; };

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [interface_name("Windows.Networking.PushNotifications.IRawNotification2", e6d0cf19-0c6f-4cdd-9424-eec5be014d26)]
        {
            Windows.Foundation.Collections.IMapView <String, String>  Headers{ get; };
            String ChannelId{ get; };
        }
    }


    [feature(Velocity_SometimesAlwaysDisabled)]
    [contract(Windows.Foundation.UniversalApiContract, 8)]
    [marshaling_behavior(agile)]
    [default_interface]
    [interface_name("Windows.Networking.PushNotifications.IPushNotificationChannelsRevokedEventArgs", 20e1a24c-1a34-5beb-aae2-40c232c8c140)]
    runtimeclass PushNotificationChannelsRevokedEventArgs
    {
    }







    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.Networking.PushNotifications.IPushNotificationChannelManagerStatics", 8baf9b65-77a1-4588-bd19-861529a9dcf0)]
    [threading(mta)]
    runtimeclass PushNotificationChannelManager
    {

        [contract(Windows.Foundation.UniversalApiContract, 8)]
        [feature(Velocity_SometimesAlwaysDisabled)]
        [static_name("Windows.Networking.PushNotifications.IPushNotificationChannelManagerStatics4", bc540efb-7820-5a5b-9c01-b4757f774025)]
        {
            static event Windows.Foundation.EventHandler <Windows.Networking.PushNotifications.PushNotificationChannelsRevokedEventArgs>  ChannelsRevoked;
        }

        [contract(Windows.Foundation.UniversalApiContract, 4)]
        [static_name("Windows.Networking.PushNotifications.IPushNotificationChannelManagerStatics3", 4701fefe-0ede-4a3f-ae78-bfa471496925)]
        {
            static Windows.Networking.PushNotifications.PushNotificationChannelManagerForUser GetDefault();
        }

        [contract(Windows.Foundation.UniversalApiContract, 3)]
        [static_name("Windows.Networking.PushNotifications.IPushNotificationChannelManagerStatics2", b444a65d-a7e9-4b28-950e-f375a907f9df)]
        {
            static Windows.Networking.PushNotifications.PushNotificationChannelManagerForUser GetForUser(Windows.System.User user);
        }
        [method_name("CreatePushNotificationChannelForApplicationAsync")] static Windows.Foundation.IAsyncOperation <Windows.Networking.PushNotifications.PushNotificationChannel>  CreatePushNotificationChannelForApplicationAsync();
        [method_name("CreatePushNotificationChannelForApplicationAsyncWithId")] static Windows.Foundation.IAsyncOperation <Windows.Networking.PushNotifications.PushNotificationChannel>  CreatePushNotificationChannelForApplicationAsync(String applicationId);
        static Windows.Foundation.IAsyncOperation <Windows.Networking.PushNotifications.PushNotificationChannel>  CreatePushNotificationChannelForSecondaryTileAsync(String tileId);
    }


}
namespace Windows.ApplicationModel.Background
{
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [constructor_name("Windows.ApplicationModel.Background.IPushNotificationTriggerFactory", 6dd8ed1b-458e-4fc2-bc2e-d5664f77ed19)]
    [threading(mta)]
    runtimeclass PushNotificationTrigger
        : [default]Windows.ApplicationModel.Background.IBackgroundTrigger
    {
        [method_name( "Create" )] PushNotificationTrigger(String applicationId);
        PushNotificationTrigger();
    }

}
