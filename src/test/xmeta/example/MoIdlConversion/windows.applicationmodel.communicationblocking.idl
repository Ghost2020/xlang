







namespace Windows.ApplicationModel.CommunicationBlocking
{
    [contractversion(2)]
    apicontract CommunicationBlockingContract{};


}
namespace Windows.ApplicationModel.Background
{
    [marshaling_behavior(agile)]
    [contract(Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingContract, 1)]
    [default_interface]
    [interface_name("Windows.ApplicationModel.Background.ICommunicationBlockingAppSetAsActiveTrigger", fb91f28a-16a5-486d-974c-7835a8477be2)]
    [threading(both)]
    runtimeclass CommunicationBlockingAppSetAsActiveTrigger
        : Windows.ApplicationModel.Background.IBackgroundTrigger
    {
        CommunicationBlockingAppSetAsActiveTrigger();
    }




}
namespace Windows.ApplicationModel.CommunicationBlocking
{
    [marshaling_behavior(agile)]
    [contract(Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingContract, 1)]
    [static_name("Windows.ApplicationModel.CommunicationBlocking.ICommunicationBlockingAppManagerStatics", 77db58ec-14a6-4baa-942a-6a673d999bf2)]
    [threading(both)]
    runtimeclass CommunicationBlockingAppManager
    {
        static Boolean IsCurrentAppActiveBlockingApp{ get; };
        static void ShowCommunicationBlockingSettingsUI();

        [contract(Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingContract, 2)]
        [static_name("Windows.ApplicationModel.CommunicationBlocking.ICommunicationBlockingAppManagerStatics2", 14a68edd-ed88-457a-a364-a3634d6f166d)]
        {
            static Windows.Foundation.IAsyncOperation <Boolean>  RequestSetAsActiveBlockingAppAsync();
        }
    }

    [marshaling_behavior(agile)]
    [contract(Windows.ApplicationModel.CommunicationBlocking.CommunicationBlockingContract, 1)]
    [static_name("Windows.ApplicationModel.CommunicationBlocking.ICommunicationBlockingAccessManagerStatics", 1c969998-9d2a-5db7-edd5-0ce407fc2595)]
    [threading(both)]
    runtimeclass CommunicationBlockingAccessManager
    {
        static Boolean IsBlockingActive{ get; };
        static Windows.Foundation.IAsyncOperation <Boolean>  IsBlockedNumberAsync(String number);
        static Boolean ShowBlockNumbersUI(Windows.Foundation.Collections.IIterable <String>  phoneNumbers);
        static Boolean ShowUnblockNumbersUI(Windows.Foundation.Collections.IIterable <String>  phoneNumbers);
        static void ShowBlockedCallsUI();
        static void ShowBlockedMessagesUI();
    }

}
