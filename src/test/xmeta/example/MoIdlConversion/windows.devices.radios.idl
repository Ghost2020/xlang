






namespace Windows.Devices.Radios
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum RadioState
    {
        Unknown,
        On,
        Off,
        Disabled,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum RadioKind
    {
        Other,
        WiFi,
        MobileBroadband,
        Bluetooth,
        FM,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum RadioAccessStatus
    {
        Unspecified,
        Allowed,
        DeniedByUser,
        DeniedBySystem,
    };


    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.Devices.Radios.IRadioStatics", 5fb6a12e-67cb-46ae-aae9-65919f86eff4)]
    [interface_name("Windows.Devices.Radios.IRadio", 252118df-b33e-416a-875f-1cf38ae2d83e)]
    runtimeclass Radio
    {
        static Windows.Foundation.IAsyncOperation <Windows.Foundation.Collections.IVectorView <Windows.Devices.Radios.Radio> >  GetRadiosAsync();
        static String GetDeviceSelector();
        [method_name("FromIdAsync")] static Windows.Foundation.IAsyncOperation <Windows.Devices.Radios.Radio>  FromIdAsync(String deviceId);
        static Windows.Foundation.IAsyncOperation <Windows.Devices.Radios.RadioAccessStatus>  RequestAccessAsync();
        Windows.Foundation.IAsyncOperation <Windows.Devices.Radios.RadioAccessStatus>  SetStateAsync(RadioState value);
        event Windows.Foundation.TypedEventHandler <Windows.Devices.Radios.Radio, Object>  StateChanged;
        Windows.Devices.Radios.RadioState State{ get; };
        String Name{ get; };
        Windows.Devices.Radios.RadioKind Kind{ get; };
    }


}
