









namespace Windows.Internal.Security.Authentication.CloudId
{
    [contractversion(1)]
    [internal]
    apicontract InternalContract{};


    [contract(Windows.Internal.Security.Authentication.CloudId.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Internal.Security.Authentication.CloudId.IAccountProvisioningResult", 8e6a8ae1-5843-4a2f-a992-e2e084d29fd8)]
    runtimeclass AccountProvisioningResult
    {
        Windows.Internal.Security.Authentication.CloudId.AccountProvisioningStatus Status{ get; };
        HRESULT ExtendedError{ get; };
        Windows.Security.Credentials.WebAccount WebAccount{ get; };
    }

    [contract(Windows.Internal.Security.Authentication.CloudId.InternalContract, 1)]
    enum AccountProvisioningStatus
    {
        Success,
        Error,
        ServiceConnectionError,
        UserInteractionRequired,
    };


    [contract(Windows.Internal.Security.Authentication.CloudId.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Internal.Security.Authentication.CloudId.ICloudIdWamExtension", 273f7697-dee0-4f64-aa09-c6e5d16a0791)]
    [threading(both)]
    runtimeclass CloudIdWamExtension
    {
        CloudIdWamExtension();
        Windows.Foundation.IAsyncOperation <Windows.Internal.Security.Authentication.CloudId.AccountProvisioningResult>  ProvisionSsoAccountAsync(Windows.System.User user, String applicationId, String webAccountProviderAuthority, Windows.Storage.Streams.IBuffer accountProvisioningBlob);
    }


    [contract(Windows.Internal.Security.Authentication.CloudId.InternalContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Internal.Security.Authentication.CloudId.ICloudIdWamExtensionForUser", b863d728-8105-46e9-a491-a722c52612aa)]
    [threading(both)]
    runtimeclass CloudIdWamExtensionForUser
    {
        CloudIdWamExtensionForUser();
        Windows.Foundation.IAsyncOperation <Windows.Internal.Security.Authentication.CloudId.AccountProvisioningResult>  ProvisionSsoAccountAsync(String applicationId, String webAccountProviderAuthority, Windows.Storage.Streams.IBuffer accountProvisioningBlob);
    }

}
