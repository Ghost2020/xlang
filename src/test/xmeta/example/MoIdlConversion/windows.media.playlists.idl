








namespace Windows.Media.Playlists
{
    [contractversion(1)]
    apicontract PlaylistsContract{};

    [contract(Windows.Media.Playlists.PlaylistsContract, 1)]
    enum PlaylistFormat
    {
        WindowsMedia,
        Zune,
        M3u,
    };



    [dualapipartition(0x6020000)]
    [contract(Windows.Media.Playlists.PlaylistsContract, 1)]
    [static_name("Windows.Media.Playlists.IPlaylistStatics", c5c331cd-81f9-4ff3-95b9-70b6ff046b68)]
    [interface_name("Windows.Media.Playlists.IPlaylist", 803736f5-cf44-4d97-83b3-7a089e9ab663)]
    [threading(both)]
    runtimeclass Playlist
    {
        Playlist();
        static Windows.Foundation.IAsyncOperation <Windows.Media.Playlists.Playlist>  LoadAsync(Windows.Storage.IStorageFile file);
        Windows.Foundation.Collections.IVector <Windows.Storage.StorageFile>  Files{ get; };
        Windows.Foundation.IAsyncAction SaveAsync();
        [method_name("SaveAsAsync")] Windows.Foundation.IAsyncOperation <Windows.Storage.StorageFile>  SaveAsAsync(Windows.Storage.IStorageFolder saveLocation, String desiredName, Windows.Storage.NameCollisionOption option);
        [method_name("SaveAsWithFormatAsync")] Windows.Foundation.IAsyncOperation <Windows.Storage.StorageFile>  SaveAsAsync(Windows.Storage.IStorageFolder saveLocation, String desiredName, Windows.Storage.NameCollisionOption option, PlaylistFormat playlistFormat);
    }

}
