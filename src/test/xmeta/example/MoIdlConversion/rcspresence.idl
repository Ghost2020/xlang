








namespace Windows.Phone.Restricted.Cellular.RcsPresence
{
    [contractversion(1)]
    [internal]
    apicontract InternalRcsPresenceContract{};

    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    enum RcsServiceStatus
    {
        Stopped,
        Started,
        Stopping,
        Starting,
    };

    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    enum RcsServiceAvailability
    {
        Unavailable,
        Available,
    };

    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    enum RcsMediaType
    {
        None,
        AudioOnly,
        AudioVideo,
    };

    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    enum RcsPublishRequestReason
    {
        Expired,
        NetworkChange,
    };

    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    enum RcsNetworkType
    {
        Unknown,
        Lte,
        LteNoVoPS,
        Ehrpd,
        HspaPlus,
        _3g,
        _2g,
        _WLAN,
        _IWLAN,
    };

    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    enum RcsSubscribeReason
    {
        Default,
        Expired,
        ContactModified,
    };

    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    enum RcsResourceState
    {
        Unknown,
        Pending,
        Active,
        Terminated,
    };


    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Phone.Restricted.Cellular.RcsPresence.IRcsResponse", b7ebcf86-6640-4bb4-8192-feb1baa17872)]
    runtimeclass RcsResponse
    {
        UInt32 ResponseCode{ get; };
        String ResponseReason{ get; };
    }

    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    [uuid(416437de-e78b-44c9-990f-7ede1f2a0c91)]
    interface IRcsServiceDescription
    {
        String ServiceIdentifier{ get; };
        String ServiceIdentifier{ set; };
        String ServiceDescription{ get; };
        String ServiceDescription{ set; };
        String ServiceVersion{ get; };
        String ServiceVersion{ set; };
        Windows.Phone.Restricted.Cellular.RcsPresence.RcsMediaType MediaType{ get; };
        Windows.Phone.Restricted.Cellular.RcsPresence.RcsMediaType MediaType{ set; };
    };

    [marshaling_behavior(agile)]
    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    runtimeclass RcsServiceDescription
        : [default]Windows.Phone.Restricted.Cellular.RcsPresence.IRcsServiceDescription
    {
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    [interface_name("Windows.Phone.Restricted.Cellular.RcsPresence.IRcsServiceTuple", ce17a39b-2e8b-41af-b5a9-5cb072cc373c)]
    runtimeclass RcsServiceTuple
    {
        Windows.Phone.Restricted.Cellular.RcsPresence.IRcsServiceDescription ServiceDescription{ get; };
        Windows.Foundation.Uri ContactUri{ get; };
        Windows.Foundation.DateTime PublishedTime{ get; };
    }


    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Phone.Restricted.Cellular.RcsPresence.IRcsResourceInstance", 71381418-c4d2-424c-b35c-340e6306785e)]
    runtimeclass RcsResourceInstance
    {
        Windows.Foundation.Uri Uri{ get; };
        String Identifier{ get; };
        Windows.Phone.Restricted.Cellular.RcsPresence.RcsResourceState State{ get; };
        String Reason{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Phone.Restricted.Cellular.RcsPresence.RcsServiceTuple>  Capabilities{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    [interface_name("Windows.Phone.Restricted.Cellular.RcsPresence.IRcsResource", c37fa519-ab14-462d-91c9-3242d174fc72)]
    runtimeclass RcsResource
    {
        Windows.Foundation.Uri Uri{ get; };
        String Name{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Phone.Restricted.Cellular.RcsPresence.RcsResourceInstance>  Instances{ get; };
    }

    [uuid(79f2a52b-0c12-483a-a06b-5d88f2edfd4b)]
    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    interface IRcsResourceList
    {
        Windows.Foundation.Uri Uri{ get; };
        String Name{ get; };
        UInt32 Version{ get; };
        Boolean FullState{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Phone.Restricted.Cellular.RcsPresence.RcsResource>  Resources{ get; };
    };

    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    [marshaling_behavior(agile)]
    runtimeclass RcsResourceList
        : [default]Windows.Phone.Restricted.Cellular.RcsPresence.IRcsResourceList
    {
    }

    [uuid(ece4fa8c-c015-42d1-a77c-35171f4684e1)]
    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    interface IRcsAddress
    {
        Windows.Foundation.Uri Uri{ get; };
        Windows.Foundation.Uri Uri{ set; };
    };

    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    [marshaling_behavior(agile)]
    runtimeclass RcsAddress
        : [default]Windows.Phone.Restricted.Cellular.RcsPresence.IRcsAddress
    {
    }


    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Phone.Restricted.Cellular.RcsPresence.IRcsServiceStatusChangedArgs", 661ae45a-412a-460d-bdd4-dd8ea3c15583)]
    runtimeclass RcsServiceStatusChangedArgs
    {
        Windows.Phone.Restricted.Cellular.RcsPresence.RcsServiceStatus ServiceStatus{ get; };
    }


    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Phone.Restricted.Cellular.RcsPresence.IRcsServiceAvailabilityChangedArgs", 433108b4-1b3f-4033-8d0b-768d78f658a7)]
    runtimeclass RcsServiceAvailabilityChangedArgs
    {
        Windows.Phone.Restricted.Cellular.RcsPresence.RcsServiceAvailability ServiceAvailability{ get; };
    }


    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Phone.Restricted.Cellular.RcsPresence.IRcsPublishCapabilitiesRequestedArgs", 1f062f50-8973-4cb9-be29-dfa18ad1cac4)]
    runtimeclass RcsPublishCapabilitiesRequestedArgs
    {
        Windows.Phone.Restricted.Cellular.RcsPresence.RcsPublishRequestReason Reason{ get; };
        Windows.Phone.Restricted.Cellular.RcsPresence.RcsNetworkType NetworkType{ get; };
    }


    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Phone.Restricted.Cellular.RcsPresence.IRcsCapabilitiesReceivedArgs", 024fd9e5-c187-4a69-9225-5774404ea1f3)]
    runtimeclass RcsCapabilitiesReceivedArgs
    {
        Windows.Foundation.Uri ResourceUri{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.Phone.Restricted.Cellular.RcsPresence.RcsServiceTuple>  Capabilities{ get; };
    }


    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Phone.Restricted.Cellular.RcsPresence.IRcsSubscriptionReceivedArgs", 04eaf06d-42bc-46cc-a637-eeb3a8723fe4)]
    runtimeclass RcsSubscriptionReceivedArgs
    {
        Windows.Phone.Restricted.Cellular.RcsPresence.IRcsResourceList ResourceList{ get; };
    }

    [uuid(b57094fd-74da-4273-9039-f489abc6ff8d)]
    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    interface IRcsService
    {
        Windows.Foundation.IAsyncOperation <Windows.Phone.Restricted.Cellular.RcsPresence.RcsServiceStatus>  StartServiceAsync();
        Windows.Foundation.IAsyncOperation <Windows.Phone.Restricted.Cellular.RcsPresence.RcsServiceStatus>  StopServiceAsync();
        Windows.Phone.Restricted.Cellular.RcsPresence.RcsServiceStatus ServiceStatus{ get; };
        event Windows.Foundation.TypedEventHandler <Windows.Phone.Restricted.Cellular.RcsPresence.IRcsService, Windows.Phone.Restricted.Cellular.RcsPresence.RcsServiceStatusChangedArgs>  ServiceStatusChanged;
        Windows.Phone.Restricted.Cellular.RcsPresence.RcsServiceAvailability ServiceAvailability{ get; };
        event Windows.Foundation.TypedEventHandler <Windows.Phone.Restricted.Cellular.RcsPresence.IRcsService, Windows.Phone.Restricted.Cellular.RcsPresence.RcsServiceAvailabilityChangedArgs>  ServiceAvailabilityChanged;
        String ServiceVersion{ get; };
    };


    [marshaling_behavior(agile)]
    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    [interface_name("Windows.Phone.Restricted.Cellular.RcsPresence.IRcsPresenceService", 9394d478-7c0b-4493-9b99-3a1d9244981d)]
    runtimeclass RcsPresenceService
        : Windows.Phone.Restricted.Cellular.RcsPresence.IRcsService
    {
        Windows.Foundation.IAsyncOperation <Windows.Phone.Restricted.Cellular.RcsPresence.RcsResponse>  PublishCapabilitiesAsync(Windows.Foundation.Uri contactUri, Windows.Foundation.Collections.IIterable <Windows.Phone.Restricted.Cellular.RcsPresence.RcsServiceDescription>  serviceDescriptions);
        event Windows.Foundation.TypedEventHandler <Windows.Phone.Restricted.Cellular.RcsPresence.RcsPresenceService, Windows.Phone.Restricted.Cellular.RcsPresence.RcsPublishCapabilitiesRequestedArgs>  PublishCapabilitiesRequested;
        Windows.Foundation.IAsyncOperation <Windows.Phone.Restricted.Cellular.RcsPresence.RcsResponse>  RequestCapabilitiesAsync(RcsAddress address);
        event Windows.Foundation.TypedEventHandler <Windows.Phone.Restricted.Cellular.RcsPresence.RcsPresenceService, Windows.Phone.Restricted.Cellular.RcsPresence.RcsCapabilitiesReceivedArgs>  CapabilitiesReceived;
        Windows.Foundation.IAsyncOperation <Windows.Phone.Restricted.Cellular.RcsPresence.RcsResponse>  SubscribeForCapabilitiesAsync(RcsSubscribeReason reason, Windows.Foundation.Collections.IIterable <Windows.Phone.Restricted.Cellular.RcsPresence.RcsAddress>  addresses, Windows.Foundation.TimeSpan expiration);
        event Windows.Foundation.TypedEventHandler <Windows.Phone.Restricted.Cellular.RcsPresence.RcsPresenceService, Windows.Phone.Restricted.Cellular.RcsPresence.RcsSubscriptionReceivedArgs>  SubscriptionReceived;
    }



    [contract(Windows.Phone.Restricted.Cellular.RcsPresence.InternalRcsPresenceContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Phone.Restricted.Cellular.RcsPresence.IRcsPresenceSettings", dd7b70d0-8c2c-41d9-92d9-8ff63499342a)]
    runtimeclass RcsPresenceSettings
    {
        Boolean PublishEnabled{ get; };
        Boolean PublishEnabled{ set; };
        Windows.Foundation.TimeSpan PublishTimerInterval{ get; };
        Windows.Foundation.TimeSpan PublishTimerInterval{ set; };

        [interface_name("Windows.Phone.Restricted.Cellular.RcsPresence.IRcsPresenceSettings2", d38bac8a-4af0-4b59-b6be-08fd640ab9b9)]
        {
            Boolean IsCapabilityDiscoveryEnabled{ get; };
            Boolean IsCapabilityDiscoveryEnabled{ set; };
            Windows.Foundation.TimeSpan CapabilityCacheExpiration{ get; };
            Windows.Foundation.TimeSpan CapabilityCacheExpiration{ set; };
            Windows.Foundation.TimeSpan AvailabilityCacheExpiration{ get; };
            Windows.Foundation.TimeSpan AvailabilityCacheExpiration{ set; };
            Windows.Foundation.TimeSpan CapabilityPollInterval{ get; };
            Windows.Foundation.TimeSpan CapabilityPollInterval{ set; };
            UInt32 MaxNumberOfEntriesInRequest{ get; };
            UInt32 MaxNumberOfEntriesInRequest{ set; };
            Boolean IsPresenceGzipEnabled{ get; };
            Boolean IsPresenceGzipEnabled{ set; };
            Windows.Foundation.TimeSpan PresenceNotifyDuration{ get; };
            Windows.Foundation.TimeSpan PresenceNotifyDuration{ set; };
            Boolean VoLTEProvisioningStatus{ get; };
            Boolean VoLTEProvisioningStatus{ set; };
            Windows.Foundation.TimeSpan PublishErrorRecoveryTimer{ get; };
            Windows.Foundation.TimeSpan PublishErrorRecoveryTimer{ set; };
        }
    }

}
