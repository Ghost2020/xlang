






namespace Windows.UI.Popups
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum Placement
    {
        Default,
        Above,
        Below,
        Left,
        Right,
    };

    [uuid(daf77a4f-c27a-4298-9ac6-2922c45e7da6)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    delegate void UICommandInvokedHandler(IUICommand command);

    [uuid(4ff93a75-4145-47ff-ac7f-dff1c1fa5b0f)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    interface IUICommand
    {
        String Label{ get; };
        String Label{ set; };
        Windows.UI.Popups.UICommandInvokedHandler Invoked{ get; };
        Windows.UI.Popups.UICommandInvokedHandler Invoked{ set; };
        [variant]Object Id{ get; };
        [variant]Object Id{ set; };
    };


    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [muse(0x6020000)]
    [constructor_name("Windows.UI.Popups.IUICommandFactory", a21a8189-26b0-4676-ae94-54041bc125e8)]
    [threading(both)]
    runtimeclass UICommand
        : [default]Windows.UI.Popups.IUICommand
    {
        [method_name( "Create" )] UICommand(String label);
        [method_name( "CreateWithHandler" )] UICommand(String label, UICommandInvokedHandler action);
        [method_name( "CreateWithHandlerAndId" )] UICommand(String label, UICommandInvokedHandler action, [variant]Object commandId);
        UICommand();
    }

    [muse(0x6020000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [threading(both)]
    runtimeclass UICommandSeparator
        : [default]Windows.UI.Popups.IUICommand
    {
        UICommandSeparator();
    }


    [muse(0x6020000)]
    [marshaling_behavior(standard)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.UI.Popups.IPopupMenu", 4e9bc6dc-880d-47fc-a0a1-72b639e62559)]
    runtimeclass PopupMenu
    {
        PopupMenu();
        Windows.Foundation.Collections.IVector <Windows.UI.Popups.IUICommand>  Commands{ get; };
        [remote_sync]Windows.Foundation.IAsyncOperation <Windows.UI.Popups.IUICommand>  ShowAsync(Windows.Foundation.Point invocationPoint);
        [method_name("ShowAsyncWithRect")] [remote_sync]Windows.Foundation.IAsyncOperation <Windows.UI.Popups.IUICommand>  ShowForSelectionAsync(Windows.Foundation.Rect selection);
        [method_name("ShowAsyncWithRectAndPlacement")] [remote_sync]Windows.Foundation.IAsyncOperation <Windows.UI.Popups.IUICommand>  ShowForSelectionAsync(Windows.Foundation.Rect selection, Placement preferredPlacement);
    }

}
