










namespace Windows.Internal.StateRepository
{
    [marshaling_behavior(agile)]
    [dualapipartition(0xa000000)]
    [contract(Windows.Internal.StateRepository.StateRepositoryContract, 1)]
    [static_name("Windows.Internal.StateRepository.IAppInstallerStatics", 781a1020-2cba-4538-9a9a-5cbd42f5e053)]
    [interface_name("Windows.Internal.StateRepository.IAppInstaller", 15bb55a4-157e-46cc-b581-62317b28ac2a)]
    [threading(both)]
    runtimeclass AppInstaller
    {
        static Boolean Exists(Int64 appInstallerID);
        static Boolean ExistsByUri(String Uri);
        static Windows.Internal.StateRepository.AppInstaller Get(Int64 appInstallerID);
        static Windows.Internal.StateRepository.AppInstaller TryGet(Int64 appInstallerID);
        static Windows.Internal.StateRepository.AppInstaller GetByUri(String Uri);
        static Windows.Internal.StateRepository.AppInstaller TryGetByUri(String Uri);
        static Windows.Foundation.Collections.IVectorView <Windows.Internal.StateRepository.AppInstaller>  Find();
        AppInstaller();
        Int64 _AppInstallerID{ get; };
        Int64 _AppInstallerID{ set; };
        UInt64 _Revision{ get; };
        UInt64 _Revision{ set; };
        String Uri{ get; };
        String Uri{ set; };
        Windows.Foundation.Uri UriAsUri{ get; };
        Windows.Foundation.Uri UriAsUri{ set; };
        UInt64 Version{ get; };
        UInt64 Version{ set; };
        Windows.Foundation.DateTime LastChecked{ get; };
        Windows.Foundation.DateTime LastChecked{ set; };
        UInt32 CheckUpdateInterval{ get; };
        UInt32 CheckUpdateInterval{ set; };
        Windows.Internal.StateRepository.AppInstallerFlags Flags{ get; };
        Windows.Internal.StateRepository.AppInstallerFlags Flags{ set; };
        Boolean CheckInBackground{ get; };
        Boolean CheckInBackground{ set; };
        Boolean CheckOnLaunch{ get; };
        Boolean CheckOnLaunch{ set; };
        Boolean PromptToCheckOnLaunch{ get; };
        Boolean PromptToCheckOnLaunch{ set; };
        Boolean UpdateBlocksActivation{ get; };
        Boolean UpdateBlocksActivation{ set; };
        Boolean Is_DictionaryNull{ get; };
        void Set_DictionaryToNull();
        void Get_Dictionary(out UInt8[] value);
        void Set_Dictionary(UInt8[] value);
        Windows.Foundation.Collections.IPropertySet Get_DictionaryAsPropertySet();
    }


}
