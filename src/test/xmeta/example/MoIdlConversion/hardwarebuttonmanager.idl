






namespace Windows.Internal.ComposableShell
{
    [contract(Windows.Internal.ComposableShell.InternalContract, 1)]
    enum HardwareButtonEventType
    {
        VolumeUpPressed,
        VolumeUpReleased,
        VolumeDownPressed,
        VolumeDownReleased,
        PowerPressed,
        PowerReleased,
        MAX,
    };

    [contract(Windows.Internal.ComposableShell.InternalContract, 1)]
    [uuid(4a6f44e4-5ba6-4207-9e96-0b99378f2503)]
    interface IHardwareButtonClient
    {
        event Windows.Foundation.TypedEventHandler <Windows.Internal.ComposableShell.HardwareButtonClient, Object>  VolumeUpPressed;
        event Windows.Foundation.TypedEventHandler <Windows.Internal.ComposableShell.HardwareButtonClient, Object>  VolumeUpReleased;
        event Windows.Foundation.TypedEventHandler <Windows.Internal.ComposableShell.HardwareButtonClient, Object>  VolumeDownPressed;
        event Windows.Foundation.TypedEventHandler <Windows.Internal.ComposableShell.HardwareButtonClient, Object>  VolumeDownReleased;
        event Windows.Foundation.TypedEventHandler <Windows.Internal.ComposableShell.HardwareButtonClient, Object>  PowerPressed;
        event Windows.Foundation.TypedEventHandler <Windows.Internal.ComposableShell.HardwareButtonClient, Object>  PowerReleased;
    };

    [marshaling_behavior(agile)]
    [contract(Windows.Internal.ComposableShell.InternalContract, 1)]
    [threading(both)]
    runtimeclass HardwareButtonClient
        : [default]Windows.Internal.ComposableShell.IHardwareButtonClient
    {
        HardwareButtonClient();
    }

    [contract(Windows.Internal.ComposableShell.InternalContract, 1)]
    [uuid(5dec896e-ec06-4089-aa57-2cf8c25465ef)]
    interface IHardwareButtonEventArgs
    {
        Windows.Internal.ComposableShell.HardwareButtonEventType type{ get; };
    };

    [contract(Windows.Internal.ComposableShell.InternalContract, 1)]
    [uuid(34e3be99-e04d-4995-8ab7-2def7bfabc41)]
    interface IHardwareButtonManager
    {
        void RegisterButton(Windows.Foundation.TypedEventHandler <Windows.Internal.ComposableShell.IHardwareButtonManager, Windows.Internal.ComposableShell.IHardwareButtonEventArgs>  handler, HardwareButtonEventType type);
        void UnregisterButton(HardwareButtonEventType type);
    };

}
