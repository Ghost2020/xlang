












namespace Windows.ApplicationModel.Resources
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.ApplicationModel.Resources.IResourceLoaderStatics2", 0cc04141-6466-4989-9494-0b82dfc53f1f)]
    [interface_name("Windows.ApplicationModel.Resources.IResourceLoader", 08524908-16ef-45ad-a602-293637d7e61a)]
    [threading(both)]
    runtimeclass ResourceLoader
    {
        ResourceLoader();

        [contract(Windows.Foundation.UniversalApiContract, 8)]
        [feature(Velocity_AlwaysAlwaysEnabled)]
        [static_name("Windows.ApplicationModel.Resources.IResourceLoaderStatics3", 64609dfb-64ac-491b-8100-0e558d61c1d0)]
        {
            static Windows.ApplicationModel.Resources.ResourceLoader GetForUIContext(Windows.UI.UIContext context);
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [constructor_name("Windows.ApplicationModel.Resources.IResourceLoaderFactory", c33a3603-69dc-4285-a077-d5c0e47ccbe8)]
        {
            [method_name( "CreateResourceLoaderByName" )] ResourceLoader(String name);
        }
        [method_name("GetForCurrentView")] static Windows.ApplicationModel.Resources.ResourceLoader GetForCurrentView();
        [method_name("GetForCurrentViewWithName")] static Windows.ApplicationModel.Resources.ResourceLoader GetForCurrentView(String name);
        [method_name("GetForViewIndependentUse")] static Windows.ApplicationModel.Resources.ResourceLoader GetForViewIndependentUse();
        [method_name("GetForViewIndependentUseWithName")] static Windows.ApplicationModel.Resources.ResourceLoader GetForViewIndependentUse(String name);

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [static_name("Windows.ApplicationModel.Resources.IResourceLoaderStatics", bf777ce1-19c8-49c2-953c-47e9227b334e)]
        {
            static String GetStringForReference(Windows.Foundation.Uri uri);
        }
        String GetString(String resource);

        [interface_name("Windows.ApplicationModel.Resources.IResourceLoader2", 10eb6ec6-8138-48c1-bc65-e1f14207367c)]
        {
            String GetStringForUri(Windows.Foundation.Uri uri);
        }
    }





}
namespace Windows.ApplicationModel.Resources.Core
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    struct ResourceLayoutInfo
    {
        UInt32 MajorVersion;
        UInt32 MinorVersion;
        UInt32 ResourceSubtreeCount;
        UInt32 NamedResourceCount;
        Int32 Checksum;
    };


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Resources.Core.IResourceMap", 72284824-db8c-42f8-b08c-53ff357dad82)]
    runtimeclass ResourceMap
        : Windows.Foundation.Collections.IMapView<String, Windows.ApplicationModel.Resources.Core.NamedResource>
        , Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<String, Windows.ApplicationModel.Resources.Core.NamedResource> >
    {
        Windows.Foundation.Uri Uri{ get; };
        [method_name("GetValue")] Windows.ApplicationModel.Resources.Core.ResourceCandidate GetValue(String resource);
        [method_name("GetValueForContext")] Windows.ApplicationModel.Resources.Core.ResourceCandidate GetValue(String resource, ResourceContext context);
        Windows.ApplicationModel.Resources.Core.ResourceMap GetSubtree(String reference);
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.ApplicationModel.Resources.Core.IResourceContextStatics", 98be9d6c-6338-4b31-99df-b2b442f17149)]
    [interface_name("Windows.ApplicationModel.Resources.Core.IResourceContext", 2fa22f4b-707e-4b27-ad0d-d0d8cd468fd2)]
    [threading(both)]
    runtimeclass ResourceContext
    {
        ResourceContext();
        [return_name("value")] static Windows.ApplicationModel.Resources.Core.ResourceContext CreateMatchingContext(Windows.Foundation.Collections.IIterable <Windows.ApplicationModel.Resources.Core.ResourceQualifier>  result);

        [contract(Windows.Foundation.UniversalApiContract, 8)]
        [feature(Velocity_AlwaysAlwaysEnabled)]
        [static_name("Windows.ApplicationModel.Resources.Core.IResourceContextStatics4", 22eb9ccd-fb31-4bfa-b86b-df9d9d7bdc39)]
        {
            static Windows.ApplicationModel.Resources.Core.ResourceContext GetForUIContext(Windows.UI.UIContext context);
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [static_name("Windows.ApplicationModel.Resources.Core.IResourceContextStatics3", 20cf492c-af0f-450b-9da6-106dd0c29a39)]
        {
            [method_name("SetGlobalQualifierValueWithPersistence")] static void SetGlobalQualifierValue(String key, String value, ResourceQualifierPersistence persistence);
        }

        [contract(Windows.Foundation.UniversalApiContract, 1)]
        [static_name("Windows.ApplicationModel.Resources.Core.IResourceContextStatics2", 41f752ef-12af-41b9-ab36-b1eb4b512460)]
        {
            static Windows.ApplicationModel.Resources.Core.ResourceContext GetForCurrentView();
            [method_name("SetGlobalQualifierValue")] static void SetGlobalQualifierValue(String key, String value);
            [method_name("ResetGlobalQualifierValues")] static void ResetGlobalQualifierValues();
            [method_name("ResetGlobalQualifierValuesForSpecifiedQualifiers")] static void ResetGlobalQualifierValues(Windows.Foundation.Collections.IIterable <String>  qualifierNames);
            static Windows.ApplicationModel.Resources.Core.ResourceContext GetForViewIndependentUse();
        }
        Windows.Foundation.Collections.IObservableMap <String, String>  QualifierValues{ get; };
        [method_name("Reset")] void Reset();
        [method_name("ResetQualifierValues")] void Reset(Windows.Foundation.Collections.IIterable <String>  qualifierNames);
        void OverrideToMatch(Windows.Foundation.Collections.IIterable <Windows.ApplicationModel.Resources.Core.ResourceQualifier>  result);
        Windows.ApplicationModel.Resources.Core.ResourceContext Clone();
        Windows.Foundation.Collections.IVectorView <String>  Languages{ get; };
        Windows.Foundation.Collections.IVectorView <String>  Languages{ set; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Resources.Core.INamedResource", 1c98c219-0b13-4240-89a5-d495dc189a00)]
    runtimeclass NamedResource
    {
        Windows.Foundation.Uri Uri{ get; };
        Windows.Foundation.Collections.IVectorView <Windows.ApplicationModel.Resources.Core.ResourceCandidate>  Candidates{ get; };
        [method_name("Resolve")] Windows.ApplicationModel.Resources.Core.ResourceCandidate Resolve();
        [method_name("ResolveForContext")] Windows.ApplicationModel.Resources.Core.ResourceCandidate Resolve(ResourceContext resourceContext);
        [method_name("ResolveAll")] Windows.Foundation.Collections.IVectorView <Windows.ApplicationModel.Resources.Core.ResourceCandidate>  ResolveAll();
        [method_name("ResolveAllForContext")] Windows.Foundation.Collections.IVectorView <Windows.ApplicationModel.Resources.Core.ResourceCandidate>  ResolveAll(ResourceContext resourceContext);
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.ApplicationModel.Resources.Core.IResourceManagerStatics", 1cc0fdfc-69ee-4e43-9901-47f12687baf7)]
    [interface_name("Windows.ApplicationModel.Resources.Core.IResourceManager", f744d97b-9988-44fb-abd6-5378844cfa8b)]
    [threading(both)]
    runtimeclass ResourceManager
    {
        static Windows.ApplicationModel.Resources.Core.ResourceManager Current{ get; };
        static Boolean IsResourceReference(String resourceReference);
        Windows.ApplicationModel.Resources.Core.ResourceMap MainResourceMap{ get; };
        Windows.Foundation.Collections.IMapView <String, Windows.ApplicationModel.Resources.Core.ResourceMap>  AllResourceMaps{ get; };
        Windows.ApplicationModel.Resources.Core.ResourceContext DefaultContext{ get; };
        void LoadPriFiles(Windows.Foundation.Collections.IIterable <Windows.Storage.IStorageFile>  files);
        void UnloadPriFiles(Windows.Foundation.Collections.IIterable <Windows.Storage.IStorageFile>  files);

        [interface_name("Windows.ApplicationModel.Resources.Core.IResourceManager2", 9d66fe6c-a4d7-4c23-9e85-675f304c252d)]
        {
            Windows.Foundation.Collections.IVectorView <Windows.ApplicationModel.Resources.Core.NamedResource>  GetAllNamedResourcesForPackage(String packageName, ResourceLayoutInfo resourceLayoutInfo);
            Windows.Foundation.Collections.IVectorView <Windows.ApplicationModel.Resources.Core.ResourceMap>  GetAllSubtreesForPackage(String packageName, ResourceLayoutInfo resourceLayoutInfo);
        }
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Resources.Core.IResourceQualifier", 785da5b2-4afd-4376-a888-c5f9a6b7a05c)]
    runtimeclass ResourceQualifier
    {
        String QualifierName{ get; };
        String QualifierValue{ get; };
        Boolean IsDefault{ get; };
        Boolean IsMatch{ get; };
        Double Score{ get; };
    }




    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum ResourceQualifierPersistence
    {
        None,
        LocalMachine,
    };





    [contract(Windows.Foundation.UniversalApiContract, 8)]
    enum ResourceCandidateKind
    {
        String,
        File,
        EmbeddedData,
    };


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.ApplicationModel.Resources.Core.IResourceCandidate", af5207d9-c433-4764-b3fd-8fa6bfbcbadc)]
    runtimeclass ResourceCandidate
    {
        Windows.Foundation.Collections.IVectorView <Windows.ApplicationModel.Resources.Core.ResourceQualifier>  Qualifiers{ get; };
        Boolean IsMatch{ get; };
        Boolean IsMatchAsDefault{ get; };
        Boolean IsDefault{ get; };
        String ValueAsString{ get; };
        Windows.Foundation.IAsyncOperation <Windows.Storage.StorageFile>  GetValueAsFileAsync();
        String GetQualifierValue(String qualifierName);

        [interface_name("Windows.ApplicationModel.Resources.Core.IResourceCandidate2", 69e5b468-f6fc-4013-aaa2-d53f1757d3b5)]
        {
            Windows.Foundation.IAsyncOperation <Windows.Storage.Streams.IRandomAccessStream>  GetValueAsStreamAsync();
        }

        [contract(Windows.Foundation.UniversalApiContract, 8)]
        [interface_name("Windows.ApplicationModel.Resources.Core.IResourceCandidate3", 08ae97f8-517a-4674-958c-4a3c7cd2cc6b)]
        {
            Windows.ApplicationModel.Resources.Core.ResourceCandidateKind Kind{ get; };
        }
    }



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    runtimeclass ResourceMapIterator
        : [default]Windows.Foundation.Collections.IIterator<Windows.Foundation.Collections.IKeyValuePair<String, Windows.ApplicationModel.Resources.Core.NamedResource> >
    {
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    runtimeclass ResourceMapMapView
        : [default]Windows.Foundation.Collections.IMapView<String, Windows.ApplicationModel.Resources.Core.ResourceMap>
        , Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<String, Windows.ApplicationModel.Resources.Core.ResourceMap> >
    {
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    runtimeclass ResourceMapMapViewIterator
        : [default]Windows.Foundation.Collections.IIterator<Windows.Foundation.Collections.IKeyValuePair<String, Windows.ApplicationModel.Resources.Core.ResourceMap> >
    {
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    runtimeclass ResourceQualifierObservableMap
        : [default]Windows.Foundation.Collections.IObservableMap<String, String>
        , Windows.Foundation.Collections.IMap<String, String>
        , Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<String, String> >
    {
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    runtimeclass ResourceQualifierMapView
        : [default]Windows.Foundation.Collections.IMapView<String, String>
        , Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<String, String> >
    {
    }

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    runtimeclass ResourceQualifierVectorView
        : [default]Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Resources.Core.ResourceQualifier>
        , Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Resources.Core.ResourceQualifier>
    {
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    runtimeclass ResourceCandidateVectorView
        : [default]Windows.Foundation.Collections.IVectorView<Windows.ApplicationModel.Resources.Core.ResourceCandidate>
        , Windows.Foundation.Collections.IIterable<Windows.ApplicationModel.Resources.Core.ResourceCandidate>
    {
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    runtimeclass ResourceContextLanguagesVectorView
        : [default]Windows.Foundation.Collections.IVectorView<String>
        , Windows.Foundation.Collections.IIterable<String>
    {
    }

}
