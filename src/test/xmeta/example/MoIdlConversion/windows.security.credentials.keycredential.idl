









namespace Windows.Security.Credentials
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum KeyCredentialStatus
    {
        Success,
        UnknownError,
        NotFound,
        UserCanceled,
        UserPrefersPassword,
        CredentialAlreadyExists,
        SecurityDeviceLocked,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum KeyCredentialAttestationStatus
    {
        Success,
        UnknownError,
        NotSupported,
        TemporaryFailure,
    };

    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum KeyCredentialCreationOption
    {
        ReplaceExisting,
        FailIfExists,
    };


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [dualapipartition(0xa000000)]
    [interface_name("Windows.Security.Credentials.IKeyCredentialRetrievalResult", 58cd7703-8d87-4249-9b58-f6598cc9644e)]
    runtimeclass KeyCredentialRetrievalResult
    {
        Windows.Security.Credentials.KeyCredential Credential{ get; };
        Windows.Security.Credentials.KeyCredentialStatus Status{ get; };
    }


    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Security.Credentials.IKeyCredentialOperationResult", f53786c1-5261-4cdd-976d-cc909ac71620)]
    runtimeclass KeyCredentialOperationResult
    {
        Windows.Storage.Streams.IBuffer Result{ get; };
        Windows.Security.Credentials.KeyCredentialStatus Status{ get; };
    }

    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Security.Credentials.IKeyCredentialAttestationResult", 78aab3a1-a3c1-4103-b6cc-472c44171cbb)]
    runtimeclass KeyCredentialAttestationResult
    {
        Windows.Storage.Streams.IBuffer CertificateChainBuffer{ get; };
        Windows.Storage.Streams.IBuffer AttestationBuffer{ get; };
        Windows.Security.Credentials.KeyCredentialAttestationStatus Status{ get; };
    }


    [dualapipartition(0xa000000)]
    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Security.Credentials.IKeyCredential", 9585ef8d-457b-4847-b11a-fa960bbdb138)]
    runtimeclass KeyCredential
    {
        String Name{ get; };
        [method_name("RetrievePublicKeyWithDefaultBlobType")] Windows.Storage.Streams.IBuffer RetrievePublicKey();
        [method_name("RetrievePublicKeyWithBlobType")] Windows.Storage.Streams.IBuffer RetrievePublicKey(Windows.Security.Cryptography.Core.CryptographicPublicKeyBlobType blobType);
        [remote_sync]Windows.Foundation.IAsyncOperation <Windows.Security.Credentials.KeyCredentialOperationResult>  RequestSignAsync(Windows.Storage.Streams.IBuffer data);
        [remote_sync]Windows.Foundation.IAsyncOperation <Windows.Security.Credentials.KeyCredentialAttestationResult>  GetAttestationAsync();
    }



    [dualapipartition(0xa000000)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [static_name("Windows.Security.Credentials.IKeyCredentialManagerStatics", 6aac468b-0ef1-4ce0-8290-4106da6a63b5)]
    [threading(both)]
    runtimeclass KeyCredentialManager
    {
        static Windows.Foundation.IAsyncOperation <Boolean>  IsSupportedAsync();
        static Windows.Foundation.IAsyncAction RenewAttestationAsync();
        [remote_sync]static Windows.Foundation.IAsyncOperation <Windows.Security.Credentials.KeyCredentialRetrievalResult>  RequestCreateAsync(String name, KeyCredentialCreationOption option);
        static Windows.Foundation.IAsyncOperation <Windows.Security.Credentials.KeyCredentialRetrievalResult>  OpenAsync(String name);
        static Windows.Foundation.IAsyncAction DeleteAsync(String name);
    }

}
