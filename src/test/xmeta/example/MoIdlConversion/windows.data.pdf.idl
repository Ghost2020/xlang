











namespace Windows.Data.Pdf
{
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    enum PdfPageRotation
    {
        Normal,
        Rotate90,
        Rotate180,
        Rotate270,
    };



    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [marshaling_behavior(agile)]
    [interface_name("Windows.Data.Pdf.IPdfPageRenderOptions", 3c98056f-b7cf-4c29-9a04-52d90267f425)]
    runtimeclass PdfPageRenderOptions
    {
        PdfPageRenderOptions();
        Windows.Foundation.Rect SourceRect{ get; };
        Windows.Foundation.Rect SourceRect{ set; };
        UInt32 DestinationWidth{ get; };
        UInt32 DestinationWidth{ set; };
        UInt32 DestinationHeight{ get; };
        UInt32 DestinationHeight{ set; };
        Windows.UI.Color BackgroundColor{ get; };
        Windows.UI.Color BackgroundColor{ set; };
        Boolean IsIgnoringHighContrast{ get; };
        Boolean IsIgnoringHighContrast{ set; };
        Guid BitmapEncoderId{ get; };
        Guid BitmapEncoderId{ set; };
    }

    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Data.Pdf.IPdfPageDimensions", 22170471-313e-44e8-835d-63a3e7624a10)]
    runtimeclass PdfPageDimensions
    {
        Windows.Foundation.Rect MediaBox{ get; };
        Windows.Foundation.Rect CropBox{ get; };
        Windows.Foundation.Rect BleedBox{ get; };
        Windows.Foundation.Rect TrimBox{ get; };
        Windows.Foundation.Rect ArtBox{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [interface_name("Windows.Data.Pdf.IPdfPage", 9db4b0c8-5320-4cfc-ad76-493fdad0e594)]
    runtimeclass PdfPage
        : Windows.Foundation.IClosable
    {
        [method_name("RenderToStreamAsync")] Windows.Foundation.IAsyncAction RenderToStreamAsync(Windows.Storage.Streams.IRandomAccessStream outputStream);
        [method_name("RenderWithOptionsToStreamAsync")] [remote_sync]Windows.Foundation.IAsyncAction RenderToStreamAsync(Windows.Storage.Streams.IRandomAccessStream outputStream, PdfPageRenderOptions options);
        Windows.Foundation.IAsyncAction PreparePageAsync();
        UInt32 Index{ get; };
        Windows.Foundation.Size Size{ get; };
        Windows.Data.Pdf.PdfPageDimensions Dimensions{ get; };
        Windows.Data.Pdf.PdfPageRotation Rotation{ get; };
        Single PreferredZoom{ get; };
    }


    [marshaling_behavior(agile)]
    [contract(Windows.Foundation.UniversalApiContract, 1)]
    [static_name("Windows.Data.Pdf.IPdfDocumentStatics", 433a0b5f-c007-4788-90f2-08143d922599)]
    [interface_name("Windows.Data.Pdf.IPdfDocument", ac7ebedd-80fa-4089-846e-81b77ff5a86c)]
    runtimeclass PdfDocument
    {
        [method_name("LoadFromFileAsync")] static Windows.Foundation.IAsyncOperation <Windows.Data.Pdf.PdfDocument>  LoadFromFileAsync(Windows.Storage.IStorageFile file);
        [method_name("LoadFromFileWithPasswordAsync")] static Windows.Foundation.IAsyncOperation <Windows.Data.Pdf.PdfDocument>  LoadFromFileAsync(Windows.Storage.IStorageFile file, String password);
        [method_name("LoadFromStreamAsync")] static Windows.Foundation.IAsyncOperation <Windows.Data.Pdf.PdfDocument>  LoadFromStreamAsync(Windows.Storage.Streams.IRandomAccessStream inputStream);
        [method_name("LoadFromStreamWithPasswordAsync")] static Windows.Foundation.IAsyncOperation <Windows.Data.Pdf.PdfDocument>  LoadFromStreamAsync(Windows.Storage.Streams.IRandomAccessStream inputStream, String password);
        Windows.Data.Pdf.PdfPage GetPage(UInt32 pageIndex);
        UInt32 PageCount{ get; };
        Boolean IsPasswordProtected{ get; };
    }

}
