jobs:
- job: generate_projection
  pool:
    vmImage: 'windows-2019'

  steps:
  - template: vsdevcmd.yml
    parameters:
      buildArchitecture: 'x86'  
      hostArchitecture: 'x86'

  - task: CMake@1
    displayName: 'Generate xlang build files via cmake'
    inputs:
      cwd: '.'
      cmakeArgs: -S src -B_build -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=cl -DCMAKE_CXX_COMPILER=cl

  - task: CMake@1
    displayName: 'build pywinrt'
    inputs:
      cwd: '.'
      cmakeArgs: --build .\_build -- -v pywinrt

  - task: CopyFiles@2
    inputs:
      sourceFolder: _build\tool\python\
      contents: pywinrt.exe
      targetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifact: pywinrt'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'pywinrt'

- job: build_projection
  dependsOn: generate_projection
  pool:
    vmImage: 'windows-2019'
  timeoutInMinutes: 120
  strategy:
    maxParallel: 10
    matrix:
      Release_x86:
        buildArchitecture: 'x86'
        buildConfiguration: 'Release'
      Release_x64:
        buildArchitecture: 'amd64'
        buildConfiguration: 'Release'

  variables:
    cppwinrtDir : $(build.artifactStagingDirectory)\cppwinrt
    pywinrtDir : $(build.artifactStagingDirectory)\pywinrt
    publishDir : $(Build.ArtifactStagingDirectory)\$(buildArchitecture)-$(buildConfiguration)

  steps:
  - task: DownloadBuildArtifacts@0 
    inputs: 
      buildType: 'current'
      downloadType: single
      artifactName: 'pywinrt'
      downloadPath: '$(Build.ArtifactStagingDirectory)'

  - script: $(Build.ArtifactStagingDirectory)/pywinrt/pywinrt.exe -input 10.0.17763.0 -output src/package/pywinrt/projection/pywinrt -verbose -include Windows.Foundation -include Windows.Data.Json -include Windows.Devices.Geolocation -exclude Windows.UI.Composition -exclude Windows.UI.Xaml
    displayName: 'Generate Python/WinRT Projection'

  # 333b11bd-d341-40d9-afcf-b32d5ce6f23b is the task guid for NuGetCommand (https://github.com/Microsoft/azure-pipelines-tasks/tree/master/Tasks/NuGetCommandV2)
  # microsoft.visualstudio.com has a conflicting "NuGetCommand", so use task guid to disambiguate
  - task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2
    displayName: 'NuGet install Microsoft.Windows.CppWinRT'
    inputs:
      command: custom
      arguments: 'install Microsoft.Windows.CppWinRT -ExcludeVersion -OutputDirectory _tools'

  - script: _tools\Microsoft.Windows.CppWinRT\bin\cppwinrt.exe -input 10.0.17763.0 -output src/package/pywinrt/projection/cppwinrt -verbose
    displayName: 'Generate C++/WinRT Projections'

  - template: vsdevcmd.yml
    parameters:
      buildArchitecture: $(buildArchitecture)  
      hostArchitecture: 'amd64'
  - template: findpython.yml
    parameters:
      architecture: $(buildArchitecture)  
      versionSpec: '3.7.x'

  - task: CMake@1
    displayName: 'Generate python projection build files via cmake'
    inputs:
      cwd: '.'
      cmakeArgs: '-S src/package/pywinrt/projection -B_build -GNinja -DCMAKE_BUILD_TYPE=$(buildConfiguration) -DCMAKE_C_COMPILER=cl -DCMAKE_CXX_COMPILER=cl'

  - task: CMake@1
    displayName: 'build python projection'
    inputs:
      cwd: '.'
      cmakeArgs: '--build .\_build -- -v'

  - task: CopyFiles@2
    inputs:
      sourceFolder: _build
      contents: '*.pyd'
      targetFolder: src/package/pywinrt/projection/pywinrt/winrt

  - script: pip install wheel
    displayName: pip install wheel

  - script: python setup.py bdist_wheel --python-tag cp37 -p win-$(buildArchitecture)
    workingDirectory: src/package/pywinrt/projection/pywinrt
    displayName: python setup.py bdist_wheel 

  - task: CopyFiles@2
    inputs:
      sourceFolder: src/package/pywinrt/projection/pywinrt/dist
      contents: '*'
      targetFolder: $(Build.ArtifactStagingDirectory)/dist

  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifact: winrt-wheel'
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)/dist
      artifactName: winrt-wheel

