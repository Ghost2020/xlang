

parameters:
  targetArchitecture: 'x64'  # defaults for any parameters that aren't specified

jobs:
- job: "PythonWinRTProjection_${{ parameters.targetArchitecture }}"
  pool:
    vmImage: 'windows-2019'
  timeoutInMinutes: 120
  steps:
  - script: |
      @echo off
      
      set vswherepath="%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe"
      for /f "usebackq delims=" %%i in (`%vswherepath% -latest -property installationPath`) do (
        set vslatest="%%i"
        if exist "%%i\Common7\Tools\vsdevcmd.bat" (
          set vsdevcmd="%%i\Common7\Tools\vsdevcmd.bat"
        )
      )
      
      @echo vslatest %vslatest%
      @echo vsdevcmd %vsdevcmd%
      
      @echo ##vso[task.setvariable variable=vslatest]%vslatest%
      @echo ##vso[task.setvariable variable=vsdevcmd]%vsdevcmd%
    displayName: 'locate vsdevcmd via vswhere'

  - task: BatchScript@1
    displayName: 'Configure environment with VSDevCmd (arch x86/host x86)'
    inputs:
      filename: 'src/scripts/windows/call-batchfile.bat'
      arguments: '%vsdevcmd% -host_arch=x86 -arch=x86'
      modifyEnvironment: true

  - task: CMake@1
    displayName: 'Generate xlang build files via cmake'
    inputs:
      cwd: '.'
      cmakeArgs: '-S src -B_build -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=cl -DCMAKE_CXX_COMPILER=cl -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON'

  - task: CMake@1
    displayName: 'build pywinrt'
    inputs:
      cwd: '.'
      cmakeArgs: '--build .\_build -- -v pywinrt'

  # 333b11bd-d341-40d9-afcf-b32d5ce6f23b is the task guid for NuGetCommand (https://github.com/Microsoft/azure-pipelines-tasks/tree/master/Tasks/NuGetCommandV2)
  # microsoft.visualstudio.com has a conflicting "NuGetCommand", so use task guid to disambiguate
  - task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2
    displayName: 'NuGet install Microsoft.Windows.CppWinRT'
    inputs:
      command: custom
      arguments: 'install Microsoft.Windows.CppWinRT -ExcludeVersion -OutputDirectory _tools'

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7.x' 
      addToPath: true 
      architecture: ${{ parameters.targetArchitecture }}

  - script: pip install wheel
  # - script: |
  #     _tools\Microsoft.Windows.CppWinRT\bin\cppwinrt.exe -input 10.0.17763.0 -output src\package\pywinrt\projection\cppwinrt -verbose
  #   displayName: 'Generate C++/WinRT Projections'

  # - script: |
  #     _build\tool\python\pywinrt.exe -input 10.0.17763.0 -output src\package\pywinrt\projection\pywinrt -verbose -include Windows. -exclude Windows.UI.Composition -exclude Windows.UI.Xaml
  #   displayName: 'Generate Python/WinRT Projection'

  # - task: BatchScript@1
  #   displayName: 'Configure environment with VSDevCmd (arch ${{ parameters.targetArchitecture }}/host x64)'
  #   inputs:
  #     filename: 'src/scripts/windows/call-batchfile.bat'
  #     arguments: '%vsdevcmd% -host_arch=amd64 -arch=${{ parameters.targetArchitecture }}'
  #     modifyEnvironment: true

  # - task: CMake@1
  #   displayName: 'Generate python projection build files via cmake'
  #   inputs:
  #     cwd: '.'
  #     cmakeArgs: '-S src/package/pywinrt/projection -B_build.projection -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=cl -DCMAKE_CXX_COMPILER=cl -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON'

  # - task: CMake@1
  #   displayName: 'build python projection'
  #   inputs:
  #     cwd: '.'
  #     cmakeArgs: '--build .\_build.projection -- -v '
